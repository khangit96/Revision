
=========================================================ANDROID=====================================================================================
**TẠO RA 1 ĐƯỜNG THẲNG THÌ CÓ THỂ DÙNG VIEW
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 ***Get view at position listview
 lv.setOnItemClickListener(new AdapterView.OnItemClickListener() {
            @Override
            public void onItemClick(AdapterView<?> adapterView, View view, int pos, long l) {
               View v= adapterView.getChildAt(0);
                v.setBackgroundColor(getResources().getColor(R.color.colorAccent));

            }
        });

***Chang color view when click in listview
lv.setOnItemClickListener(new AdapterView.OnItemClickListener() {
            @Override
            public void onItemClick(AdapterView<?> adapterView, View viewCurrent, int posCurrent, long l) {
                if (position != -1) {
                    View v = adapterView.getChildAt(position);//get view at position
                    v.setBackgroundColor(getResources().getColor(R.color.white));
                }

                viewCurrent.setBackgroundColor(getResources().getColor(R.color.colorAccent));
                position = posCurrent;

            }
        });
----------------------------------------------------------------------------------------------------------------------------------------------------------
***AutoCompleteTextView
-------------------------------------------------------------------------------------------------------------------------------------------------------------
***Soundpool
--------------------------------------------------------------------------------------------------------------------------------------------------------
***Timer
-------------------------------------------------------------------------------------------------------------------------------------------------------------
***Dữ liệu cố định thì nên đưa vào String-array in value/strings.xml
----------------------------------------------------------------------------------------------------------------------------------------------------------
***setVisibility(View.GONE)/setVisibility(View.Invisible)
---------------------------------------------------------------------------------------------------------------------------------------------------------
***Animattion 
tv.startAnimation(AnimationUtils.loadAnimation(MainActivity.this,android.R.anim.slide_out_right));
---------------------------------------------------------------------------------------------------------------------------------------------------------
***Handler:là 1 thread có thể cập nhật lại giao diện.Có thể kết hợp với cái Worker Thread(không thể cập nhật lại giao diện người dùng)
protected static void startTimer() {
    isTimerRunning = true; 
    timer.scheduleAtFixedRate(new TimerTask() {
        public void run() {
            elapsedTime += 1; //increase every sec
            mHandler.obtainMessage(1).sendToTarget();
        }
    }, 0, 1000);
}

public Handler mHandler = new Handler() {
    public void handleMessage(Message msg) {
        StopWatch.time.setText(formatIntoHHMMSS(elapsedTime)); //this is the textview
    }
};
------------------------------------------------------------------------------------------------------------------------------------------------------------
**ProgressBar
------------------------------------------------------------------------------------------------------------------------------------------------------------
**AsyncTask chạy độc lập với các công việc khác cho dù thứ tự thực hiện của nó có thể nằm sau các công việc khác
--------------------------------------------------------------------------------------------------------------------------------------------------------------

***Set full screen android
 // Set fullscreen
        this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
                WindowManager.LayoutParams.FLAG_FULLSCREEN);

 // Set No Title
        this.requestWindowFeature(Window.FEATURE_NO_TITLE

**Theme no actionBar
<style name="NoActionBar" parent="Theme.AppCompat.Light.NoActionBar"/>
---------------------------------------------------------------------------------------------------------------------------------------------------------------
***Kill Background Service
<uses-permission android:name="android.permission.KILL_BACKGROUND_PROCESSES"/>
  ActivityManager activityManager= (ActivityManager) getSystemService(Context.ACTIVITY_SERVICE);
  activityManager.killBackgroundProcesses(getPackageName());
  
 -------------------------------------------------------------------------------------------------------------------------------------------------------------
 ***TimePickerDialog
 -----------------------------------------------------------------------------------------------------------------------------------------------------------
 **DatePickerDialog
 ------------------------------------------------------------------------------------------------------------------------------------------------------------
 **Get location by using google play service
 ---------------------------------------------------------------------------------------------------------------------------------------------------------------
 ***Spinner:dùng để hiện thị dữ liệu giống như listview
 ---------------------------------------------------------------------------------------------------------------------------------------------------------
 ***Popup menu:dùng để thể hiện action như take photo,send sms
 ------------------------------------------------------------------------------------------------------------------------------------------------------------------
  ***GridLayout
  ------------------------------------------------------------------------------------------------------------------------------------------------------------
  ***TableLayout
  ----------------------------------------------------------------------------------------------------------------------------------------------------------
  ***Create button using java code
  -----------------------------------------------------------------------------------------------------------------------------------------------------------
  ***FrameLayout
  ------------------------------------------------------------------------------------------------------------------------------------------------------------
  ***Google map 
  +Mở được google map mà chỉ hiện thị trên 1 phần của app
  +Tự xác định được vị trí hiện tại
  +Cập nhật vị trí khi di chuyển
  +Hiển thị được 1 tọa độ bất kì lên map
  +Tạo được maker
  +Chọn các chế độ hiển thị của google map
  +Chỉ đường đi từ A đến B
  +Vẽ địa điểm trên google map
  //OnMyLocationChangeListener
    GoogleMap.OnMyLocationChangeListener listener=new GoogleMap.OnMyLocationChangeListener() {
        @Override
        public void onMyLocationChange(Location location) {
            LatLng hcmus = new LatLng(location.getLatitude(),location.getLongitude());
            mMap.addMarker(new MarkerOptions().position(hcmus).title("Chỗ tui đứng"));
            mMap.moveCamera(CameraUpdateFactory.newLatLngZoom(hcmus, 16f));
        }
    };

/*On Map Ready*/
	    mMap.setMyLocationEnabled(true);
        mMap.setOnMyLocationChangeListener(listener);
        LatLng hcmus = new LatLng(10.762984,106.682329);
        mMap.addMarker(new MarkerOptions().position(hcmus).title("KHTN"));
        mMap.moveCamera(CameraUpdateFactory.newLatLngZoom(hcmus, 16f));
        LatLng dhsg=new LatLng(10.759677,106.682387);
		//draw Polyline
        mMap.addPolyline(new PolylineOptions().add(
                        hcmus,
                        new LatLng(10.761184, 106.683331),
                        new LatLng(10.760710, 106.682204),
                        dhsg)
                        .width(10)
                        .color(Color.RED)

        );
/*Google map direction API*/
https://maps.googleapis.com/maps/api/directions/json?origin=10.8325783,106.3509766&destination=10.8324716,106.3510016&key=AIzaSyAzxaiKRJ88fKFkSapcaoJG1SDjtn5cPt0
  ------------------------------------------------------------------------------------------------------------------------------------------------------------
  ***Google cloud message
 -------------------------------------------------------------------------------------------------------------------------------------------------------------
 ***Multiple choices Dialog
     public void Group(View v) {
        String[] group = new String[]{"Facebook", "Zalo", "Zing"};
        boolean[] check = new boolean[]{true, false, true};
        AlertDialog alertDialog = new AlertDialog.Builder(MainActivity.this)
                .setTitle("Multiple choices")
                .setPositiveButton("Ok", new DialogInterface.OnClickListener() {
                    @Override
                    public void onClick(DialogInterface dialog, int which) {

                    }
                })
                .setNegativeButton("Cancel", new DialogInterface.OnClickListener() {
                    @Override
                    public void onClick(DialogInterface dialog, int which) {

                    }
                })
                .setMultiChoiceItems(group, check, new DialogInterface.OnMultiChoiceClickListener() {
                    @Override
                    public void onClick(DialogInterface dialog, int which, boolean isChecked) {

                    }
                })
                .create();
        alertDialog.show();
    }

-----------------------------------------------------------------------------------------------------------------------------------------------------------
**Single choices Dialog
 -------------------------------------------------------------------------------------------------------------------------------------------------------------
***Check gps state 
 final LocationManager locationManager = (LocationManager) getSystemService(LOCATION_SERVICE);
        String provider = locationManager.GPS_PROVIDER;
        if (!locationManager.isProviderEnabled(provider)) {
            //check if gps disable
            Toast.makeText(getBaseContext(), "GPS is disable", Toast.LENGTH_LONG).show();
             startActivity( new Intent(Settings.ACTION_LOCATION_SOURCE_SETTINGS));//open location setting
        } else {
            //check if gps enabled
            Toast.makeText(getBaseContext(), "GPS is enabled", Toast.LENGTH_LONG).show();
        } 
 
-------------------------------------------------------------------------------------------------------------------------------------------------------------
***Convert image to String
 public String ImageView_To_String(ImageView iv){
        BitmapDrawable drawable = (BitmapDrawable) iv.getDrawable();
        Bitmap bmp = drawable.getBitmap();
        ByteArrayOutputStream stream = new ByteArrayOutputStream();
        bmp.compress(Bitmap.CompressFormat.PNG, 100, stream);
        byte[] byteArray = stream.toByteArray();
        String strHinh = Base64.encodeToString(byteArray, 0);
        return strHinh;
    }
***String to ImageView
 public void String_To_ImageView(String strBase64, ImageView iv){
        byte[] decodedString = Base64.decode(strBase64, Base64.DEFAULT);
        Bitmap decodedByte = BitmapFactory.decodeByteArray(decodedString, 0, decodedString.length);
        iv.setImageBitmap(decodedByte);
    }
--------------------------------------------------------------------------------------------------------------------------------------------------------------
***Sort ArrayList in java
       tv=(TextView)findViewById(R.id.tv);
        arrName=new ArrayList<>();
        arrName.add("1");
        arrName.add("5");
        arrName.add("2");
        arrName.add("4");
        arrName.add("8");
        String result="";
      /*  before sort
        for(int i=0;i<arrName.size();i++){
            result+=arrName.get(i);
            result+=" ";
        }
        tv.setText(result);*/

        /*After sort*/
        Collections.sort(arrName);//sort by ascending
        for(int i=0;i<arrName.size();i++){
            result+=arrName.get(i);
            result+=" ";
        }
        tv.setText(result);
		
**Sort ArrayList object
//MainActivity.java
 arrPerson=new ArrayList<>();
        arrPerson.add(new Person("Duy Khang",40));
        arrPerson.add(new Person("Thùy Linh",50));
        arrPerson.add(new Person("Văn Tiến", 30));
        Collections.sort(arrPerson);
        String result="";
        for(int i=0;i<arrPerson.size();i++){
            result+=arrPerson.get(i).getName();
            result+=",";
        }
        tv.setText(result);
		
//Person.java
public class Person implements Comparable<Person>{
    private String name;
    private int age;

    public Person(String name, int age) {
        this.name = name;
        this.age = age;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public int getAge() {
        return age;
    }

    public void setAge(int age) {
        this.age = age;
    }

    @Override
    public String toString() {
        return super.toString();
    }

    @Override
    public int compareTo(Person p) {
        int compareage=((Person)p).getAge();
        /* For Ascending order*/
        return this.getAge()-compareage;

        /* For Descending order do like this */
        //return compareage-this.studentage;
    }
}

-----------------------------------------------------------------------------------------------------------------------------------------------------------
***Append TextView:nối thêm text cho TextView
--------------------------------------------------------------------------------------------------------------------------------------------------------------
***Webservice using Laravel FrameWork
RestfulController:nó là Controller hổ trợ sẵn chúng ta các phương thức để show,edit,update,destroy,store..
//example
*GET
http://localhost/code/WebServiceLaravel/public/SanPham/ // sẽ gọi phương thức index()  để lấy tất cả các sản phẩm
http://localhost/code/WebServiceLaravel/public/SanPham/1 // gọi phương thức show() để lấy sản phẩm có id=1 

*POST
http://localhost/code/WebServiceLaravel/public/SanPham/ //sẽ goi phương thức store() để tạo mới sản phẩm
http://localhost/code/WebServiceLaravel/public/SanPham/1 //nếu _method là PUT thì sẽ gọi phương thức update() để cập nhật sản phẩm
http://localhost/code/WebServiceLaravel/public/SanPham/1 //nếu _method là DELETE thì sẽ gọi phương thức destroy() để xóa sản phẩm

***POST client side
private String POST_URL(String url, String type) {
        HttpClient httpClient = new DefaultHttpClient();

        // URL của trang web nhận request
        HttpPost httpPost = new HttpPost(url);

        // Các tham số truyền
        List nameValuePair = new ArrayList(4);
        nameValuePair.add(new BasicNameValuePair("TenSP", edtTenSP.getText().toString()));

        String sHinh =  ImageView_To_String(imgvHinhSP);
        nameValuePair.add(new BasicNameValuePair("HinhSP", sHinh));

        nameValuePair.add(new BasicNameValuePair("Gia", edtGiaSP.getText().toString()));

        nameValuePair.add(new BasicNameValuePair("_method", type));

        //Encoding POST data
        try {
            httpPost.setEntity(new UrlEncodedFormEntity(nameValuePair));
        } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
        }

        String kq = "";
        try {
            HttpResponse response = httpClient.execute(httpPost);
            HttpEntity entity = response.getEntity();
            kq = EntityUtils.toString(entity);
        } catch (ClientProtocolException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }

        return kq;
    }
***GET Show all product
private static String GET_URL(String theUrl)
    {
        StringBuilder content = new StringBuilder();
        try
        {
            URL url = new URL(theUrl);
            URLConnection urlConnection = url.openConnection();
            BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(urlConnection.getInputStream()));
            String line;
            while ((line = bufferedReader.readLine()) != null)
            {
                content.append(line + "\n");
            }
            bufferedReader.close();
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
        return content.toString();
    }
--------------------------------------------------------------------------------------------------------------------------------------------------------------
**kiểu final không thể thay đổi đk giá trị.
//example
final String name="khang";
name="huy";//không thể thay đổi giá trị name="huy";
--------------------------------------------------------------------------------------------------------------------------------------------------------
***Disable Home key android
https://github.com/shaobin0604/Android-HomeKey-Locker
------------------------------------------------------------------------------------------------------------------------------------------------------------
**String to byte array
String stringToConvert = "This String is 76 characters long and will be converted to an array of bytes";
byte[] theByteArray = stringToConvert.getBytes();
----------------------------------------------------------------------------------------------------------------------------------------------------------
Byte array to String
byte[] byteArray = new byte[] {87, 79, 87, 46, 46, 46};
String value = new String(byteArray);
----------------------------------------------------------------------------------------------------------------------------------------------------------------
***Custom Keyboard
---------------------------------------------------------------------------------------------------------------------------------------------------------------
***Notification
 //Simple notification
 Notification notification=new NotificationCompat.Builder(getApplicationContext())
                        .setContentTitle("New message")
                        .setContentText("You got a new message from Khangit")
                        .setSmallIcon(R.mipmap.ic_launcher)
                        .build();
                NotificationManager notificationManager= (NotificationManager) getSystemService(NOTIFICATION_SERVICE);
                notificationManager.notify(1,notification);

//Count notification:dùng cho trường hợp có nhiều notification từ app và giống nhau về id
              count++;
                Notification notification=new NotificationCompat.Builder(getApplicationContext())
                        .setContentTitle(count+"New message")
                        .setContentText("You got a new message from Khangit")
                         .setNumber(count)
                        .setSmallIcon(R.mipmap.ic_launcher)
                        .build();
                notificationManager.notify(2,notification);//2 là dùng để phân biệt các notification với nhau
				

//Open activity when click at notification
 Intent mainIntent=new Intent(getBaseContext(),DetailActivity.class);//activity muốn chuyển đến
                mainIntent.putExtra("messages","Hi, i am Khangit");//truyền dữ liệu qua activity muốn chuyển đến
                PendingIntent pendingIntentMain=PendingIntent.getActivity(getBaseContext(), 0, mainIntent,PendingIntent.FLAG_UPDATE_CURRENT);
                Notification notification=new NotificationCompat.Builder(getBaseContext())
                        .setContentTitle("New Message")
                        .setContentText("You got a new message from Khangit")
                        .setSmallIcon(R.mipmap.ic_launcher)
                        .setContentIntent(pendingIntentMain)
                        .build();
                notificationManager.notify(3,notification);
				
// Open Activity With Backstack:có nghĩa là click vào notification thì sẽ mở activity chi tiết và khi back lại thì sẽ quay lại home của ứng dụng
  Intent mainIntent=new Intent(getBaseContext(),DetailActivity.class);//activity muốn chuyển đến khi click vào notification
                TaskStackBuilder taskStackBuilder=TaskStackBuilder.create(getBaseContext());
                taskStackBuilder.addParentStack(DetailActivity.class);
                taskStackBuilder.addNextIntent(mainIntent);
                mainIntent.putExtra("messages","Hi, i am Khangit");
                PendingIntent pendingDetail=taskStackBuilder.getPendingIntent(0,PendingIntent.FLAG_UPDATE_CURRENT);
                Notification notification=new NotificationCompat.Builder(getBaseContext())
                        .setContentTitle("New Message")
                        .setContentText("You got a new message from Khangit")
                        .setSmallIcon(R.mipmap.ic_launcher)
                        .setAutoCancel(true)//tự động close notification khi click vào
                        .setContentIntent(pendingDetail)
                        .build();
                notificationManager.notify(4,notification);
				
	/**AndroidMaintifest.xml**/			
  <activity
            android:name=".DetailActivity"
            android:label="@string/title_activity_detail"
            android:parentActivityName=".MainActivity"
            android:theme="@style/AppTheme.NoActionBar" >
        </activity>
				
**Note:đối với api 21 trở lên thì android có hổ trợ thêm cơ chế bảo mật notification đối với những message nhạy cảm

//Add action to notification:sử dụng broadcast để delete 
 Intent replyIntent=new Intent(getBaseContext(),ReplyActivity.class);
                replyIntent.putExtra("reply_to","khangit");
                Intent deleteIntent=new Intent();
                deleteIntent.setAction("delete_message");
                PendingIntent pendingDelete=PendingIntent.getBroadcast(getBaseContext(),0,deleteIntent,PendingIntent.FLAG_UPDATE_CURRENT);
                PendingIntent pendingReply=PendingIntent.getActivity(getBaseContext(), 0, replyIntent, PendingIntent.FLAG_UPDATE_CURRENT);
                Notification notification=new NotificationCompat.Builder(getBaseContext())
                        .setContentTitle("New Message")
                        .setContentText("You got a new message from Khangit")
                        .setSmallIcon(R.mipmap.ic_launcher)
                        .setAutoCancel(true)
                        .addAction(R.mipmap.ic_launcher,"Reply",pendingReply)
                        .addAction(R.mipmap.ic_launcher, "Delete", pendingDelete)
                        .build();
                notificationManager.notify(7,notification);
				
  /**AndroidMaintifest.xml**/
				 <receiver android:name=".DeleteBroadcast">
            <intent-filter>
                <action android:name="delete_message"/>
            </intent-filter>
        </receiver>
		
/**DeleteBroadcast.java**/
public class DeleteBroadcast extends BroadcastReceiver {
    @Override
    public void onReceive(Context context, Intent intent) {
        Log.d("test","Deleted");
    }
}
-----------------------------------------------------------------------------------------------------------------------------------------------------------
***Alarm Service:là dịch vụ  giúp chúng ta làm những việc có tính chất lặp lại như báo thức giờ ...(chạy ngầm)
Đối với android 5.0 trở lên (api >=21) thì khoảng thời gian lặp lại phải từ 1 phút trở lên(>=60000 milisecond)

  public void Start(View v){
	  //nếu đúng khoảng thời gian đã xác định thì hệ thống sẽ gửi 1 broadcast.
        Calendar calendar=Calendar.getInstance();
        Intent intentAction=new Intent();
        intentAction.setAction("alarm_job");
        PendingIntent pendingIntent=PendingIntent.getBroadcast(getBaseContext(),0,intentAction,PendingIntent.FLAG_UPDATE_CURRENT);
        AlarmManager alarmManager=(AlarmManager)getSystemService(ALARM_SERVICE);
        alarmManager.setRepeating(AlarmManager.RTC_WAKEUP,calendar.getTimeInMillis(),10000,pendingIntent);//
    }
	
//Tạo class AlarmJob
public class AlarmJob extends BroadcastReceiver {
    @Override
    public void onReceive(Context context, Intent intent) {
        Toast.makeText(context,"Alarm",Toast.LENGTH_LONG).show();
    }
}
//AndroidMaintifest.xml đăng kí broadcast
<receiver android:name=".AlarmJob">
            <intent-filter>
                <action android:name="alarm_job"/>
            </intent-filter>
        </receiver>
	
------------------------------------------------------------------------------------------------------------------------------------------------------------
***Read and Write File

//Write file
 public void Write(View v) throws IOException {
        String text = edWrite.getText().toString();
        //save at download folder
        String filePath = Environment.getExternalStorageDirectory().getPath() + "/" + Environment.DIRECTORY_DOWNLOADS + "/"+"khang.txt";
        File textFle = new File(filePath);
        FileWriter fw = null;
        try {
            fw = new FileWriter(textFle);
            fw.write(text);
            fw.flush();
            Toast.makeText(getApplicationContext(),"File saved at"+filePath,Toast.LENGTH_LONG).show();
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                fw.close();
            } catch (Exception e) {
                e.printStackTrace();
            }

        }
    }
	
//Read file
    public void Load(View v){
        String filePath=Environment.getExternalStorageDirectory().getPath()+"/"+Environment.DIRECTORY_DOWNLOADS+"/"+"khang.txt";
        FileReader fr=null;
        try{
            fr=new FileReader(filePath);
            int byteCharacter=-1;
            String result="";
            while ((byteCharacter=fr.read())!=-1){
                result+=(char)byteCharacter+"";
            }
            edWrite.setText(result);
        }
        catch (Exception e){
            e.printStackTrace();
        }
        finally {
            try {
                fr.close();
            }
            catch (Exception e){
                e.printStackTrace();
            }
        }
    }

---------------------------------------------------------------------------------------------------------------------------------------------------------------
***
new Thread(new Runnable() {
            @Override
            public void run() {
        }).start();
cũng là 1 thread nhưng không thể cập nhật giao diện trong quá trình chạy

runOnUiThread cũng là 1 Thread nhưng có thể cập nhật lại giao diện
----------------------------------------------------------------------------------------------------------------------------------------------------------
***Webservice using RESTful:
--Là một dịch vụ web đơn giản sử dụng HTTP và tính chất của REST.
+POST (HttpPost) – Tạo một tài nguyên trên máy chủ
+GET (HttpGet) – Truy xuất một tài nguyên
+PUT (HttpPut) – Thay đổi trạng thái một tài nguyên hoặc để cập nhật nó
+DELETE (HttpDelete) – Huỷ bỏ hoặc xoá một tài nguyên
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
***Webservice using SOAP


--------------------------------------------------------------------------------------------------------------------------------------------------------------
***Convert file to byte

  public byte[] FileLocal_To_Byte(String path){
        File file = new File(path);
        int size = (int) file.length();
        byte[] bytes = new byte[size];
        try {
            BufferedInputStream buf = new BufferedInputStream(new FileInputStream(file));
            buf.read(bytes, 0, bytes.length);
            buf.close();
        } catch (FileNotFoundException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        } catch (IOException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
        return bytes;
    }
-------------------------------------------------------------------------------------------------------------------------------------------------------------
***Choose Image From Photo
  private static final int SELECT_PHOTO = 100;
  private String imagePath = "";

//btChoose click event
 btnChoose.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                Intent photoPickerIntent = new Intent(Intent.ACTION_PICK);
                photoPickerIntent.setType("image/*");
                startActivityForResult(photoPickerIntent,SELECT_PHOTO);
            }
        });

//Hàm này trả về kết quả sau khi chọn image xong
@Override
    protected void onActivityResult(int requestCode, int resultCode, Intent imageReturnedIntent) {
        super.onActivityResult(requestCode, resultCode, imageReturnedIntent);
        switch(requestCode) {
            case SELECT_PHOTO:
                if(resultCode == RESULT_OK){
                  
                    Uri selectedImage = imageReturnedIntent.getData();
					//get image path
                    imagePath = getPath(selectedImage);
                    Toast.makeText(getApplicationContext(),imagePath, Toast.LENGTH_LONG).show();
                    InputStream imageStream = null;
                    try {
                        imageStream = getContentResolver().openInputStream(selectedImage);
                    } catch (FileNotFoundException e) {
                        e.printStackTrace();
                    }
					//Set imageview form bitMap
                    Bitmap yourSelectedImage = BitmapFactory.decodeStream(imageStream);
                    imageView.setImageBitmap(yourSelectedImage);
                }
        }
    }
//Hàm lấy đường dẫn hình ảnh từ photo
    public String getPath(Uri uri) {

        if (uri == null) {
            return null;
        }

        // this will only work for images selected from gallery
        String[] projection = {MediaStore.Images.Media.DATA};
        Cursor cursor = managedQuery(uri, projection, null, null, null);
        if (cursor != null) {
            int column_index = cursor
                    .getColumnIndexOrThrow(MediaStore.Images.Media.DATA);
            cursor.moveToFirst();
            return cursor.getString(column_index);
        }

        return uri.getPath();
    }
-----------------------------------------------------------------------------------------------------------------------------------------------------------
//Hàm enCodeImage:mã hóa hình ảnh về dạng byte use Base64
 private String encodeImage(String path)
    {
        File imagefile = new File(path);
        FileInputStream fis = null;
        try{
            fis = new FileInputStream(imagefile);
        }catch(FileNotFoundException e){
            e.printStackTrace();
        }
        Bitmap bm = BitmapFactory.decodeStream(fis);
        ByteArrayOutputStream baos = new ByteArrayOutputStream();
        bm.compress(Bitmap.CompressFormat.JPEG,100,baos);
        byte[] b = baos.toByteArray();
        String encImage = Base64.encodeToString(b, Base64.DEFAULT);
        //Base64.de
        return encImage;
    }

//Hàm deCode image về bitmap:giải mã hình hảnh về bitMap
	private Bitmap decodeImage(String data)
{
    byte[] b = Base64.decode(data,Base64.DEFAULT);     Bitmap bmp = BitmapFactory.decodeByteArray(b,0,b.length);     return bmp;
}    

//Hàm gửi hình hảnh lên server socket.io
 public void sendImage(String path)
    {
        JSONObject sendData = new JSONObject();
        try{
            sendData.put("image", encodeImage(path));
            socket.emit("message",sendData);
        }catch(JSONException e){
        }
    }

------------------------------------------------------------------------------------------------------------------------------------------------------------
****Simple AsyncTask:

//Call DoGetData
 new DoGetData("http://khangserver-khangit.rhcloud.com/json.php").execute();
 
//class DoGetData
class DoGetData extends AsyncTask<Void, Void, Void> {
         String urlLink;
        String result = "";

        public DoGetData(String URL) {
            this.urlLink = URL;
        }

        @Override
        protected Void doInBackground(Void... params) {
            try {
                URL url = new URL(urlLink);
                URLConnection conn = url.openConnection();
                InputStream is = conn.getInputStream();
                int byteCharater;
                while ((byteCharater = is.read()) != -1) {
                    result += (char) byteCharater;
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
            return null;
        }

        @Override
        protected void onPostExecute(Void aVoid) {
            super.onPostExecute(aVoid);
            tv.setText(result);
        }
-----------------------------------------------------------------------------------------------------------------------------------------------------------
***More AsyncTask :bằng cách lấy các params dạng mảng:params[0],params[1],param[2]

//Call DoGetData
new DoGetData().execute("http://khangserver-khangit.rhcloud.com/json.php","http://khangserver-khangit.rhcloud.com/json.php");

//Class DoGetData
class DoGetData extends AsyncTask<String, Integer, String> {
        @Override
        protected void onPreExecute() {
            super.onPreExecute();
            progressDialog.setMessage("Loading...");
            progressDialog.setProgressStyle(ProgressDialog.STYLE_SPINNER);
            progressDialog.show();

        }

        @Override
        protected String doInBackground(String... params) {
            String result="";
            try {
                URL url = new URL(params[0]);
                URLConnection conn = url.openConnection();
                InputStream is = conn.getInputStream();
                int byteCharater;
                while ((byteCharater = is.read()) != -1) {
                    result += (char) byteCharater;
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
            return result;
        }

        @Override
        protected void onPostExecute(String s) {
            progressDialog.dismiss();
            super.onPostExecute(s);
            tv.setText(s);
        }
    }
--------------------------------------------------------------------------------------------------------------------------------------------------------
***AsyncTask With Progress:
class DoGetData extends AsyncTask<String, Integer, String> {
        @Override
        protected void onPreExecute() {
            super.onPreExecute();
            progressDialog.setMessage("Loading...");
            progressDialog.setProgressStyle(ProgressDialog.STYLE_HORIZONTAL);
            progressDialog.setMax(100);
            progressDialog.show();

        }

        @Override
        protected String doInBackground(String... params) {
            String result = "";
            try {
                URL url = new URL(params[0]);
                URLConnection conn = url.openConnection();
                InputStream is = conn.getInputStream();
                int byteCharater;
                int loadByte = 0;
                int totaLe = conn.getContentLength();
                while ((byteCharater = is.read()) != -1) {
                     result += (char) byteCharater;
                     loadByte++;
                    int progress = loadByte * 100 / totaLe;
                    publishProgress(progress);
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
            return result;
        }

        @Override
        protected void onPostExecute(String s) {
            progressDialog.dismiss();
            super.onPostExecute(s);
            tv.setText(s);
        }

        @Override
        protected void onProgressUpdate(Integer... values) {
            super.onProgressUpdate(values);
            int p=values[0];
            progressDialog.setProgress(p);
        }
    }



-----------------------------------------------------------------------------------------------------------------------------------------------------------
The short way to to check ToogleButton,Switch,RadioButton
String toogle=btToogle.isChecked()?"Turn on":"Turn off";
String switchValue=switch.isChecked()?"Turn on":"Turn off";
String gender=rbMale.isChecked()?"Male":"Female";
---------------------------------------------------------------------------------------------------------------------------------------------------------
***GetCurrentTime:
//import library
   import android.text.format.Time;
// java code
   Time today = new Time(Time.getCurrentTimezone());
   today.setToNow();
   String nowTime=today.format("%k:%M:%S");
   Toast.makeText(getApplicationContext(),nowTime,Toast.LENGTH_LONG).show();

--------------------------------------------------------------------------------------------------------------------------------------------------------------
***BroadcastReceiver:khi reboot lại device thì BroadcastReceiver vẫn được khởi chạy lại miễn là không mất Force Stop trước khi reboot
------------------------------------------------------------------------------------------------------------------------------------------------------------
***Service:khi reboot lại device thì service sẽ stop mặc dù trước đó có thể không bị kill.
-Solution:use BroadcastReceiver to listen when system reboot and run service again
--------------------------------------------------------------------------------------------------------------------------------------------------------------
***Shake in android:
----------------------------------------------------------------------------------------------------------------------------------------------------------
**putStringArrayListExtra:
//MainActivity.java
 ArrayList<String>arrayLis;
 arrayLis=new ArrayList<>();
 arrayLis.add("khang");
 arrayLis.add("huy");
 Intent intent=new Intent(MainActivity.this,Main2Activity.class);
 intent.putStringArrayListExtra("array_list",arrayLis);
 startActivity(intent);
 //Main2Activity.java
  Intent intent = getIntent();
  ArrayList<String> arrayList = new ArrayList<>();
  arrayList = intent.getStringArrayListExtra("array_list");
  Toast.makeText(getApplicationContext(),""+arrayList.size(),Toast.LENGTH_LONG).show();
--------------------------------------------------------------------------------------------------------------------------------------------------------------
***Unlock Screen:
  <uses-permission android:name="android.permission.WAKE_LOCK"/>
  <uses-permission android:name="android.permission.DISABLE_KEYGUARD"/>
 public void UnlockScreen() {
        KeyguardManager km = (KeyguardManager) getSystemService(Context.KEYGUARD_SERVICE);
        final KeyguardManager.KeyguardLock kl = km .newKeyguardLock("MyKeyguardLock");
       kl.disableKeyguard();//mở trực tiếp lên disable mở khóa mặc định của hệ thống
        PowerManager pm = (PowerManager) getSystemService(Context.POWER_SERVICE);
        PowerManager.WakeLock wakeLock = pm.newWakeLock(PowerManager.FULL_WAKE_LOCK
                | PowerManager.ACQUIRE_CAUSES_WAKEUP
                | PowerManager.ON_AFTER_RELEASE, "MyWakeLock");
        wakeLock.acquire();
    }
-----------------------------------------------------------------------------------------------------------------------------------------------------------
**LockScreen

//MainActivity.java
public class MainActivity extends AppCompatActivity implements OnClickListener {
    Button btLockScreen;
    private static final int ADMIN_INTENT = 15;
    private static final String description = "Some Description About Your Admin";
    private DevicePolicyManager mDevicePolicyManager;
    private ComponentName mComponentName;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);
        mDevicePolicyManager = (DevicePolicyManager)getSystemService(
                Context.DEVICE_POLICY_SERVICE);
        mComponentName = new ComponentName(this, MyAdminReceiver.class);
        Button btnEnableAdmin = (Button) findViewById(R.id.btnEnable);
        Button btnDisableAdmin = (Button) findViewById(R.id.btnDisable);
        Button btnLock = (Button) findViewById(R.id.btnLock);
        btnEnableAdmin.setOnClickListener(this);
        btnDisableAdmin.setOnClickListener(this);
        btnLock.setOnClickListener(this);
    }
    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.menu_main, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();

        //noinspection SimplifiableIfStatement
        if (id == R.id.action_settings) {
            return true;
        }

        return super.onOptionsItemSelected(item);
    }

    @Override
    public void onClick(View v) {
        switch (v.getId()) {
            case R.id.btnEnable:
                Intent intent = new Intent(DevicePolicyManager.ACTION_ADD_DEVICE_ADMIN);
                intent.putExtra(DevicePolicyManager.EXTRA_DEVICE_ADMIN, mComponentName);
                intent.putExtra(DevicePolicyManager.EXTRA_ADD_EXPLANATION,description);
                startActivityForResult(intent, ADMIN_INTENT);
                break;

            case R.id.btnDisable:
                mDevicePolicyManager.removeActiveAdmin(mComponentName);
                Toast.makeText(getApplicationContext(), "Admin registration removed", Toast.LENGTH_SHORT).show();
                break;

            case R.id.btnLock:
                boolean isAdmin = mDevicePolicyManager.isAdminActive(mComponentName);
                if (isAdmin) {
                    mDevicePolicyManager.lockNow();
                }else{
                    Toast.makeText(getApplicationContext(), "Not Registered as admin", Toast.LENGTH_SHORT).show();
                }
                break;
        }
    }
 /*   @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        if (requestCode == ADMIN_INTENT) {
            if (resultCode == RESULT_OK) {
                Toast.makeText(getApplicationContext(), "Registered As Admin", Toast.LENGTH_SHORT).show();
            }else{
                Toast.makeText(getApplicationContext(), "Failed to register as Admin", Toast.LENGTH_SHORT).show();
            }
        }
    }*/

}

//MyAdminReceiver.java
public class MyAdminReceiver extends DeviceAdminReceiver {
}

//AndroidMaintifest.xml
  <receiver
            android:name="MyAdminReceiver"
            android:permission="android.permission.BIND_DEVICE_ADMIN">
            <meta-data
                android:name="android.app.device_admin"
                android:resource="@xml/admin" />

            <intent-filter>
                <action android:name="android.app.action.DEVICE_ADMIN_ENABLED" />
            </intent-filter>
        </receiver>

//res/xml/admin.xml
<device-admin xmlns:android="http://schemas.android.com/apk/res/android" >
    <uses-policies>
        <force-lock />
    </uses-policies>
</device-admin>
-------------------------------------------------------------------------------------------------------------------------------------------------------------
***Vibrate:
// give your application the permission to vibrate:
<uses-permission android:name="android.permission.VIBRATE"/>

// Get instance of Vibrator from current Context
Vibrator v = (Vibrator) getSystemService(Context.VIBRATOR_SERVICE);
// Vibrate for 400 milliseconds
v.vibrate(400);
-----------------------------------------------------------------------------------------------------------------------------------------------------------
**Shortcut Key in android studio:
CTRL+ALT+L->format code;
CTR+SHIFT+/->comment code
ALT+ENTER tại sau giá trị text or color của view(Button,TextView..)->tạo ra một resources mà không cần vào values folder
------------------------------------------------------------------------------------------------------------------------------------------------------
**ScrollView only accept with one child View(LinearLayout,RelativeLayout...)
-------------------------------------------------------------------------------------------------------------------------------------------------------
**Custom Font:
-Create folder assets/fonts
-Copy font under that folder.

//Java code
public class MainActivity extends Activity {
	TextView tv;
	
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        tv=(TextView)findViewById(R.id.tv);
        Typeface pacificoFont = Typeface.createFromAsset(getAssets(), "fonts/Pacifico.ttf");
        tv.setTypeface(pacificoFont);
    }


    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.main, menu);
        return true;
    }
    
}
-----------------------------------------------------------------------------------------------------------------------------------------------------
**Fullscreen no actionbar
//use FrameLayout
<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="@color/red"
    tools:context="com.example.administrator.demo_game_card.wait_activity">

    <!-- TODO: Update blank fragment layout -->
    <ImageView
        android:src="@drawable/icon"
        android:layout_width="wrap_content"
        android:layout_gravity="center"
        android:layout_height="wrap_content" />
    <TextView
        android:textColor="@color/white"
        android:layout_width="wrap_content"
        android:layout_gravity="center"
        android:layout_height="wrap_content"
        android:text="TDMUG3"
        android:textSize="30sp" />

    <ProgressBar
        android:layout_width="20dp"
        android:layout_height="20dp"
        android:layout_gravity="center|bottom"
        android:layout_marginBottom="20dp" />

    <TextView
        android:layout_width="fill_parent"
        android:layout_height="wrap_content"
        android:layout_gravity="center|bottom"
        android:layout_marginBottom="50dp"
        android:gravity="center"
        android:text="Loading ..."
        android:textColor="#ffffff"
        android:textSize="15dp" />
</FrameLayout>

//values/styles
<style name="AppTheme.NoActionBar">
        <item name="windowActionBar">true</item>
        <item name="windowNoTitle">true</item>
    </style>
	
//AndroidMaintifest.xml	
	<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.demosplashscreen">

    <application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:supportsRtl="true"
        android:theme="@style/AppTheme">
        <activity
            android:name=".MainActivity"
            android:theme="@style/AppTheme.NoActionBar"
            android:label="@string/app_name">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
    </application>

</manifest>

------------------------------------------------------------------------------------------------------------------------------------------------------
***Loading Indicator Library
https://github.com/81813780/AVLoadingIndicatorView
-------------------------------------------------------------------------------------------------------------------------------------------------------
***Drawable:
-Layer-list
• Khái niệm : Là một dạng drawable được khai
báo trong file XML của folder drawable , được
dùng để hiển thị hình ảnh dưới dạng lớp (gôm nhiều hình ảnh lại thành 1 hình).
-selector:cũng là 1 thành phần của drawable nhưng dùng để tạo ra các trạng thái của view như press,selected..
//example tạo trong folder drawable
<?xml version="1.0" encoding="utf-8"?>
<selector xmlns:android="http://schemas.android.com/apk/res/android">
    <item android:drawable="@drawable/clock" android:state_pressed="true"></item>
    <item android:drawable="@drawable/calendar" android:state_focused="true"></item>
    <item android:drawable="@drawable/calendar"></item>
</selector>

-shape:cũng là 1 thành phần của drawable dùng để vẽ các viền,tô màu cho các view
//example
<?xml version="1.0" encoding="utf-8"?>
<shape xmlns:android="http://schemas.android.com/apk/res/android"
    android:shape="rectangle">//kiểu rectangle
    <solid android:color="@color/colorAccent"></solid>//màu nền
    <stroke//viền
        android:width="3dp"
		android:dashGap="1dp"//tạo ra các viền
		android:dashWith="3dp"//khoảng cách giữa các viền
        android:color="@color/colorPrimaryDark"></stroke>
    <corners//độ bo góc
        android:radius="3dp"></corners>
    <gradient android:angle="0"//đổ màu từ trái-phải,trên-dưới..
        android:startColor="@color/colorAccent"
        android:endColor="@color/colorPrimary"></gradient>
</shape>
--------------------------------------------------------------------------------------------------------------------------------------------------------
**Save and Restore State of Activity When Device Rotates

 @Override
    protected void onRestoreInstanceState(Bundle savedInstanceState) {//restore
        super.onRestoreInstanceState(savedInstanceState);
        bt.setText(""+savedInstanceState.getInt("save_order"));
    }

    @Override
    protected void onSaveInstanceState(Bundle outState) {//save
        super.onSaveInstanceState(outState);
		outState.putInt("save_order",3);
    }
-----------------------------------------------------------------------------------------------------------------------------------------------------------
**Multiple Languages:
Tạo trong values/strings.xml.Khi hệ thống thay đổi thì ứng dụng sẽ cập nhật lại ngôn ngữ do mình tự định nghĩa
-----------------------------------------------------------------------------------------------------------------------------------------------------------
**Định nghĩa style cho view
 //values/styles
  <style name="text_style" parent="TextAppearance.AppCompat">
       <item name="android:textSize">30sp</item>
       <item name="android:textColor">@color/colorAccent</item>
   </style>
   <style name="text_style1" parent="text_style">//kế thừa từ text_style nên sẽ có tất cả thuộc tính .chỉ thêm vào   <item name="android:textColorPrimary">@color/colorPrimaryDark</item>
         <item name="android:textColorPrimary">@color/colorPrimaryDark</item>
   </style>
   
   //layout
   <TextView
        style="@style/text_style"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Hello World!" />
---------------------------------------------------------------------------------------------------------------------------------------------------
***Persistence:là dạng lưu trữ dữ liệu cũ khi người dùng thoát đột ngột ứng dụng
-Sử dụng SHAREDPREFERENCES;
//Demo sử dụng sharedPreferences kết hợp với editText để lưu trữ dữ liệu khi người dùng đang gõ mà thoát ứng dụng đột ngột
EditText ed;
SharedPreferences sp;
ed=(EditText)findViewById(R.id.ed);
        sp=getSharedPreferences("TEST", Context.MODE_PRIVATE);
        if(!sp.getString("text","").equals("")){
            ed.setText(sp.getString("text",""));
        }
		//sụ kiện thay đổi ở editText
        ed.addTextChangedListener(new TextWatcher() {
            @Override
            public void beforeTextChanged(CharSequence s, int start, int count, int after) {

            }

            @Override
            public void onTextChanged(CharSequence s, int start, int before, int count) {
                SharedPreferences.Editor editor=sp.edit();
                editor.putString("text",s.toString());
                editor.commit();
            }

            @Override
            public void afterTextChanged(Editable s) {

            }
        });
--------------------------------------------------------------------------------------------------------------------------------------------------
***Share Androd screen with pc/laptop
-sử dụng mobizen app
--------------------------------------------------------------------------------------------------------------------------------------------------
**AppcompaSwitch v7

//layout
 <android.support.v7.widget.SwitchCompat
                    android:id="@+id/swichRepeat"
                    android:layout_marginLeft="50dp"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:checked="true"/>
//java
SwitchCompat switchRepeat;
switchRepeat = (SwitchCompat) findViewById(R.id.swichRepeat);
        switchRepeat.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {//lắng nghe sự kiện thay đổi khi người dùng thay đổi state
            @Override
            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                if (isChecked) {
                    checkRepeat = true;
                } else {
                    checkRepeat = false;
                }
            }
        });
		//hiện thị state mặc định của SwitchCompat
        if (switchRepeat.isChecked()) {
            checkRepeat = true;
        } else {
            checkRepeat = false;
        }		
---------------------------------------------------------------------------------------------------------------------------------------------------
**ToogleButton

//layout
 <ToggleButton
                android:id="@+id/toggleWatering"
                android:layout_width="0dp"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:textOn="BẬT"
                android:background="@color/red"
                android:textOff="TẮT"
                android:textColor="@color/white"
                android:onClick="Led"
                android:checked="true" />
//java
   //Hàm bật đèn
    public void Led(View v) {
        boolean checked = ((ToggleButton) v).isChecked();
        if (checked) {
            Toast.makeText(MainActivity.this, "Tắt đèn", Toast.LENGTH_LONG).show();
        } else {
            Toast.makeText(MainActivity.this, "Bật đèn", Toast.LENGTH_LONG).show();

        }
    }
----------------------------------------------------------------------------------------------------------------------------------------------------
**Material DateTimePicker

//build.gradle
 compile 'com.wdullaer:materialdatetimepicker:2.3.0'
 
 //import library
 import com.wdullaer.materialdatetimepicker.Utils;
import com.wdullaer.materialdatetimepicker.date.DatePickerDialog;
import com.wdullaer.materialdatetimepicker.time.RadialPickerLayout;
import com.wdullaer.materialdatetimepicker.time.TimePickerDialog;

//MainActivity.java
public class MainActivity extends AppCompatActivity implements  TimePickerDialog.OnTimeSetListener{
    private int mYear, mMonth, mDay, mHour, mMinute;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);

        FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);
        fab.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                Snackbar.make(view, "Replace with your own action", Snackbar.LENGTH_LONG)
                        .setAction("Action", null).show();
            }
        });
     /*   final Calendar c = Calendar.getInstance();
        mHour = c.get(Calendar.HOUR_OF_DAY);
        mMinute = c.get(Calendar.MINUTE);
        TimePickerDialog tpd = new TimePickerDialog(this,
                new TimePickerDialog.OnTimeSetListener() {

                    @Override
                    public void onTimeSet(TimePicker view, int hourOfDay,
                                          int minute) {
                     //   txtTime.setText(hourOfDay + ":" + minute);
                    }
                }, mHour, mMinute, false);
        tpd.show();*/
        Calendar now = Calendar.getInstance();
        TimePickerDialog tpd = TimePickerDialog.newInstance(
                (TimePickerDialog.OnTimeSetListener) MainActivity.this,
                now.get(Calendar.HOUR_OF_DAY),
                now.get(Calendar.MINUTE),
                false
        );
        tpd.setAccentColor(Color.parseColor("#F26149"));
        tpd.show(getFragmentManager(), "Timepicker");
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.menu_main, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();

        //noinspection SimplifiableIfStatement
        if (id == R.id.action_settings) {
            return true;
        }

        return super.onOptionsItemSelected(item);
    }

    @Override
    public void onTimeSet(RadialPickerLayout view, int hourOfDay, int minute, int second) {
            Toast.makeText(MainActivity.this,""+hourOfDay,Toast.LENGTH_LONG).show();
    }
}

-------------------------------------------------------------------------------------------------------------------------------------------------------
**id của menu back khi sử dụng với android:parentActivityName=".MainActivity"//đây là Activity muốn chuyển về
 if(id== android.R.id.home){
           Intent iHome=new Intent(Alarm.this,MainActivity.class);
                iHome.putExtra("hours",hours);
                iHome.putExtra("minutes",minutes);
                iHome.putExtra("seconds", seconds);
 
            Toast.makeText(Alarm.this,"Back",Toast.LENGTH_LONG).show();
			   NavUtils.navigateUpTo(this, iHome);//gửi dữ liệu qua actvity parent
        }
-----------------------------------------------------------------------------------------------------------------------------------------------------
**THIẾT KẾ GIAO DIỆN ĐA MÀN HÌNH
-Kích thước màn hình mặc định khi tạo layout là mdpi
-để tạo giao diện khi khi nằm ngang(landscape)thì chỉ cần tạo folder layout với tên chỉ mục là layout-land(mặc định là mdpi) và phải tạo các file giống như giao diện gốc
+4.0,4.5 inch->layout-sw320dp
+4.6,4.7,4.8,4.9 inch->layout-sw360dp
+5.0 inch->layout-sw400dp
-để tạo giao diện nằm đứng chỉ cần thêm "port" vào cuối đuôi chỉ mục
-để tạo giao diện nằm ngang chỉ cần thêm "land" vào cuối đuôi chỉ mục
---------------------------------------------------------------------------------------------------------------------------------------------------------
***CLEAR ACTIVITY STACK
  i.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);
---------------------------------------------------------------------------------------------------------------------------------------------------
**Google Map

-----------------------------------------------------------------------------------------------------------------------------------------------------
***
------------------------------------------------------------------------------------------------------------------------------------------------------
**Ẩn/hiện Button bằng Java Code:

//HIện button
 btLitre.setVisibility(View.VISIBLE);
 
 //Ẩn button
  btLitre.setVisibility(View.GONE);//ẩn nhưng các view khác có thể chiếm lấy không gian
  btLitre.setVisibility(View.INVISIBLE);//ngược lại các view sẽ không chiếm đk ko gian
-------------------------------------------------------------------------------------------------------------------------------------------------------
***ImageButton

//set image cho ImageButton bằng src

  /**1.Set bằng thư mục drawable**/
    android:src="@drawable/facebook"
	
/**2.Set bằng thư mục raw**/
 android:src="@raw/facebook"

//set bằng java code

	/**1.Set bằng thư mục drawable**/
		imgButton.setImageResource(R.drawable.facebook);
		
	/**2.Set bằng thư mục raw:sử dụng bitmap**/
		InputStream inputStream=getResources().openRawResource(R.raw.facebook);
        Bitmap bitmap= BitmapFactory.decodeStream(inputStream);
        imgButton.setImageBitmap(bitmap);
		
	/**2.Set bằng thư mục asset:sử dụng bitmap**/
		InputStream inputStream= null;
			try {
				inputStream = this.getAssets().open("facebook.png");
			} catch (IOException e) {
				e.printStackTrace();
			}
			Bitmap bitmap= BitmapFactory.decodeStream(inputStream);
			imgButton.setImageBitmap(bitmap);
		
**Note:khi set image bằng bitmap với thư mục raw và asset thì chất lượng hình ảnh mịn hơn và vưa kích thước hơnFS
-------------------------------------------------------------------------------------------------------------------------------------------------------
***SERVICE:LÀ MỘT THÀNH PHẦN CỦA ỨNG DỤNG CÓ THỂ THỰC CÔNG VIỆC MÀ KHÔNG CẦN GIAO DIỆN NGƯỜI DÙNG.
-Service có 2 dạng:startService() và bindService()
//startService()
startService() : là một dạng service có thể chạy ngầm vô thời hạn, ngay
cả khi thành phần bắt đầu bị hủy. Thông thường startService() được
dùng để thực hiện một số thao tác đơn lẽ và không có kết quả trả về.

//bindService()
 bindService(): Là một dạng service theo mô hình Client – Service . Cho
phép các thành phần gọi các hàm của Service và nhận được kết quả trả
về của hàm đó.

-Các cách tạo Service:có 2 cách tạo service là extends từ Service và extends từ IntentService
 +Service : Là Class cơ bản cho tất cả các Service. Khi kế thừa Class này
chúng ta cần phải tạo ra một luồng để thực hiện tất cả các công việc của
Service
+ IntentService : Là Class con của Service có chức năng sử dụng một
luồng để sử lý tất cả các công việc một cách tuần tự, bằng cách override
lại phương thức onHandIntent()

-Class IntentService
• Phần lớn các yêu cầu gữi lên Service thường không cần xử lý đồng thời. Vì vậy tốt
nhất nên sử dụng IntentService thay vì Service.
• IntentService sẽ thực hiện xử lý sau :
• - Tạo một luồng thực hiện các yêu cầu được chuyển tới phương thức
onStartCommand().
• - Tạo ra một hàng đợi công việc để chuyển lần lượt các yêu cầu tới phương thức
onHandIntent().
• - Sẽ tự động dừng Service khi các công việc trong hàng đơi kết thúc.
• - Mặc định onBind() sẽ trả về rỗng.
• - Mặc định onStartCommand() sẽ gữi yêu cầu tới hàng đợi của onHandleIntent()

-Class Service
• Khác với IntentService , Service cho ph
xử lý nhiều công việc cùng một lúc.

-Hằng số trả về của onStartCommand()
• - START_NOT_STICKY : Service sẽ không được tạo lại. Servic
tạo lại nếu ở runtime gọi startService().
• - START_STICKY : Service sẽ được tạo lại nếu như hệ thống hủy
Service. Tất cả các dữ liệu chuyển tới onStartCommand() sẽ
sử dụng để quản lý các trạng thái của Service và không phụ
dữ liệu của Intent.
• - START_REDELIVER_INTENT : Giống như START_STICKY như
ban đầu sẽ được gữi lại cho onStartCommand().

-Các phương thức được triển khai khi tạo một Service: 
• -startService(Intent Service): start một Service dạng Unbounded Service.
• -onCreate(): được gọi khi Service đươc tạo lần đầu.
• -onStartCommand(Intent intent, int flags, int startId): được gọi khi Service đã start.
• -onBind(Intent intent): phương thức này phải được gọi nếu bạn muốn liên kết với Activity.
• -onUnbind(Intent intent): được gọi khi Service hủy liên kết tới Activity.
• -onRebind(Intent intent): gọi khi muốn liên kết lại sau khi onUnbind().
• -onDestroy(): gọi khi Service bị hủy

-Sử dụng service:
• -Dùng trong các ứng dụng nghe nhạc.
• -Dùng để xử lý các thao tác mất thời gian và không nhất thiết phải hiển thị lên activity (download,upload…)
• -Đôi khi cần một ứng dụng vận hành liên tục để xử lý những việc mong muốn mà không làm phiền người dùng.
• -Làm những thao tác tính toán, xử lý đều đặn nào đó và kết quả khi nào người dùng cần thì mới xem.

//Extends từ Service :thực hiện mãi mãi nếu ko có sự can thiệp thì nó sẽ ko hủy ví dụ như quá trình chơi nhạc (nếu như extends từ Service để download file thì sau khi thực hiện download xong thì service vẫn chạy->gây tốn ram)
	  /**Note:Hàm onStartCommand()**/
	  @Override
		public int onStartCommand(Intent intent, int flags, int startId) {
			mediaPlayer=MediaPlayer.create(this,R.raw.muadongkoem);
			mediaPlayer.start();
			Toast.makeText(getApplicationContext(),"Service is running",Toast.LENGTH_LONG).show();
			return START_NOT_STICKY;//dùng START_NOT_STICKY là để cho service ko restart lại nếu đóng chạy ngầm thì sẽ đóng luôn .
		}

		
//EXTENDS TỪ INTENTSERVICE:THỰC HIỆN TUẦN TỰ,SAU KHI THỰC HIỆN XONG THÌ NÓ SẼ TỰ HỦY(VÍ DỤ QUÁ TRÌNH DOWNLOAD FILE SAU KHI DOWNLOAD XONG THÌ SẼ TƯ HỦY) TIẾT KIỆM BỘ NHỚ RAM.
    /**Class IntentService.java extends IntentService**/
	public class DemoIntentService extends IntentService {
		/**
		 * Creates an IntentService.  Invoked by your subclass's constructor.
		 *
		 * @param name Used to name the worker thread, important only for debugging.
		 */
		public IntentService() {
			super("My Intent Service");
		}

		@Override
		protected void onHandleIntent(Intent intent) {//Hàm chính thực hiện 
			synchronized (this) {
				for (int i = 0; i < 10; i++) {
					Log.d("Test", "" + i);
					try {
						wait(10000);
					} catch (Exception e) {

					}

				}
			}
		}

		@Override
		public void onDestroy() {//Sau khi thực hiện onHandleIntent thì sẽ chạy tới hàm này để hủy service
			Toast.makeText(getApplicationContext(),"Service is Stopped",Toast.LENGTH_LONG).show();
			super.onDestroy();
		}
	}
	/**Thực hiện IntentService với BroadcastReceiver hay thực hiện bình thường đều dùng tương tự như class DemoIntentService ở trên**/
	
//VÒNG ĐỜI CỦA STARTSERVICE()
	onCreate()->onStartCommand()->Service Running->onDestroy()->Service Shutdow

//VÒNG ĐỜI CỦA BINDSERVICE()
    onCreate()->onBind()->Client are bound to service->onUnbind()->onDestroy()->Service Shutdow
	
//BOUNDSERVICE:LÀ SERVICE THỰC HIỆN THEO MÔ HÌNH CLIENT-SERVER,CHO PHÉP NGƯỜI DÙNG TRUY XUẤT DỮ LIỆU TỪ SERVICE THÔNG QUA GIAO DIỆN(VÍ DỤ NHƯ CÓ NHIỀU ACTIVITY CÙNG DÙNG CHUNG MỘT PHƯƠNG  THỨC NÀO ĐÓ CỦA SERVICE THÌ TA NÊN DÙNG BOUNDSERVICE)
			/**Class BoundService.java extends Service  đóng vai trò là server**/
		public class BoundService extends Service {
			IBinder iBinder=new LocalBinder();//liên kết đến client
			@Nullable
			@Override
			public IBinder onBind(Intent intent) {
				return null;
			}
			public class LocalBinder extends Binder{
				LocalBinder getLocalBinder(){
					return LocalBinder.this;//Phương thức khởi tạo khi client gọi tới các phương thức của service
				}
			}
			public String show(){//phương của client cần truy xuất lấy dữ liệu
				return "I am coder";
			}
		}
		/**Class MainActivity.java  đóng vai trò là client truy xuất server thông qua giao diện**/
		public class MainActivity extends AppCompatActivity implements View.OnClickListener {
			Button btGet;
			BoundService service;

			@Override
			protected void onCreate(Bundle savedInstanceState) {
				super.onCreate(savedInstanceState);
				setContentView(R.layout.activity_main);
				btGet = (Button) findViewById(R.id.btGet);
				btGet.setOnClickListener(this);
				//Khởi tạo đối tượng Service
				service=new BoundService();
				//Khi ứng dụng vùa chạy lên thì sẽ kết nối đến service
				Intent intent = new Intent(MainActivity.this, BoundService.class);
				bindService(intent, mserviceConnection, BIND_AUTO_CREATE);//kết nối đến service
			   
			}
			 //Tạo ra phương thức connection
			ServiceConnection mserviceConnection = new ServiceConnection() {
				@Override
				public void onServiceConnected(ComponentName name, IBinder service) {//phương thức kết nối
					BoundService.LocalBinder localBinder = (BoundService.LocalBinder) service;
				}

				@Override
				public void onServiceDisconnected(ComponentName name) {

				}
			};

			@Override
			public void onClick(View v) {
				String test =service.show();
				Toast.makeText(MainActivity.this,test,Toast.LENGTH_LONG).show();
			}
		}

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
***MENU SEARCH SỬ DỤNG APPCOMPATV7

//File main_menu.xml
<?xml version="1.0" encoding="utf-8"?>
<menu xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:appcompat="http://schemas.android.com/apk/res-auto">

    <item
        android:id="@+id/menu_search"
        android:title="search"
        appcompat:actionViewClass="android.support.v7.widget.SearchView"
        appcompat:showAsAction="always" />
</menu>

//File MainActivity.java
public class MainActivity extends AppCompatActivity {
    android.support.v4.widget.SimpleCursorAdapter suggestionAdapter;
    ArrayList<String>arrName;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);
        final String[] from = new String[]{"Name"};
        final int[] to = new int[]{android.R.id.text1};
        suggestionAdapter = new android.support.v4.widget.SimpleCursorAdapter(this, android.R.layout.simple_list_item_1, null, from, to, CursorAdapter.FLAG_REGISTER_CONTENT_OBSERVER);
        arrName=new ArrayList<>();
        arrName.add("Nguyễn Hồ Duy Khang");
        arrName.add("Nguyễn Thiện huy");
        arrName.add("Hồ Văn Tiến");

    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.menu_main, menu);
        SearchManager searchManager=(SearchManager)getSystemService(Context.SEARCH_SERVICE);
        android.support.v7.widget.SearchView searchView = (android.support.v7.widget.SearchView) menu.findItem(R.id.search).getActionView();
        searchView.setSearchableInfo(searchManager.getSearchableInfo(getComponentName()));
        searchView.setSuggestionsAdapter(suggestionAdapter);
         searchView.setOnQueryTextListener(new android.support.v7.widget.SearchView.OnQueryTextListener() {
            @Override
            public boolean onQueryTextSubmit(String query) {//Khi nhấn Enter
                //  Toast.makeText(MainActivity.this,"Your clicked: "+query,Toast.LENGTH_LONG).show();
                return false;
            }

            @Override
            public boolean onQueryTextChange(String newText) {//Khi người dùng nhập vào khung search
                getSuggestion(newText);
                //  Toast.makeText(MainActivity.this,"Your clicked: "+newText,Toast.LENGTH_LONG).show();
                return true;
            }
        });
        //Lắng nghe thông tin mà người dùng Search
      searchView.setOnSuggestionListener(new SearchView.OnSuggestionListener() {
          @Override

          public boolean onSuggestionSelect(int position) {
              Toast.makeText(MainActivity.this,"Posdition: "+""+position,Toast.LENGTH_LONG).show();
              return false;
          }
          //Khi click thông tin mà người dùng search
          @Override
          public boolean onSuggestionClick(int position) {
               suggestionAdapter.getCursor().moveToPosition(position);
                String query=suggestionAdapter.getCursor().getString(1);//lấy giá trị của item đk selected
                Intent i=new Intent(HomeActivity.this,ListSongActivity.class);
                i.putExtra("songName",query);
                startActivity(i);
                return true;
          }
      });
        return true;
    }
  //Hàm lấy ra những thông tin mà người dùng search
    private void getSuggestion(String text) {
        MatrixCursor c = new MatrixCursor(new String[]{BaseColumns._ID, "Name"});
        for(int i =0; i< arrName.size(); i++) {
            if(arrName.get(i).toLowerCase().contains(text.toLowerCase())){
                c.addRow(new Object[]{i, arrName.get(i)});
            }
        }
        suggestionAdapter.changeCursor(c);
    }
}


-----------------------------------------------------------------------------------------------------------------------------------------------
**TẠO RA 1 BACKGROUND CHO 1 VIEW HOẶC VIEWGROUP THÌ CÓ THỂ TẠO TRONG DRAWABLE(file.xml)
-----------------------------------------------------------------------------------------------------------------------------------------------
**CẢM BIẾN TRƯỜNG GẦN(PROXIMITY)

public class MainActivity extends AppCompatActivity implements SensorEventListener {//implements từ SensorEventListener
    SensorManager sensorManager;
    Sensor camBienTruongGan;
    TextView tv;
    public  static Integer count=0;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        tv = (TextView) findViewById(R.id.tv);
        sensorManager = (SensorManager) getSystemService(Context.SENSOR_SERVICE);
        camBienTruongGan = sensorManager.getDefaultSensor(Sensor.TYPE_PROXIMITY);
        sensorManager.registerListener(this, camBienTruongGan, SensorManager.SENSOR_DELAY_NORMAL);
		//Kiểm tra xem thiết bị có hỗ trợ sensor hay ko
		Boolean check= sensorManager.registerListener(this, camBienTruongGan, SensorManager.SENSOR_DELAY_NORMAL);

    }
	
	//Sự kiện thay đổi cảm biến
    @Override
    public void onSensorChanged(SensorEvent event) {
        float giatri = event.values[0];
        if (giatri == 0) {
            count++;
            tv.setText(""+count);
        } else {
           tv.setText(""+count);
        }
        Log.d("giatri", "" + giatri + "");
    }

    @Override
    public void onAccuracyChanged(Sensor sensor, int accuracy) {

    }
------------------------------------------------------------------------------------------------------------------------------------------------------
**CẢM BIẾN ÁNH SÁNG(LIGHT)
public class MainActivity extends AppCompatActivity implements SensorEventListener {
    SensorManager sensorManager;
    Sensor lightSensor;
    RelativeLayout layout;
	
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        tv=(TextView)findViewById(R.id.tv);
        layout=(RelativeLayout)findViewById(R.id.layout);
        sensorManager=(SensorManager)getSystemService(Context.SENSOR_SERVICE);
        lightSensor=sensorManager.getDefaultSensor(Sensor.TYPE_LIGHT);
        if(lightSensor!=null){
            sensorManager.registerListener(this,lightSensor,SensorManager.SENSOR_DELAY_NORMAL);
        }
        else{
            Toast.makeText(MainActivity.this,"This device doesn't support light Sensor",Toast.LENGTH_LONG).show();

        }
    }

  
    @Override
    public void onSensorChanged(SensorEvent event) {
        lightSensor=event.sensor;
       if(lightSensor.getType()==Sensor.TYPE_LIGHT){
           if(event.values[0]>=5000){
               layout.setBackgroundResource(R.drawable.maudo);
           }

        }

    }

    @Override
    public void onAccuracyChanged(Sensor sensor, int accuracy) {

    }
}
---------------------------------------------------------------------------------------------------------------------------------------------------
***CẢM BIẾN GIA TỐC (ACCELEROMETER)
public class MainActivity extends AppCompatActivity implements SensorEventListener {
    SensorManager sensorManager;
    Sensor camBienGiaToc;
    float last_x, last_y, last_z;
    long lastTime;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);
        sensorManager = (SensorManager) getSystemService(Context.SENSOR_SERVICE);
        camBienGiaToc = sensorManager.getDefaultSensor(Sensor.TYPE_ACCELEROMETER);
        if (camBienGiaToc == null) {
            Toast.makeText(this, "Device doesn't support ACCELEROMETER", Toast.LENGTH_LONG).show();
        } else {
            sensorManager.regsisterListener(this, camBienGiaToc, SensorManager.SENSOR_DELAY_NORMAL);
        }
    }

    @Override
    public void onSensorChanged(SensorEvent event) {
        camBienGiaToc = event.sensor;
        if (camBienGiaToc.getType() == Sensor.TYPE_ACCELEROMETER) {
            Log.d("kiemtra", "tọa độ x:  " + event.values[0] + "\ntọa độ y: " + event.values[1] + "\ntọa độ z: " + event.values[2]);
            float x = event.values[0];
            float y = event.values[1];
            float z = event.values[2];
            long currentTime=System.currentTimeMillis();
            if((currentTime-lastTime)>100){
                long diffTime=currentTime-lastTime;
                lastTime=currentTime;
                float speed=Math.abs(x+y+z-last_x-last_y-last_z)/diffTime*10000;
                if(speed>600){
                    Toast.makeText(this, "Bạn đã lắc thiết bị", Toast.LENGTH_LONG).show();
                }
                last_x=x;
                last_y=y;
                last_z=z;
                Log.d("kiemtra",""+speed);
            }

        }

    }

    @Override
    public void onAccuracyChanged(Sensor sensor, int accuracy) {

    }
}

------------------------------------------------------------------------------------------------------------------------------------------------------
**ADD HEADER VÀ FOOTER VÀO LISTVIEW:LÀM CHO LISTVIEW SCROLL MƯỢT HƠN.SCROLL ĐK CẢ 1 TRANG GIỐNG NHƯ ZING MP3 APP
/***Tạo layout list_header.xml và list_footer.xml đại diện cho phần đầu và phần cuối của Listview***/
/*** list_header.xml là giao diện của những item nằm trước listview.list_footer là những item nằm sau listview**/

/***Tạo layout main để hiện thị listview gồm 1 listview***/
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    tools:context=".activity.HomeActivity">

    <ListView
        android:layout_width="match_parent"
        android:id="@+id/list_element"
        android:layout_height="wrap_content">
    </ListView>
</LinearLayout>

/***MainActivity.java***/
	View listHeader, listFooter;//biến toàn cục
	//Hàm onCreate()
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_home);
        listView = (ListView) findViewById(R.id.list_element);
        offlineListElement = new ArrayList<>();
        addElement();
        listView.setAdapter(elementListAdapter);
        setupHeaderAndFooter();
    }
	//Hàm add header và footer cho listview
	 private void setupHeaderAndFooter() {
        listHeader = View.inflate(this, R.layout.home_list_header, null);
        listFooter = View.inflate(this, R.layout.home_list_footer, null);
        listView.addHeaderView(listHeader);
        listView.addFooterView(listFooter);
    }
**Có thể chỉ add header or footer không nhất thiết phải add cả hai.
-----------------------------------------------------------------------------------------------------------------------------------------------------
***RecyclerView:
-RecyclerView là một View mới trong android giống như ListView nhưng mạnh mẽ hơn rất nhiều.
-RecyclerView cho phép chúng ta load dữ liệu nhiều hơn ListView, vuốt mượt hơn, hiệu ứng đẹp hơn và hỗ trợ đa dạng layout của các phần tử trong danh sách.
--------------------------------------------------------------------------------------------------------------------------------------------
**CardView:
-CardView là một ViewGroup,như các ViewGroup khác,CardView có thể đk sử dụng với Activity và Fragment
-CardView làm cho các  view bo tròn nhìn đẹp hơn các ViewGroup bình thường
-CardView thường được sử dụng chung với RecyclerView
//example
/***1.Add 2 thư viện này vào dependencies của  build.gradle (Module:app) để có thể sử dụng CardView và RecyclerView cho android phiên bản cũ hơn***/
	compile 'com.android.support:cardview-v7:23.0.+'
   compile 'com.android.support:recyclerview-v7:23.0.+'
/***2.Sử dụng với file layou.xml***/
 <android.support.v7.widget.CardView//thư viện hổ trợ CardView
        xmlns:card_view="http://schemas.android.com/apk/res-auto"
        android:layout_width="match_parent"
        android:layout_height="wrap_content">
        <RelativeLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:paddingpadding="16dp"
            >
            <ImageView
                android:src="@drawable/test"
                android:layout_width="50dp"
                android:layout_height="50dp"
                android:id="@+id/person_photo"
                android:layout_alignParentLeft="true"
                android:layout_alignParentTop="true"
                android:layout_marginRight="16dp"
                />
            <TextView
                android:text="Khang"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:id="@+id/person_name"
                android:layout_toRightOf="@+id/person_photo"
                android:layout_alignParentTop="true"
                android:textSize="30sp"
                />
            <TextView
                android:text="19 years old"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:id="@+id/person_age"
                android:layout_toRightOf="@+id/person_photo"
                android:layout_below="@+id/person_name"
                />
        </RelativeLayout>
    </android.support.v7.widget.CardView>
---------------------------------------------------------------------------------------------------------------------------------------
**RECYCLERVIEW VS CARDVIEW:

/**1.Tạo class Person.java chứa dữ liệu của đối tượng Person**/
public class Person {
    String name;
    String age;
    int photoId;
    Person(String name, String age, int photoId) {
        this.name = name;
        this.age = age;
        this.photoId = photoId;
    }
    
}
/**2.Tạo giao diện cho layout chính dùng để chứa RecyclerView(content_main.xml)**/
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    xmlns:app="http://schemas.android.com/apk/res-auto" android:layout_width="match_parent"
    android:layout_height="match_parent" android:paddingLeft="@dimen/activity_horizontal_margin"
    android:paddingRight="@dimen/activity_horizontal_margin"
    android:paddingTop="@dimen/activity_vertical_margin"
    android:paddingBottom="@dimen/activity_vertical_margin"
    app:layout_behavior="@string/appbar_scrolling_view_behavior"
    tools:showIn="@layout/activity_main" tools:context=".MainActivity">

    <android.support.v7.widget.RecyclerView
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:id="@+id/rv"
        />
</LinearLayout>

/**3.Tạo giao diện cho mỗi dòng dữ liệu dùng CardView(cardview.xml)**/
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent">

    <android.support.v7.widget.CardView xmlns:card_view="http://schemas.android.com/apk/res-auto"
        android:id="@+id/cv"
        android:layout_width="match_parent"
        android:layout_height="wrap_content">

        <RelativeLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:padding="16dp">

            <ImageView
                android:id="@+id/person_photo"
                android:layout_width="50dp"
                android:layout_height="50dp"
                android:layout_alignParentLeft="true"
                android:layout_alignParentTop="true"
                android:layout_marginRight="16dp"
                android:src="@drawable/emma" />

            <TextView
                android:id="@+id/person_name"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_alignParentTop="true"
                android:layout_toRightOf="@+id/person_photo"
                android:text="Khang"
                android:textSize="30sp" />

            <TextView
                android:id="@+id/person_age"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_below="@+id/person_name"
                android:layout_toRightOf="@+id/person_photo"
                android:text="19 years old" />
        </RelativeLayout>
    </android.support.v7.widget.CardView>
</LinearLayout>

/**4.Tạo class RVAdapter.java extend từ RecyclerView.Adapter dùng để Custom chon RecyclerView**/
public class RVAdapter extends RecyclerView.Adapter<RVAdapter.PersonViewHolder>{
    List<Person> persons;
    RVAdapter(List<Person> persons){//hàm khởi tạo mặc định của RVAdapter 
        this.persons = persons;
    }
    @Override//hàm tạo giao diện cho 1 dòng dữ liệu person
    public PersonViewHolder onCreateViewHolder(ViewGroup viewGroup, final int i) {
        final View view = LayoutInflater.from(viewGroup.getContext()).inflate(R.layout.cardview, viewGroup, false);
        final PersonViewHolder pvh = new PersonViewHolder(view);
        return pvh;
    }

    @Override//gán dữ liệu cho dòng dữ liệu person bằng cách lấy dữ liệu của đối tượng person
    public void onBindViewHolder(PersonViewHolder personViewHolder, int i) {
        personViewHolder.person_name.setText(persons.get(i).name);
        personViewHolder.person_age.setText(persons.get(i).age);
        personViewHolder.photo_person.setImageResource(persons.get(i).photoId);
    }

    @Override
    public int getItemCount() {//đếm item
        return persons.size();
    }

    public static class PersonViewHolder  extends RecyclerView.ViewHolder{
        CardView cv;
        TextView person_name;
        TextView person_age;
        ImageView photo_person;
        public PersonViewHolder(final View itemView) {
            super(itemView);
            cv=(CardView)itemView.findViewById(R.id.cv);
            person_name=(TextView)itemView.findViewById(R.id.person_name);
            person_age=(TextView)itemView.findViewById(R.id.person_age);
            photo_person=(ImageView)itemView.findViewById(R.id.person_photo);
            itemView.setOnClickListener(new View.OnClickListener() {//sự kiện click

                @Override
                public void onClick(View v) {
                    int pos = getAdapterPosition();//lấy vị trí của mỗi dòng person
                   Toast.makeText(v.getContext(),person_age.getText(), Toast.LENGTH_SHORT).show();
                }
            });

        }

    }

    @Override
    public void onAttachedToRecyclerView(RecyclerView recyclerView) {
        super.onAttachedToRecyclerView(recyclerView);
    }
}

/**5.Tạo file MainActivity.java**/
	
	//khai báo biến toàn cục
	RecyclerView rv;
	//hàm onCreate()
        rv=(RecyclerView)findViewById(R.id.rv);
        //cố định size RecyclerView
        rv.setHasFixedSize(true);
        //LinearLayoutManager làm cho RecyclerView trở thành ListView
        LinearLayoutManager linearLayoutManager=new LinearLayoutManager(getApplicationContext());
        rv.setLayoutManager(linearLayoutManager);
        ArrayList<Person>arrPerson=new ArrayList<Person>();
        Person p=new Person("Emma Wilson", "23 years old", R.drawable.emma);
        Person p1=new Person("Lavery Maiss", "25 years old", R.drawable.lavery);
        arrPerson.add(p);
        arrPerson.add(p1);
        RVAdapter adapter = new RVAdapter(arrPerson);
        rv.setAdapter(adapter);
----------------------------------------------------------------------------------------------------------------------------------------
***Debug android without usb,over wifi:debug ứng dung android không cần cable mà chỉ cần qua trạm phát wifi:
//Bước 1
-Tạo điểm phát wifi từ điện điện thoại (cách tạo tùy vào từng loại máy)
//Bước 2
-Kết nối máy tính với trạm wifi vừa tạo

//Bước 3
=>tìm địa chỉ ip của điện thoại phát wifi

//Bước 4
-Tạo file runWifi.bat(tên đặt tùy ý) vào thư mục C:\Users\Administrator\AppData\Local\Android\sdk\platform-tools
//file runWifi.bat
adb tcpip 5555 //port kết nối
adb connect 192.168.43.1 //địa chỉ của trạm phát wifi tìm thấy ở bước 3
pause //ngừng lại để xem

*note:lần đầu chạy phải cắm cable để nó nhận port, sau đó có thể rút ra(ko cần mạng)
------------------------------------------------------------------------------------------------------------------------------------
**Các loại lưu trữ dữ liệu trên android:
//Shared Preferences
  Lưu trữ private data bằng cặp key-value.
  Thư mục lưu trữ: /data/data/<package_name>/shared_prefs/.xml
  Được sử dụng để lưu trữ các thông tin settings cho ứng dụng.
//Internal Storage
  Lưu trữ private data trên bộ nhớ của thiết bị.
//External Storage
 lưu trữ public data trên bộ nhớ ngoài.
//SQLite Databases
 Lưu trữ structured data trong một file private database.
//Network Connection
 Lưu trữ data trên server, tạo các service để lấy về thiết bị.
------------------------------------------------------------------------------------------------------------------------------------
**Internal Storage:lưu trữ bằng bộ nhớ trong android,để xem được dữ liệu đã lưu,cần phải có quyền root

//ghi dữ liệu vào bộ nhớ trong 
 FileOutputStream fileOutputStream;//khai báo biến toàn cục
 public void WriteData(String data) {
        fileOutputStream = null;
        try {
            fileOutputStream = openFileOutput("Data.txt", Context.MODE_PRIVATE);
            fileOutputStream.write(data.getBytes());
            Toast.makeText(MainActivity.this,"Write Successed",Toast.LENGTH_LONG).show();
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        } finally {
            try {
                fileOutputStream.close();
            } catch (IOException e) {
                e.printStackTrace();
            }
        }

    }

----------------------------------------------------------------------------------------------------------------------------------------------
**External Storage:Lưu dữ liệu vào bộ nhớ ngoài:nếu có sdcard thì lưu vào sdcard còn nếu ko thì sẽ lưu vào bộ nhớ máy và có thể xem được
//hàm lưu file.Nếu có thẻ nhớ thì lưu vào thẻ nhớ  còn không thì sẽ lưu vào bộ nhớ máy có thể xem đk
 private void saveFileExternal() {
        // TODO Auto-generated method stub
        OutputStreamWriter writer = null;
        // Get sdCard path
        File sdCard = Environment.getExternalStorageDirectory();//lấy  đường dẫn sdCard.
        if (sdCard.exists()) {// Check Sdcard exists
            File directory = new File(sdCard.getAbsolutePath() + "/MyFiles");//có thể tạo thư mục để lưu file
            if (!directory.exists()) {//nếu đường dẫn trên ko tồn tại thì sẽ tạo đường dẫn đó
                directory.mkdirs();
            }
            File file = new File(directory, "test_file.txt");//tạo file với đường dẫn trên
            try {
                writer = new OutputStreamWriter(new FileOutputStream(file));
                writer.write("Ok");
                writer.flush();
               // this.editText.setText("");
                Toast.makeText(this, "Save file sucess", Toast.LENGTH_SHORT).show();
            } catch (FileNotFoundException e) {
                // TODO Auto-generated catch block
                e.printStackTrace();
            } catch (IOException e) {
                // TODO Auto-generated catch block
                e.printStackTrace();
            } finally {
                if (writer != null) {
                    try {
                        writer.close();
                    } catch (IOException e) {
                        // TODO: handle exception
                    }
                }
            }

        } else {
            System.err.println("Storage sdCard not exists");
        }
    }
//có thể sử dụng hàm này để kiểm tra tình trạng có hay ko có external storage
 public boolean isExternalStorageWritable() {
        String state = Environment.getExternalStorageState();
        if (Environment.MEDIA_MOUNTED.equals(state)) {
            return true;
        }
        return false;
    }
	
//Xác định đường dẫn sdcard
  String separator = "/";
  String sdcardPath = Environment.getExternalStorageDirectory().getPath() + separator;
 Toast.makeText(MainActivity.this,sdcardPath,Toast.LENGTH_LONG).show();
----------------------------------------------------------------------------------------------------------------------------------------------
**TURNON/TURNOFF CAMERA FLASHLIGHT:
//Khai báo biến toàn cục
  private  Camera camera=null;
  private  boolean isFlashlightOn;
  Parameters parameters;
  
//ở hàm onCreate()
  boolean isCameraFlash=getApplicationContext().getPackageManager().hasSystemFeature(PackageManager.FEATURE_CAMERA_FLASH);
        if(!isCameraFlash){
            showToast("Device hasn't camera flash");
        }
        else{
           camera=Camera.open();
            parameters=camera.getParameters();
        }
		
//ở hàm onStop()
 @Override
    protected void onStop() { //tránh tình trạng crash app
        super.onStop();

        if (camera != null) {
            camera.release();
        }
}

//turn on
 public  void setFlashlightOn(){
       parameters=camera.getParameters();
       parameters.setFlashMode(Parameters.FLASH_MODE_TORCH);
       camera.setParameters(parameters);
       camera.startPreview();
       isFlashlightOn=true;
   }
   
 //turn off
    public  void setFlashlightOff(){
        parameters=camera.getParameters();
        parameters.setFlashMode(Parameters.FLASH_MODE_OFF);
        camera.setParameters(parameters);
        camera.stopPreview();
        isFlashlightOn=false;
    }
	
//event click
  public void Turnon(View v) {
            setFlashlightOn();
    }
 public  void Turnoff(View v){
        setFlashlightOff();
  }
  
 //thêm vào AndroidMaintifest.xml
    <uses-permission android:name="android.permission.CAMERA"/>
    <uses-feature android:name="android.hardware.camera" />
    <uses-permission android:name="android.permission.FLASHLIGHT"/>
    <uses-feature android:name="android.hardware.camera.flash" android:required="false" />
 
-----------------------------------------------------------------------------------------------------------------------------------------
**KIỂM TRA XEM DEVICE CÓ SUPPORT CAMERA HAY KHÔNG:
//biến kiểu boolean
boolean isCameraFlash=getApplicationContext().getPackageManager().hasSystemFeature(PackageManager.FEATURE_CAMERA_FLASH);
        if(!isCameraFlash){
            showToast("Device hasn't camera flash");
        }

-------------------------------------------------------------------------------------------------------------------------------------------		
**DEMO BLINK FLASHLIGHT VỚI SERVICE VÀ BROADCASTRECEIVER :LÀM CHO ĐÈN FLASH NHÁY LIÊN TỤC KHI BẮT ĐK BROADCASTRECEIVERBROADCASTRECEIVER VÀ SERVICE SẼ XỬ LÍ

//class SmsService.java extends từ Service
public class SmsService extends Service {
    private  Camera camera=null;
    private  boolean isFlashlightOn;
    Parameters parameters;
    @Nullable
    @Override
    public IBinder onBind(Intent intent) {
        return null;
    }

    @Override
    public void onStart(Intent intent, int startId) {
        String myString = "0101010101010101";
        long blinkDelay=50;
        camera=Camera.open();
        for (int i = 0; i < myString.length(); i++) {
            if (myString.charAt(i) == '0') {
              setFlashlightOn
            } else {
              setFlashlightOff
            }
            try {
                Thread.sleep(10);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }
        if (camera != null) {
            camera.release();
            camera = null;
        }
        super.onStart(intent, startId);

    }

    @Override
    public int onStartCommand(Intent intent, int flags, int startId) {
        return super.onStartCommand(intent, flags, startId);
    }

    @Override
    public void onDestroy() {
        if (camera != null) {
            camera.release();
            camera = null;
        }
        super.onDestroy();
    }

    public  void setFlashlightOn(){
        parameters=camera.getParameters();
        parameters.setFlashMode(Parameters.FLASH_MODE_TORCH);
        camera.setParameters(parameters);
        camera.startPreview();
    }
    public  void setFlashlightOff(){
        parameters=camera.getParameters();
        parameters.setFlashMode(Parameters.FLASH_MODE_OFF);
        camera.setParameters(parameters);
        camera.stopPreview();
    }
}
 //add AndroidMaintifest.xml
    <uses-permission android:name="android.permission.CAMERA"/>
    <uses-feature android:name="android.hardware.camera" />
    <uses-permission android:name="android.permission.FLASHLIGHT"/>
    <uses-feature android:name="android.hardware.camera.flash" android:required="false" />

-------------------------------------------------------------------------------------------------------------------------------------
**https://github.com/wasabeef/awesome-android-ui //UI ANDROID
----------------------------------------------------------------------------------------------------------------------------------
**Có thể tạo array từ resource trong values:
//example
/*Tạo file arr.xml trong thư mục values*/
<?xml version="1.0" encoding="utf-8"?>
<resources>
<string-array name="arr">
    <item>Duy Khang</item>
    <item>Thiện Huy</item>
    <item>Văn Tiến</item>
</string-array>
</resources>

/*MainActivity.java*/
		lv=(ListView)findViewById(R.id.lv);
        String[]arrName=getResources().getStringArray(R.array.arr);
        ArrayAdapter adapter=new ArrayAdapter(MainActivity.this,android.R.layout.simple_list_item_1,arrName);
        lv.setAdapter(adapter);
----------------------------------------------------------------------------------------------------------------------------------
**Bắt sự kiện onClick lên nhiều Button
//Click là tên sự kiệ onCLick của 2 buton
///MainActivity.java
 public void Click(View v) {
        if (v.getId() == R.id.btShow) {
            Toast.makeText(getApplicationContext(), "Show", Toast.LENGTH_LONG).show();
        }
        if (v.getId() == R.id.btHide) {
            Toast.makeText(getApplicationContext(), "Hide", Toast.LENGTH_LONG).show();
        }
    }
//layout
 <Button
       android:id="@+id/btShow"
       android:text="Show keyboard"
       android:onClick="Click"//tên sự kiện click
       android:layout_width="fill_parent"
       android:layout_height="wrap_content" />
    <Button
        android:id="@+id/btHide"
        android:text="Hide keyboard"
        android:onClick="Click"//tên sự kiện click
        android:layout_width="fill_parent"
        android:layout_height="wrap_content" />
------------------------------------------------------------------------------------------------------------------------------------
***Virtual Keyboard:
-CÓ 2 cách để thiết lập bàn phím ảo android:

//Thiết lập trong AndroidMaintifest.xml(cái này ít dùng)
 <activity
            android:windowSoftInputMode="stateVisible|adjustResize"
            android:name=".MainActivity"
            android:label="@string/app_name"
            android:theme="@style/AppTheme.NoActionBar" >
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
		
//Thiết lập trong Activity
 getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_VISIBLE|WindowManager.LayoutParams.SOFT_INPUT_ADJUST_RESIZE);//hiện và điều chỉnh size cho phù hợp

---------------------------------------------------------------------------------------------------------------------------------------
** Request Focus:là điểu chỉnh vị trí của con trỏ.Thường được dùng với EditText
//example
ed.requestFocus();//đưa con trỏ về EditText đã chỉ định
------------------------------------------------------------------------------------------------------------------------------------
**Ẩn/hiện bàn phím mềm android:

public void showKeyboard(){
        InputMethodManager inputMethodManager=(InputMethodManager)getSystemService(Context.INPUT_METHOD_SERVICE);
        inputMethodManager.showSoftInput(this.getCurrentFocus(),inputMethodManager.SHOW_IMPLICIT);
    }
public void hideKeyboard(){
        InputMethodManager inputMethodManager=(InputMethodManager)getSystemService(Context.INPUT_METHOD_SERVICE);
        inputMethodManager.hideSoftInputFromWindow(this.getCurrentFocus().getWindowToken(),0);
    }


--------------------------------------------------------------------------------------------------------------------------------------
**gravity:dùng để định dạng vị trí của một thành phần so với  1 thành phần bên trong nó
-Vị trí(center,left,right,top,bottom...) của các view(Button,TextView..)so với layout(LinearLayout,FrameLayout,RelativeLayout..)
-Vị trí(center,left,right,top,bottom...) của nội dung so với các view(Button,TextView...)
//example
  <LinearLayout
               android:id="@+id/tab1"
               android:orientation="vertical"
			   android:gravity="center" //kết quả là toàn bộ các view bên trong LinearLayout sẽ nằm ở giữa
			   //android:gravity="center|left"
               android:layout_width="match_parent"
               android:layout_height="match_parent">
            <TextView
                android:text="This is tab 1"
                android:layout_width="fill_parent"
				android:gravity="center" //kết quả là nộ dung bên trong TextView sẽ nằm giữa
			  //android:gravity="center|left"
                android:layout_height="wrap_content" />
  </LinearLayout>
--------------------------------------------------------------------------------------------------------------------------------
***layout_gravity:dùng để định dạng vị trí(center,left,right,top,bottom...) của 1 thành phần so với thành phần nằm bên ngoài
//example
			<TextView
                android:text="This is tab 1"
                android:layout_width="fill_parent"
				android:layout_gravity="center"//TextView sẽ nằm ở giữa so với bên ngoài
			  // android:layout_gravity="center|left"				
                android:layout_height="wrap_content" />
------------------------------------------------------------------------------------------------------------------------------------
**Padding:dùng để điều chỉnh khỏang cách của nội dung bên trong của 1 view hoặc ViewGroup so với chỉnh nó(View hoặc ViewGroup)
//example
<LinearLayout
    android:layout_width="match_parent"
    android:layout_height="match_parent" 
	android:paddingLeft="@dimen/activity_horizontal_margin"
    android:paddingRight="@dimen/activity_horizontal_margin"
    android:paddingTop="@dimen/activity_vertical_margin"
    android:paddingBottom="@dimen/activity_vertical_margin">

   <Button
       android:text="Button 1"
       android:paddingLeft="70dp"//nội dung text sẽ thụt về bên phải 70dp
       android:layout_width="fill_parent"
       android:layout_height="wrap_content" />
</LinearLayout>

**Note:nếu các thuộc tính paddingLeft,paddingRight,paddingBottom,paddingTop giống nhau thì có thể gôm lại thành thuộc tính padding
//example
 <Button
       android:text="Button 1"
      /* android:paddingLeft="70dp"
	   android:paddingRight="70dp"
	   android:paddingTop="70dp"
	   android:paddingBottom="70dp"
	   */
	   android:padding="70dp"//gôm chung lại
       android:layout_width="fill_parent"
       android:layout_height="wrap_content" />
-------------------------------------------------------------------------------------------------------------------------------------
**Margin:điều chỉnh khoảng cách của 1 view hoặc ViewGroup so với layout bên ngoài
//example
 <Button
        android:layout_marginTop="50dp"//Button sẽ cách phía trên 50dp
        android:text="Button"
        android:layout_width="fill_parent"
        android:layout_height="wrap_content" />
		
**note:nếu layout_marginTop,layout_marginRight,layout_marginLeft,layout_marginBottom đều giống  nhau thì ta có thể gôm nhóm lại thành layout_margin

**note:có thể kết hợp margin vs padding
--------------------------------------------------------------------------------------------------------------------------------------

***Get Phone number:
//Khai báo trong AndroidMaintifest.xml
<uses-permission android:name="android.permission.READ_PHONE_STATE"/>

//MainActivity.java
TelephonyManager tm = (TelephonyManager)getSystemService(TELEPHONY_SERVICE);
        String number = tm.getLine1Number();
        if(number!=null){
            Toast.makeText(getApplicationContext(),number,Toast.LENGTH_LONG).show();
        }
        else{
            Toast.makeText(getApplicationContext(),"Null",Toast.LENGTH_LONG).show();
        }
-------------------------------------------------------------------------------------------------------------------------------
**Context menu dialog:thường dùng với listview và girdview,dùng cho sự kiện long item press của item:
//example
/*Tạo Listview*/
	lv=(ListView)findViewById(R.id.lv);
        ArrayList<String> arr=new ArrayList<String>();
        arr.add("Duy Khang");
        arr.add("Văn Tiến");
        arr.add("Thiện Huy");
        ArrayAdapter adapter=new ArrayAdapter(MainActivity.this,android.R.layout.simple_list_item_1,arr);
        lv.setAdapter(adapter);
        registerForContextMenu(lv);//đăng kí sự kiện cho context menu dialog
		
/*Hàm onCreateContextMenu()*/
  public void onCreateContextMenu(ContextMenu menu, View v, ContextMenu.ContextMenuInfo menuInfo) {
        super.onCreateContextMenu(menu, v, menuInfo);
		//thông tin về item của listview khi long press
        AdapterView.AdapterContextMenuInfo info=(AdapterView.AdapterContextMenuInfo)menuInfo;
		//đặt tiêu đề cho dialog
	   menu.setHeaderTitle(arrName.get(info.position));
	   	//tham số đầu tiên là id của group menu(ko có thì để là menu.NONE)
		//tham số thứ 2 là id của menu
		//tham số thứ 3 là sắp xếp menu 
		//tham số cuối cùng là label  của menu
        menu.add(menu.NONE,1,1,"Delete");
		
		//có thể registerForContextMenu)() cho nhiều listview trong cùng một Activity dựa vào id của listview
		 if(v.getId()==R.id.lvSentbox){ //so sánh id của listview
            menu.add(menu.NONE, 0, 0, "From: " + arrFrom_Sentbox.get(info.position));
            menu.add(menu.NONE, 1, 1, "To: " + arrTo_Sentbox.get(info.position));
        }
        else if(v.getId()==R.id.lvInbox) {//so sánh id của listview
            menu.add(menu.NONE, 0, 0, "From: " + arrFrom_Inbox.get(info.position));
            menu.add(menu.NONE, 1, 1, "To: " + arrTo_Inbox.get(info.position));
        }
	   
      
    }

/*Hàm onContextItemSelected():dùng để thực hiện action khi nhấn vào menu*/
 public boolean onContextItemSelected(MenuItem item) {
	  // Get extra info about list item that was long-pressed
    AdapterContextMenuInfo menuInfo = (AdapterContextMenuInfo)item.getMenuInfo();//thông tin về item của listview khi long press
        if(item.getItemId()==0) {//nếu id của menu==0
        
        }
        else if(item.getItemId()==1){//nếu id của menu==1
			//remove listview
			adapter.remove(arrName.remove(menuInfo.position));
            adapter.notifyDataSetChanged();
			//toast
            Toast.makeText(MainActivity.this, "Send sms", Toast.LENGTH_LONG).show();
        }
       return true;

    }
----------------------------------------------------------------------------------------------------------------------------------
**Thread trong Android:Là một tiến trình dùng để xử lý các công việc riêng biệt.Có thể xử lý đồng thời
nhiều tiến trình
-Trong Android có 2 loại Thread
+Main Thread:Là một dạng của Thread nhưng có thể tương tác với giao diện người dùng
ví dụ có 1 textview trong quá trình hoạt động ta có thể cập nhật lại giao diện của textview thông qua Thread
+Worker Thread:là một dạng khác của Thread nhưng ko thể tương tác với giao diện người dùng
ví dụ:chỉ dùng để xử lý ngầm
**Một số Main Thread trong android:
+Handler
+AsyncTask
+BroadcastReceiver
+Service
------------------------------------------------------------------------------------------------------------------------------
**AsyncTask:là một tiến trình thuộc UI Thread thực hiện thông qua quy trình từ đầu tiên đến cuối cùng.
+onPreExecute():chạy đầu tiên khi khởi chạy AsyncTask.Thông thường phương thức này đk dùng để hiển thị progressBar
+doInBackground() và onProcessUpdate() chạy cùng lúc
doInBackground() là Worker Thread chỉ thực hiện những đoạn code sẽ có tham số trả về khi truyền vào AsyncTask.
onProcessUpdate()là UI Thread phương thức này sẽ đk gọi khi ở doInBackground() có gọi phương thức publishProgress().Thông thường
dùng để cập nhập giao diện người dùng.
+onPostExecute() thực hiện sau cùng sẽ cho ra kết quả.
onPostExecute() sẽ đk gọi khi doInBackground() thực hiện xong và kết quả trả về ở doInBackground() sẽ là kết quả ở phương thức này.
---------------------------------------------------------------------------------------------------------------------------------
***MỘt số quy tắt khi sử dụng AsyncTask
-AsyncTask chỉ được thực hiện ở UI Thread
-AsyncTask chỉ đk tạo ở UI Thread
-Phương thức excute(tham số) chỉ dk thực hiện ở UI Thread
-AsyncTask chỉ thực hiện một lần duy nhất. dừng tại onPostExecute()
--------------------------------------------------------------------------------------------------------------------------
**Tham số trong AsyncTask<Param,Progress,Result>
Param: sẽ đk gọi ở phương thức doInBackground()
Progress: tham số này sẽ quy định tham số nhận vào ở onProcessUpdate()
Result: tham số này sẽ quy định tham số nhận vào ở onPostExecute().Và đk trả ra ở phương thức doInBackground()
----------------------------------------------------------------------------------------------------------------------------------
***CÁC LOẠI PARSER XML:
+DOM
+SAX
+XMLPullParser
------------------------------------------------------------------------------------------------------------------------------
**ViewGroup:là một view nhưng nó dùng để nhóm các view con lại
Ví dụ như LinearLayout,FrameLayout,RelativeLayout là những ViewGroup.
//example
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    xmlns:app="http://schemas.android.com/apk/res-auto" android:layout_width="match_parent"
    android:layout_height="match_parent" android:paddingLeft="@dimen/activity_horizontal_margin"
    android:paddingRight="@dimen/activity_horizontal_margin"
    android:paddingTop="@dimen/activity_vertical_margin"
    android:paddingBottom="@dimen/activity_vertical_margin"
    app:layout_behavior="@string/appbar_scrolling_view_behavior"
    tools:showIn="@layout/activity_main" tools:context=".MainActivity">

    <TextView android:text="Hello World!" android:layout_width="wrap_content"
        android:layout_height="wrap_content" />
</RelativeLayout>
---------------------------------------------------------------------------------------------------------------
**View là những thành phần con bên trong ViewGroup:ví dụ TextView,Button..
//example
<TextView 
		android:text="Hello World!" 
		android:layout_width="wrap_content"
        android:layout_height="wrap_content" />
------------------------------------------------------------------------------------------------------------
***TABHOST:
//tạo TABHOST cách 1
  /*1. Tạo main_layout.xml */
  <?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent">
	
	//Tag này bắt buộc,id tự đặt
   <TabHost
       android:id="@+id/tabHost"
       android:layout_width="match_parent"
       android:layout_height="match_parent">
	   
	   //tabwiget là nơi hiển thị các Tab và nằm trong ViewGroup của <TabHost> id phải đặt là tab
       <TabWidget
           android:id="@android:id/tabs"
           android:layout_width="match_parent"
           android:layout_height="wrap_content"></TabWidget>
		   
		   //FrameLayout này dùng để chứa toàn bộ nội dung,id phải đặt là tabcontent
       <FrameLayout
           android:id="@android:id/tabcontent"
           android:layout_marginTop="50dp"
           android:layout_width="match_parent"
           android:layout_height="match_parent">
		   
		   //LinearLayout này tương ứng với nội dung tab1 ,id tùy ý
           <LinearLayout
               android:id="@+id/tab1"
               android:orientation="vertical"
               android:layout_width="match_parent"
               android:layout_height="match_parent">
            <TextView
                android:text="This is tab 1"
                android:layout_width="fill_parent"
                android:layout_height="wrap_content" />
           </LinearLayout>
		   
		   //LinearLayout này tương ứng với nội dung tab2 ,id tùy ý
           <LinearLayout
               android:id="@+id/tab2"
               android:orientation="vertical"
               android:layout_width="match_parent"
               android:layout_height="match_parent">
               <TextView
                   android:text="This is tab 2"
                   android:layout_width="fill_parent"
                   android:layout_height="wrap_content" />
           </LinearLayout>
		   
		   //LinearLayout này tương ứng với nội dung tab3 ,id tùy ý
           <LinearLayout
               android:id="@+id/tab3"
               android:orientation="vertical"
               android:layout_width="match_parent"
               android:layout_height="match_parent">
               <TextView
                   android:text="This is tab 3"
                   android:layout_width="fill_parent"
                   android:layout_height="wrap_content" />
           </LinearLayout>

       </FrameLayout>
   </TabHost>
</LinearLayout>

/*2. Tạo MainActivity.java */
  TabHost tabHost=(TabHost)findViewById(R.id.tabHost);
        tabHost.setup();//setup
		
		//tab1
        TabHost.TabSpec tab1=tabHost.newTabSpec("Tab 1");//khởi tạo tab1
        tab1.setIndicator("Tab 1");//Đặt tiêu đề cho tab
        tab1.setContent(R.id.tab1);// ánh xạ với ViewGroup tương ứng với tab1 bên layout
		
        //tab2
        TabHost.TabSpec tab2=tabHost.newTabSpec("Tab 2");//khởi tạo tab2
        tab2.setIndicator(" 2");//Đặt tiêu đề cho tab 2
        tab2.setContent(R.id.tab2); //ánh xạ với ViewGroup tương ứng với tab2 bên layout
		
		//tab3
        TabHost.TabSpec tab3=tabHost.newTabSpec("Tab 3"); //khởi tạo tab3
        tab3.setIndicator(" 3"); //Đặt tiêu đề cho tab3
        tab3.setContent(R.id.tab3);//ánh xạ với ViewGroup tương ứng với tab3 bên layout
		
		//Add 3 tab vào tabHost
        tabHost.addTab(tab1);
        tabHost.addTab(tab2);
        tabHost.addTab(tab3);
		
--------------------------------------------------------------------------------------------------------------
***ENABLE/DISABLE WIFI:

//khai báo trong AndroidManifest.xml
<uses-permission android:name="android.permission.ACCESS_WIFI_STATE"/>
<uses-permission android:name="android.permission.CHANGE_WIFI_STATE"/>

//Main2Activity.java
  /*1.Khai báo biến toàn cục*/
    Button btEnable,btDisable;
    WifiManager wifiManager;
 /*2.Trong hàm onCreate()*/
	init();
    wifiManager=(WifiManager)getSystemService(Context.WIFI_SERVICE);
/*3.Tạo các hàm ở ngoài onCreate()*/
  public void init(){
        btEnable=(Button)findViewById(R.id.btEnable);
        btDisable=(Button)findViewById(R.id.btDisable);

    }
    public void Enable(View v){
        if(!wifiManager.isWifiEnabled()){
            wifiManager.setWifiEnabled(true);
            Toast.makeText(MainActivity.this,"Wifi enable",Toast.LENGTH_LONG).show();
        }
    }
    public void Disable(View v){
        if(wifiManager.isWifiEnabled()){
            wifiManager.setWifiEnabled(false);
            Toast.makeText(MainActivity.this,"Wifi Disable",Toast.LENGTH_LONG).show();
        }
    }
-----------------------------------------------------------------------------------------------------------------------------------
***ENABLE/DISABLE 3G:
//Khai báo AndroidMaintifest.xml
<uses-permission android:name="android.permission.CHANGE_NETWORK_STATE"/>

//Main2Activity.java trong hàm onCreate()
 btEnable=(Button)findViewById(R.id.btEnable);
        btEnable.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                ConnectivityManager cm =
                        (ConnectivityManager)getSystemService(CONNECTIVITY_SERVICE);

                try {
                    Method dataMtd;
                    dataMtd =
                            ConnectivityManager.class.getDeclaredMethod("setMobileDataEnabled",
                                    boolean.class);
                    if(dataMtd.isAccessible()){
                        dataMtd.setAccessible(false);
                        dataMtd.invoke(cm, false);
                    }
                    else {
                        dataMtd.setAccessible(true);
                        dataMtd.invoke(cm, true);
                    }
                } catch (NoSuchMethodException e) {
                    e.printStackTrace();
                } catch (IllegalArgumentException e) {
                    e.printStackTrace();
                } catch (IllegalAccessException e) {
                    e.printStackTrace();
                } catch (InvocationTargetException e) {
                    e.printStackTrace();
                }
            }
        });
-----------------------------------------------------------------------------------------------------------------------------------
***Kiểm tra tình trạng mạng:nếu có wifi thì sẽ kết nối wifi còn nếu ko thì sẽ kết nối 3g;
/*1.Tạo các hàm cần thiết */

 //Hàm kiểm tra tình trạng mạng (bao gồm cả wifi và 3g)
    public boolean checkNetwork() {
        ConnectivityManager manager = (ConnectivityManager)getSystemService(CONNECTIVITY_SERVICE);
        NetworkInfo info = manager.getActiveNetworkInfo();
        if (info != null && info.isConnected()) {
          //  Toast.makeText(MainActivity.this,"Network Connected",Toast.LENGTH_LONG).show();
            return true;
        } else {
          //  Toast.makeText(MainActivity.this,"Network Disconnected",Toast.LENGTH_LONG).show();
            return  false;

        }
    }

 //Hàm thực hiện kết nối 3g;
public  void connect3G(){
    ConnectivityManager cm =
            (ConnectivityManager)getSystemService(CONNECTIVITY_SERVICE);

    try {
        Method dataMtd;
        dataMtd =
                ConnectivityManager.class.getDeclaredMethod("setMobileDataEnabled",
                        boolean.class);
        if(dataMtd.isAccessible()){
            dataMtd.setAccessible(false);
            dataMtd.invoke(cm, false);
        }
        else {
            dataMtd.setAccessible(true);
            dataMtd.invoke(cm, true);
        }
    } catch (NoSuchMethodException e) {
        e.printStackTrace();
    } catch (IllegalArgumentException e) {
        e.printStackTrace();
    } catch (IllegalAccessException e) {
        e.printStackTrace();
    } catch (InvocationTargetException e) {
        e.printStackTrace();
    }
}
  //Hàm thực hiện kết nối wifi
    public void connectWifi(){
        wifiManager=(WifiManager)getSystemService(getApplicationContext().WIFI_SERVICE);
        wifiManager.setWifiEnabled(true);
    }

	
 //Hàm thực hiện disconnectWifi
    public void disconnectWifi(){
        wifiManager.setWifiEnabled(false);
    }

/*2.Xử lí*/
  Boolean check1=checkNetwork();
        if (check1==true){//nếu đã kết nối với wifi hoặc 3g
            Toast.makeText(MainActivity.this,"Network Connected",Toast.LENGTH_LONG).show();
        } else { //ngược lại
            connectWifi(); //bật wifi lên (ưu tiên cho wifi)
            CountDownTimer countDownTimer=new CountDownTimer(5000,1000) { //countDownTimer để delay quá trình kết nối.sau 5s sẽ tiếp tục kiểm tra tình trạng mạng lúc này
                @Override
                public void onTick(long millisUntilFinished) {

                }
                @Override
                public void onFinish() {//sau 5 giây
                  Boolean check2=checkNetwork();
                    if (check2==true) {//nếu sau 5 giây mà kết nối wifi thành công
                        Toast.makeText(MainActivity.this, "Network Connected", Toast.LENGTH_LONG).show();
                    }
                    else{//ngược lại
                        disconnectWifi();//tắt wifi
                        connect3G();//chuyển qua kết nối 3g
                    }
                }
            }.start();
        }
/*Khai báo trong AndroidMaintifest.xml*/
 <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/>
-----------------------------------------------------------------------------------------------------------------------------------
***FrameLayout:
-Phù hợp với giao diện có 1 control duy nhất. nếu có nhiề control thì các control sẽ nằm đè lên nhau tại góc trái màn hình.
-Sử dụng thuộc tính layout_gravity để định vị trí các control.
//example
android:layout_gravity="center"
------------------------------------------------------------------------------------------------------------------------
***ẨN ICON ỨNG DỤNG KHÔNG MẤT BROADCASTRECEIVER VÀ SERVICE:
//ẩn ngay khi cài.cái này ko thể mở đk ứng dụng
 <activity
            android:name=".MainActivity"
            android:label="@string/app_name"
            android:theme="@style/AppTheme.NoActionBar" >`
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.DEFAULT" />//thay đổi android.intent.category.LAUNCHER thành android.intent.category.DEFAULT
            </intent-filter>
        </activity>
//ẩn sau lần chạy đầu tiên
 PackageManager pkg=this.getPackageManager();
        pkg.setComponentEnabledSetting(new ComponentName(this, MainActivity.class), PackageManager.COMPONENT_ENABLED_STATE_DISABLED,
                PackageManager.DONT_KILL_APP);
-------------------------------------------------------------------------------------------------------------------------------
**TẠO ICON ANDROID TRỰC TUYẾN:
https://romannurik.github.io/AndroidAssetStudio/icons-launcher.html
--------------------------------------------------------------------------------------------------------------------
**VÒNG ĐỜI CỦA MỘT ỨNG DỤNG ANDROID:
//khi chạy lần đầu:
onCreate()->onStart()->onResume();
//khi nhấn nút Home
onPause()->onStop();
//khi vào lại ứng dụng lần thứ 2(chưa thoát ứng dụng ở lần 1)
onRestart()->onStart()->onResume();
//khi nhấn nút back quay lại và thoát ra khỏi ứng dụng
onPause()->onStop()->onDestroy();
//Visible Lifetime:là khi mở một activity mới mà che khuất toàn bộ activity hiện tại(tức là chuyển hoàn toàn sang activity khác)
onPause()->onStop();
//Foreground Lifetime:là khi mở một activity mới mà che khuất một phần activity hiện tại(tức là dạng dialog)
onPause()->onResume();
---------------------------------------------------------------------------------------------------------------------
**onBackPressed():là phương thức sử dụng với nút back
-nếu như trong ứng dụng ko có phương thức onBackPressed() thì khi nhấn nút back thì ứng dụng vẫn hoạt động bình thường
sẽ thoát ra ngoài ứng dụng.
-Nếu như có onBackPressed() mà ko có  gọi super.onBackPressed()thì khi nhấn nút back ứng dụng sẽ ko thể thoát ra.
//example
@Override
    public void onBackPressed() {
        super.onBackPressed(); //khi nhấn thì sẽ thoát ra ngoài.nếu ko có super.onBackPressed()thì khi nhấn ứng dụng sẽ ko thoát ra dk
    }
**ỨNG DỤNG onBackPressed() NHẤN 2 LẦN NÚT BACK ĐỂ THOÁT KHỎI ỨNG DỤNG
//khai báo 1 biến toàn cục
private boolean doubleBackToExitPressedOnce = false;
//trong phương thức onResume()
 @Override
    protected void onResume() {
        super.onResume();
        this.doubleBackToExitPressedOnce = false;
    }
//trong phương thức onBackPressed()
  @Override
    public void onBackPressed() {
        if (doubleBackToExitPressedOnce) { //doubleBackToExitPressedOnce==true
            super.onBackPressed();
            return;
        }
        this.doubleBackToExitPressedOnce = true;
        Toast.makeText(this, "Press again to exits", Toast.LENGTH_SHORT).show();
    }
--------------------------------------------------------------------------------------------------------------------
**THAY ĐỔI TÊN ỨNG DỤNG ANDROID:
-thay đổi label Activity lauch main trong AndroidMaintifest
<activity
            android:name=".MainActivity"
            android:label="Test"
            android:theme="@style/AppTheme.NoActionBar" >
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>

------------------------------------------------------------------------------------------------------------------------
**LAYOUT:
	
	layout_gravity(FrameLayout):chỉnh vị trí cho toàn bộ layout:có thể là button,textview,editext,Progressbar
	gravity(FrameLayout):chỉnh vị trí cho text:căn giữa,trái,phải
---------------------------------------------------------------------------------------------------------------
***Phím tắt Android Studio:
-định dạng lại code:CTRL+ALT+L
-Generate method:ALT+Insert

============================================================ACTIONBAR=====================================================
***ACTIONBAR:
-Action Bar:
+Action Bar is an Android UI component which occupies dedicated space onf top of Applications.
+Action Bar is a window feature which provides User actions and Navigation modes.
-How Action Bar is organized?:
----------------------------------------------------------------------------------------------------------------------
**ADD UP BUTTON ACTION BAR:NÚT BACK QUAY LẠI CÁC MÀN HÌNH TRƯỚC ĐÓ.
//Step 1:Tạo MainActivity.java và MainActivity2.java	
	//MainActivity.java
	 public void Click(View v){ //dùng để chuyển qua MainActivity2.java
        Intent i=new Intent(MainActivity.this,Main2Activity.class);
        startActivity(i);
    }
	//MainActivity2.java trong hàm onCreate()
	 getSupportActionBar().setDisplayHomeAsUpEnabled(true);
//Step 2:Thiết lập trong AndroidMaintifest.xml
		//AndroidMaintifest.xml
	 <activity
            android:name=".Main2Activity"
            android:label="@string/title_activity_main2"
            android:parentActivityName=".MainActivity"//đây là Activity muốn chuyển về
            >
            <meta-data
               android:name="android.support.PARENT_ACTIVITY"
                android:value=".MainActivity" //đây là Activity muốn chuyển về
                />
        </activity>
//Step 3:Chỉnh trong String.xml
	 <style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar">
        <!-- Customize your theme here. -->
        <item name="colorPrimary">@color/colorPrimary</item>
        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
        <item name="colorAccent">@color/colorAccent</item>
    </style>
	
----------------------------------------------------------------------------------------------------------
***Toolbar:
 app:popupTheme="@style/AppTheme.PopupOverlay"//hiện thị màu nền khi nhấn menu dropdown actionBar
-----------------------------------------------------------------------------------------------------
**ADD ICON ỨNG DỤNG LÊN ACTIONBAR:
//import thư viện ActionBar
import android.support.v7.app.ActionBar;

//MainActivity.java
		ActionBar actionBar=getSupportActionBar();
        actionBar.setDisplayShowHomeEnabled(true);
        actionBar.setIcon(R.drawable.icon);//set Icon
----------------------------------------------------------------------------------------------------------
**CÓ THỂ THAY ĐỔI MÀU CỦA ACTIONBAR:thay đổi trong file color.xml và styles.xml
---------------------------------------------------------------------------------------------------------
**ADD MENU ACTIONBAR:
<menu 
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools" tools:context=".MainActivity">
    <item android:id="@+id/action_settings" //id
        android:title="@string/action_settings"//tiêu đề
        android:orderInCategory="100" 
		app:showAsAction="never" // hiện item ở trong dropdown bên phải
		//app:showAsAction="always"  //hiện lên bên ngoài actionBar
		/>
</menu>





 ========================================================CONTENT PROVIDER===========================================
**CONTENT PROVIDER:LÀ MỘT DẠNG CHIA SẼ DỮ LIỆU GIỮA CÁC ỨNG DỤNG:VÍ DỤ NHƯ CÓ THỂ LẤY ĐK THÔNG TIN DANH BẠ, TIN NHẮN, CALL LOG
BROWSER HISTORY.
//READ SMS INBOX
/*1. Khai báo trong AndroidMaintifest.xml*/
 <uses-permission android:name="android.permission.READ_SMS"/>
/*2.Phần xử lý tin nhắn*/
ArrayList<String>sms=new ArrayList<String>();
        Uri uri=Uri.parse("content://sms/inbox");
        Cursor cursor=getContentResolver().query(uri, new String[]{"_id", "address", "date", "body"}, null, null, null);
          int count=cursor.getCount();//đếm số tin nhắn
        if(count!=0) {
            cursor.moveToFirst();
            String bodySms = null;
            String address = null;
            String date = null;
            date = cursor.getString(2);
            address = cursor.getString(1);
            bodySms = cursor.getString(3);
            sms.add(bodySms.toString() + "" + address + "" + date);
            while (cursor.moveToNext()) {
                date = cursor.getString(2);
                address = cursor.getString(1);
                bodySms = cursor.getString(3);
                sms.add(bodySms.toString() + "" + address + "" + date);
            }
	**note: có thể đọc được sent sms ,draft sms bằng cách thay thế "content://sms/inbox" thành "content://sms/sent",
	"content://sms/draft"
---------------------------------------------------------------------------------------------------------------
 **check array empty:
 if (fetchInbox().isEmpty()){
            Toast.makeText(MainActivity.this," not have sms",Toast.LENGTH_LONG).show();
        }
-------------------------------------------------------------------------------------------------------------
**MẢNG 2 CHIỀU:
	String []vnexpress={"Trang chủ","Xã hội"};
	Srting []dantri={"Thể thao","Bóng đá"};
	String [][]categories={vnexpress,dantri};
	String item=categories[0][0] //kết quả trang chủ
	String item2=categories[1][0] //kết quả thể thao
*** setTitle("Tin tức");//set tiêu đề cho Activity
//MainActivity.java
 protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_paper);
        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);
        setTitle("Tin tức");

        FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);
        fab.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                Snackbar.make(view, "Replace with your own action", Snackbar.LENGTH_LONG)
                        .setAction("Action", null).show();
            }
        });
--------------------------------------------------------------------------------------------------------------
***PROGRESS DIALOG:
  ProgressDialog progressDialog=new ProgressDialog(MainActivity.this);
			progressDialog.setMessage("Loading "+String.valueOf(values[0])+"%");
            progressDialog.setProgressStyle(ProgressDialog.STYLE_HORIZONTAL);
            progressDialog.setProgress(values[0]);
            progressDialog.show();
----------------------------------------------------------------------------------------------
***ĐA TIẾN TRÌNH TRONG ANDROiD:

//Cách 1: Ta implements interface Runnable


//Cách 2: Kế thừa trực tiếp từ lớp Thread


/*note:Thường thì người ta hay sử dụng cách 1, do cách 1 có thể chia sẻ được các đối tượng qua lại giữa các tiến trình.*/
------------------------------------------------------------------------------------------------------
***
-AsyncTask là một class giúp thay thế UI thread thường dùng trong các trường hợp load dữ liệu không dài còn
trong các trường hợp thời gian dài thì có thể dùng các class thuộc java.util.concurrent như Excutor,ThreadFoolExcutor và FutureTask.
-Trường hợp cụ thể của AsyncTask là:download file,load ảnh,load dữ liệu text,json,xml từ server. 
//example:Thread với AsyncTask
//tham số đầu tiên là truyền vào phương thức doInBackground(Integer ...params);
//tham số thứ 2 là truyền vào phương thức onProcessUpdate(String ...params);
//tham số thứ 3 là truyền vào phương thức onPostExecute(String ...params);
**Thread với AsyncTask
class Download extends AsyncTask<Void,Integer,Boolean>{
        //khỏi tạo các đối tượng
        private TextView tv;
        private ProgressDialog progressDialog;
        @Override
        //thực hiện đầu tiên
        protected void onPreExecute() {
            tv=(TextView)findViewById(R.id.tv);
            progressDialog=new ProgressDialog(MainActivity.this);
            super.onPreExecute();
        }
        //thực hiện chạy nền
        @Override
        protected Boolean doInBackground(Void... params) {
            for(int i=0;i<100;i++){
                try {
                    Thread.sleep(300);//cứ sau 300milisecond thì tiếp tục
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }
                publishProgress(i+1);//bắn ra các thông báo trong khi xủ lí
            }
            return true;
        }
        //phương thức này nhận các thông báo bắn ra từ publishProgress(i+1);
        @Override
        protected void onProgressUpdate(Integer... values) {
            progressDialog.setMessage("Loading "+String.valueOf(values[0])+"%");
            progressDialog.show();
            super.onProgressUpdate(values);
        }

        @Override
        protected void onPostExecute(Boolean aBoolean) {
            progressDialog.cancel();
            tv.setText("Download complete");
           // p.cancelLongPress();
            super.onPostExecute(aBoolean);
        }
    }
---------------------------------------------------------------------------------------------------------
***BROADCASTRECEIVER: được dùng để nhận các intent từ hệ thống hoặc trao đổi dữ liệu giữa hai hay nhiều ứng dụng.
ví dụ như hệ thống có thể biết được khi nào có tin nhắn đến,cuộc gọi đến,biết được rút sạc hay cắm sạc,tình trạng wifi,pin
-Có 2 cách đăng kí BroadcastReceiver:
+cách 1:Đăng ký ngay trong coding: Cách này ít được dùng vì chỉ khi ứng dụng mở lên nó mới nhận các thông tin từ hệ thống,
 khi ứng dụng tắt đi thì nó cũng không nhận được nữa.
+cách 2:Đăng ký trong AndroidMaintifest.xml: Cách này được sử dụng rất nhiều, với cách đăng ký này ngay cả khi ứng dụng của bạn đang tắt
 nó vẫn có thể nhận được thông tin từ hệ thống, khi nhận được thông tin nó lập tức khởi động ứng dụng 
 (Bạn thử liên tưởng tới phần mềm nhắn tin xem, khi có tin cái là nó tự mở luôn :) ).
 //action <intent-filter>
<action android:name="android.net.wifi.STATE_CHANGE"/> //nhận biết đk tình trạng wifi
//example nhận biết tình trạng wifi
   //khai báo trong AndroidMaintifest
   <receiver android:name="MyBroadcast"> //tên phải cùng với class BroadcastReceiver
            <intent-filter>
                <action android:name="android.net.wifi.STATE_CHANGE"/>
            </intent-filter>
   </receiver>
   //tạo lớp MyBroadcast.java kế thùa từ BroadcastReceiver
   public class MyBroadcast extends BroadcastReceiver {
    @Override
    public void onReceive(Context context, Intent intent) {
        Toast.makeText(context,"You are changed wifi",Toast.LENGTH_LONG).show();
    }
}
//EXAMPLE CUSTOM BROADCASTRECEIVER
	//1. khai báo trong AndroidMaintifest
   <receiver android:name="MyBroadcast"> //tên phải cùng với class BroadcastReceiver
            <intent-filter>
                <action android:name="com.tutorialspoint.CUSTOM_INTENT"/>//Tên Broadcast custom
            </intent-filter>
   </receiver>
	//2. tạo lớp MyBroadcast.java kế thùa từ BroadcastReceiver
   public class MyBroadcast extends BroadcastReceiver {
    @Override
    public void onReceive(Context context, Intent intent) {
		 String Infor=intent.getStringExtra("Infor");//lấy dữ liệu đk gửi đến
        Toast.makeText(context,"You are changed wifi",Toast.LENGTH_LONG).show();
    }
}
	//3. MainActivity.java:lớp gửi Broadcast
		Intent i=new Intent();
        i.setAction("com.tutorialspoint.CUSTOM_INTENT");
        i.putExtra("Infor","Received broadcast");//có thể truyền dữ liệu qua Broadcast
        sendBroadcast(i); //gử Broadcast 
		
//EXAMPLE RECEIVER SMS:
	//1. khai báo thêm trong AndroidMaintifest
	<uses-permission android:name="android.permission.RECEIVE_SMS"/>//quyền nhận sms
		<receiver
             android:name="MyBroadcastReceiver"
              android:label="On Receiver SMS" >
            <intent-filter>
                <action android:name="android.provider.Telephony.SMS_RECEIVED"/>
            </intent-filter>
        </receiver>
	//2. MyBroadcastReceiver.java extends BroadcastReceiver
	public class MyBroadcastReceiver extends BroadcastReceiver{
    public static final String ACTION = "android.provider.Telephony.SMS_RECEIVED";
    @Override
    public void onReceive(Context context, Intent intent) {
        if (intent.getAction().equals(ACTION)) {
            Bundle bundle = intent.getExtras();
            if (bundle != null) {
                Object[] pdus = (Object[]) bundle.get("pdus");
                SmsMessage[] messages = new SmsMessage[pdus.length];
                for (int i = 0; i < pdus.length; i++) {
                    messages[i] = SmsMessage.createFromPdu((byte[]) pdus[i]);
                }
                for (SmsMessage message : messages) {

                    String strMessageFrom = message.getDisplayOriginatingAddress();
                    String strMessageBody = message.getDisplayMessageBody();

                    Toast.makeText(context, "SMS Message received from:" + strMessageFrom, Toast.LENGTH_LONG).show();
                    Toast.makeText(context, "SMS Message content" + strMessageBody, Toast.LENGTH_LONG).show();

                }
            }
        }
    }
	
//GỬI BROADCASTRECEIVER GIỮA 2 ỨNG DỤNG:gửi từ ứng dụng 1 sang ứng dụng 2
  //ứng dụng 1 chỉ cần file MainActivity.java
	//Tạo file MainActivity.java
		Intent i=new Intent();
        i.setAction("com.tutorialspoint.CUSTOM_INTENT");//truyền dữ liệu qua ứng dụng 2
        i.putExtra("Infor","Received broadcast");//có thể truyền dữ liệu qua Broadcast
        sendBroadcast(i); //gử Broadcast 
 //ứng dụng 2 chỉ cần file MyBroadcast extends BroadcastReceiver
	//tạo file MyBroadcast extends BroadcastReceiver
	  public class MyBroadcast extends BroadcastReceiver {
    @Override
    public void onReceive(Context context, Intent intent) {
		 String Infor=intent.getStringExtra("Infor");//lấy dữ liệu đk gửi tử ứng dụng 1
        Toast.makeText(context,"You are changed wifi",Toast.LENGTH_LONG).show();
    }

	
---------------------------------------------------------------------------------------------------------------------------	
//GỬI INTENT TỪ BROADCASTRECEIVER SANG ACTIVITY KHÁC 
	// 1. MyBroadcastReceiver.java
	public class MyBroadcastReceiver extends BroadcastReceiver{
    public static final String ACTION = "android.provider.Telephony.SMS_RECEIVED";
    @Override
    public void onReceive(Context context, Intent intent) {
        if (intent.getAction().equals(ACTION)) {
            Bundle bundle = intent.getExtras();
            if (bundle != null) {
                Object[] pdus = (Object[]) bundle.get("pdus");
                SmsMessage[] messages = new SmsMessage[pdus.length];
                for (int i = 0; i < pdus.length; i++) {
                    messages[i] = SmsMessage.createFromPdu((byte[]) pdus[i]);
                }
                for (SmsMessage message : messages) {

                    String strMessageFrom = message.getDisplayOriginatingAddress();
                    String strMessageBody = message.getDisplayMessageBody();
                   Intent i=new Intent("broadcast");
                    i.putExtra("SmsContent",strMessageBody);
                    i.putExtra("SmsFrom",strMessageFrom);
                    context.sendBroadcast(i);
                }
            }
        }
    }
}
	//2 .MainActivity.java:ở hàm Oncreate
	
		 MyBroadcastReceiver Mybroadcast= new MyBroadcastReceiver() {
            @Override
            public void onReceive(Context context, Intent intent) {
                Bundle bd=intent.getExtras();
                if(bd!=null) {
                    String SmsContent = bd.getString("SmsContent");
                    String SmsFrom=bd.getString("SmsFrom");
                }
            }
        };
       registerReceiver(Mybroadcast,new IntentFilter("broadcast"));

***BroadcastReceiver và Service:BroadcastReceiver thì nhận những thay đổi từ hệ thống còn Service thì xử lý việc chạy nền
Ví dụ:BroadcastReceiver bắt được thông báo có tin nhắn đến sau đó sẽ bắt đầu Service để chặn tin nhắn đó hoặc gửi lên server...
//EXAMPLE NHẬN THÔNG BÁO CÓ TIN NHẮN ĐẾN VÀ SẼ BẮT ĐẦU SERVICE XỬ LÝ
  /*1.MyBroadcastReceiver.java extends BroadcastReceiver đã nhận đk thông báo có tin nhắn*/
   Intent serviceIntent = new Intent();
   serviceIntent.setAction("com.enea.training.bootdemo.BootDemoService");//khởi tạo một dịch vụ đk định nghĩa trong AndroidMaintifest
  context.startService(serviceIntent);//bắt đầu service
  /*2.Send.java extends Service sẽ xử lý tin nhắn*/
 @Override
    public void onStart(Intent intent, int startId) {
        super.onStart(intent, startId);
       Thread t=new Thread(new Runnable() {
            @Override
            public void run() {
                new Send_Data().execute("http://khangserver-khangit.rhcloud.com/index.php");
            }
        });
        t.start();
    }
/*3.Khai báo thêm trong AndroidManifest.xml*/
 <service android:name=".Send">
            <intent-filter>
                <action android:name="com.enea.training.bootdemo.BootDemoService"/>
            </intent-filter>
  </service>

----------------------------------------------------------------------------------------------------------------------------------------
**TA CÓ THỂ DÙNG NHIỀU BROADCASTRECEIVER CHO 1 ỨNG DỤNG
//example BroadcastReceiver sẽ bắt thông báo khi có wifi thay đổi(connected,disconnected) và bắt thông báo khi cắm sặc còn service thì thực hiện chạy nền xử lý
 
 /***1.class MyBroadcastReceiver.java extends từ BroadcastReceiver***/
public class MyBroadcastReceiver extends BroadcastReceiver {
    public  static final String Action_Connected="android.intent.action.ACTION_POWER_CONNECTED";
    public  static final String Action_Wifi="android.net.wifi.STATE_CHANGE";
    @Override
    public void onReceive(Context context, Intent intent) {
		//nếu bắt đk sự kiện wifi thay đổi thì sẽ start 1 service
        if (intent.getAction().equals(Action_Connected)){
            Intent serviceConnect=new Intent();
            serviceConnect.setAction("ConnectService");
            context.startService(serviceConnect);

        }
		//nếu bắt đk sự kiện khi cắm sạc thì sẽ start 1 service
      if(intent.getAction().equals(Action_Wifi)) {
          Intent serviceWifi=new Intent();
          serviceWifi.setAction("WifiService");
          context.startService(serviceWifi);
        }
    }
}

/***2.class WifiService.java extends từ Service để xử lí khi wifi thay đổi***/
public class WifiService extends Service {
    @Nullable
    @Override
    public IBinder onBind(Intent intent) {
        return null;
    }

    @Override
    public void onStart(Intent intent, int startId) {
        super.onStart(intent, startId);
        Toast.makeText(getApplicationContext(), "Wifi changed", Toast.LENGTH_LONG).show();
    }
}

/***3.class ConnectService.java extends từ Service để xử lí khi cắm sạc ***/

public class ConnectService extends Service {
    @Nullable
    @Override
    public IBinder onBind(Intent intent) {
        return null;
    }

    @Override
    public void onStart(Intent intent, int startId) {
        super.onStart(intent, startId);
        Toast.makeText(getApplicationContext(), "Connected", Toast.LENGTH_LONG).show();
    }

}


/***4.AndroidMaintifest.xml bổ sung thêm tag service và tag receiver ***/
  <receiver android:name="MyBroadcastReceiver">
            <intent-filter android:priority="1">
                <action android:name="android.net.wifi.STATE_CHANGE"/>
                <action android:name="android.intent.action.ACTION_POWER_CONNECTED"/>
            </intent-filter>
        </receiver>
        <service android:name=".WifiService">
            <intent-filter>
                <action android:name="WifiService"/>
            </intent-filter>
        </service>
        <service android:name=".ConnectService">
            <intent-filter>
                <action android:name="ConnectService"/>
            </intent-filter>
        </service>
----------------------------------------------------------------------------------------------------------------------------------------
***BroadcastReceiver Incoming Call:

//class IncomingCall.java extends BroadcastReceiver
public class IncomingCall extends BroadcastReceiver {
    @Override
    public void onReceive(Context context, Intent intent) {
        String state = intent.getStringExtra(TelephonyManager.EXTRA_STATE);
        if(state.equals(TelephonyManager.EXTRA_STATE_RINGING))
        {
            Toast.makeText(context, "Phone Is Ringing", Toast.LENGTH_LONG).show();//Khi có cuộc gọi đến
        }
        if(state.equals(TelephonyManager.EXTRA_STATE_OFFHOOK))
        {
            Toast.makeText(context, "Call Recieved", Toast.LENGTH_LONG).show();//Khi nghe máy
        }
        if (state.equals(TelephonyManager.EXTRA_STATE_IDLE))
        {
            Toast.makeText(context, "Phone Is Idle", Toast.LENGTH_LONG).show();//Khi hết cuộc gọi hoặc khi nhấn nút hủy cuộc gọi
        }
    }
}
// add  AndroidMaintifest.xml
    <uses-permission android:name="android.permission.READ_PHONE_STATE"></uses-permission>
	 <receiver android:name="com.example.administrator.broadcastreceiver_incomingcall.IncomingCall">
            
        </receiver>
-------------------------------------------------------------------------------------------------------------------------------------------------
**HÀM TRẢ LỜI CUỘC GỌI TỰ ĐỘNG(ĐƯỢC DÙNG VỚI BROADCASTRECEIVER):

   public void answerPhoneHeadsethook(Context context, Intent intent) {
        String state = intent.getStringExtra(TelephonyManager.EXTRA_STATE);
        if (state.equals(TelephonyManager.EXTRA_STATE_RINGING)) {
            String number = intent.getStringExtra(TelephonyManager.EXTRA_INCOMING_NUMBER);
            Intent buttonUp = new Intent(Intent.ACTION_MEDIA_BUTTON);
            buttonUp.putExtra(Intent.EXTRA_KEY_EVENT, new KeyEvent(KeyEvent.ACTION_UP, KeyEvent.KEYCODE_HEADSETHOOK));
            try {
                context.sendOrderedBroadcast(buttonUp, "android.permission.CALL_PRIVILEGED");
            }
            catch (Exception e) {
            }

            Intent headSetUnPluggedintent = new Intent(Intent.ACTION_HEADSET_PLUG);
            headSetUnPluggedintent.addFlags(Intent.FLAG_RECEIVER_REGISTERED_ONLY);
            headSetUnPluggedintent.putExtra("state", 1); // 0 = unplugged  1 = Headset with microphone 2 = Headset without microphone
            headSetUnPluggedintent.putExtra("name", "Headset");
            try {
                context.sendOrderedBroadcast(headSetUnPluggedintent, null);
            }
            catch (Exception e) {
            }
        }
    }
--------------------------------------------------------------------------------------------------------------------------------------------------
**HÀM HỦY CUỘC GỌI(ĐƯỢC DÙNG VỚI BROADCASTRECEIVER)

  public void disconnectCall(){
        try {

            String serviceManagerName = "android.os.ServiceManager";
            String serviceManagerNativeName = "android.os.ServiceManagerNative";
            String telephonyName = "com.android.internal.telephony.ITelephony";
            Class<?> telephonyClass;
            Class<?> telephonyStubClass;
            Class<?> serviceManagerClass;
            Class<?> serviceManagerNativeClass;
            Method telephonyEndCall;
            Object telephonyObject;
            Object serviceManagerObject;
            telephonyClass = Class.forName(telephonyName);
            telephonyStubClass = telephonyClass.getClasses()[0];
            serviceManagerClass = Class.forName(serviceManagerName);
            serviceManagerNativeClass = Class.forName(serviceManagerNativeName);
            Method getService = // getDefaults[29];
                    serviceManagerClass.getMethod("getService", String.class);
            Method tempInterfaceMethod = serviceManagerNativeClass.getMethod("asInterface", IBinder.class);
            Binder tmpBinder = new Binder();
            tmpBinder.attachInterface(null, "fake");
            serviceManagerObject = tempInterfaceMethod.invoke(null, tmpBinder);
            IBinder retbinder = (IBinder) getService.invoke(serviceManagerObject, "phone");
            Method serviceMethod = telephonyStubClass.getMethod("asInterface", IBinder.class);
            telephonyObject = serviceMethod.invoke(null, retbinder);
            telephonyEndCall = telephonyClass.getMethod("endCall");
            telephonyEndCall.invoke(telephonyObject);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }
------------------------------------------------------------------------------------------------------------------------------------------------------------
**BROADCASTRECEIVER SCREEN ON/SCREEN OFF:

/*MainActivity.java hàm onCreate()*/
 startService(new Intent(this,ScreenOffService.class));
 
 /*MyBroadcastReceiver.java extends BroadcastReceiver*/
 public class MyBroadcastReceiver extends BroadcastReceiver {
    private boolean screenOff;

    @Override
    public void onReceive(Context context, Intent intent) {
        //Toast.makeText(context, "BroadcastReceiver", Toast.LENGTH_SHORT).show();
        if (intent.getAction().equals(Intent.ACTION_SCREEN_OFF)) {

            screenOff = true;

        } else if (intent.getAction().equals(Intent.ACTION_SCREEN_ON)) {

            screenOff = false;

        }

        // Toast.makeText(context, "BroadcastReceiver :"+screenOff, Toast.LENGTH_SHORT).show();

        // Send Current screen ON/OFF value to service
        Intent i = new Intent(context, ScreenOffService.class);
        i.putExtra("screen_state", screenOff);
        context.startService(i);
    }
}
/*ScreenOffService extend Service*/
ublic class ScreenOffService extends Service {
    BroadcastReceiver mReceiver=null;
    @Nullable
    @Override
    public IBinder onBind(Intent intent) {
        return null;
    }
    @Override
    public void onCreate() {
        // Toast.makeText(getBaseContext(), "Service on create", Toast.LENGTH_SHORT).show();

        // Register receiver that handles screen on and screen off logic
        IntentFilter filter = new IntentFilter(Intent.ACTION_SCREEN_ON);
        filter.addAction(Intent.ACTION_SCREEN_OFF);
        mReceiver = new MyBroadcastReceiver();
        registerReceiver(mReceiver, filter);
        Log.d("check","onCreate");
        super.onCreate();
    }
    @Override
    public void onStart(Intent intent, int startId) {
        boolean screenOn = false;
        Log.d("check","onStart");

        try{
            screenOn = intent.getBooleanExtra("screen_state", false);

        }catch(Exception e){}

        if (!screenOn) {
            Toast.makeText(getBaseContext(), "Screen on, ", Toast.LENGTH_SHORT).show();
            Log.d("check", "Screen on");


        } else {
            Toast.makeText(getBaseContext(), "Screen off,", Toast.LENGTH_SHORT).show();
            Log.d("check","Screen off");
        }
        super.onStart(intent, startId);
    }

    @Override
    public void onDestroy() {
        Log.d("check","onDestroy");
        Log.i("ScreenOnOff", "Service  distroy");
        if(mReceiver!=null)
            unregisterReceiver(mReceiver);
        super.onDestroy();
    }
}
/*Add on AndroidMaintifest.xml */
 <receiver android:name="musicapp.khangit.broadcastreceiver_screenoff.MyBroadcastReceiver">
            <intent-filter>
                <action android:name="android.intent.action.SCREEN_OFF"/>
                <action android:name="android.intent.action.SCREEN_ON"/>
            </intent-filter>
        </receiver>
        <service android:name=".ScreenOffService">
            <intent-filter>
                <action android:name="com.androidexample.screenonoff.AEScreenOnOffService" />
            </intent-filter>
        </service>
----------------------------------------------------------------------------------------------------------------------------------------------------------
***SERVICE INTERACT WITH ACTIVITY BY USING BROADCASTRECEIVER
//MainActivity.java
public class MainActivity extends AppCompatActivity {
    TextView tvStatus;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);
        startService(new Intent(MainActivity.this, LocationService.class));
        tvStatus = (TextView) findViewById(R.id.tvStatus);
        BroadcastLocationStatus broadcastLocationStatus=new BroadcastLocationStatus();
        IntentFilter intentFilter=new IntentFilter("detect_location_status");
        registerReceiver(broadcastLocationStatus,intentFilter);
    }


    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.menu_main, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();

        //noinspection SimplifiableIfStatement
        if (id == R.id.action_settings) {
            return true;
        }

        return super.onOptionsItemSelected(item);
    }

    class BroadcastLocationStatus extends BroadcastReceiver {
        @Override
        public void onReceive(Context context, Intent intent) {
            boolean status = intent.getBooleanExtra("location_status", false);
            if(status==true) {
                tvStatus.setText("Welcome to home.");
            }
            else{
                tvStatus.setText("Here is far. ");
            }
        }
    }

}
//LocationService.java
public class LocationService extends Service {
    @Override
    public int onStartCommand(Intent intent, int flags, int startId) {
        //init location
       final LocationManager locationManager = (LocationManager) getSystemService(LOCATION_SERVICE);
        String provider = locationManager.GPS_PROVIDER;
        locationManager.requestLocationUpdates(provider, 1000, 1, new LocationListener() {
            @Override
            public void onLocationChanged(Location location) {
                double latitude = location.getLatitude();
                double longtitude = location.getLongitude();
                Location home = new Location("home");
                home.setLatitude(10.832568);
                home.setLongitude(106.34952);
                double distance = home.distanceTo(location);
                Toast.makeText(getBaseContext(), "distance: " + distance, Toast.LENGTH_LONG).show();
                 //Log.d("location", "lat: " + latitude + "long: " + longtitude);
                if(distance<=10){
                    Intent intent1=new Intent();
                    intent1.putExtra("location_status",true);
                    intent1.setAction("detect_location_status");
                    sendBroadcast(intent1);
                }
                else {
                    Intent intent1=new Intent();
                    intent1.putExtra("location_status",false);
                    intent1.setAction("detect_location_status");
                    sendBroadcast(intent1);
                }
            }

            @Override
            public void onStatusChanged(String provider, int status, Bundle extras) {

            }

            @Override
            public void onProviderEnabled(String provider) {

            }

            @Override
            public void onProviderDisabled(String provider) {

            }
        });
        return START_STICKY;
    }

    @Nullable
    @Override
    public IBinder onBind(Intent intent) {
        return null;
    }

}

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
**SỬ DỤNG CONTEXT Ở SERVICE CLASS OR ACTIVITY CLASS:
Context context = this;
------------------------------------------------------------------------------------------------------------------------------------------------
**Kiểm tra đối tượng có tồn tại trong ArrayList hay ko:
 ArrayList<String> arrlist=new ArrayList<String>();
 if(arrlist.contain("khang")){// điều kiện này là có tồn tại
	 Toast.makeText(MainActivity.this,"Co ton tai",Toast.LENGTH_LONG).show();
 }
 else{
	  Toast.makeText(MainActivity.this,"Ko ton tai",Toast.LENGTH_LONG).show();
 }
--------------------------------------------------------------------------------------------------------------
****   REMOVE ARRAYLIST
	ArrayList<String> arrCard=new ArrayList<String>();
	arrCard.add("huy");
	arrCard.add("khang");
    arrCard.removeAll(arrCard);// remove all phần tử của arrCard
	arrCard.clear();//cũng remove all phần tử của arrCard
---------------------------------------------------------------------------------------
***ITERATOR

  // Tao mot array list
      ArrayList al = new ArrayList();
      // them cac phan tu toi array list
      al.add("C");
      al.add("A");
      al.add("E");
      al.add("B");
      al.add("D");
      al.add("F");

      // Su dung iterator de hien thi noi dung cua array list
      System.out.print("Noi dung ban dau cua ArrayList la: ");
      Iterator itr = al.iterator();
      while(itr.hasNext()) {
         Object element = itr.next();
         System.out.print(element + " ");
      }
      System.out.println();
      
	  // Sua doi cac doi tuong sau khi da duoc lap qua
      ListIterator litr = al.listIterator();
      while(litr.hasNext()) {
         Object element = litr.next();
         litr.set(element + "+");
      }
      System.out.print("Noi dung sau khi sua doi cua ArrayList la: ");
      itr = al.iterator();
      while(itr.hasNext()) {
         Object element = itr.next();
         System.out.print(element + " ");
      }
      System.out.println();

      // Bay gio, hien thi list theo chieu nguoc lai
      System.out.print("Hien thi list theo chieu nguoc lai: ");
      while(litr.hasPrevious()) {
         Object element = litr.previous();
         System.out.print(element + " ");
       }
       System.out.println();
    }
//ket qua
Noi dung ban dau cua ArrayList la: C A E B D F
Noi dung sau khi sua doi cua ArrayList la: C+ A+ E+ B+ D+ F+
Hien thi list theo chieu nguoc lai: F+ D+ B+ E+ A+ C+

---------------------------------------------------------------------------------
** ĐƠN GIẢN VIỆC SỬ DỤNG ONCLICK VỚI NHIỀU ĐỐI TƯỢNG:
//khai báo trong file.xml sự kiện onclick giống nhau
<ImageView
          android:src="@drawable/macdinh"
          android:layout_width="0dp"
          android:onClick="Click"
          android:layout_height="wrap_content"
          android:layout_weight="5"
          android:id="@+id/img1" />
        <ImageView
            android:src="@drawable/macdinh"
            android:layout_width="0dp"
            android:onClick="Click"
            android:layout_height="wrap_content"
            android:layout_weight="5"
            android:id="@+id/img2" />
        <ImageView
            android:src="@drawable/macdinh"
            android:layout_width="0dp"
            android:onClick="Click"
            android:layout_height="wrap_content"
            android:layout_weight="5"
            android:id="@+id/img3" />
//file .java tạo sự kiện onclick
public void Click(View v){
	  switch (v.getId()){
         case R.id.img1://là id của đối tượng
             img1.setImageResource(id);
             img1.setClickable(false);
             break;
         case R.id.img2://là id của đối tượng
             img2.setImageResource(id);
             img2.setClickable(false);
             break;
         case R.id.img3://là id của đối tượng
             img3.setImageResource(id);
             img3.setClickable(false);
             break;
     }
}
--------------------------------------------------------------------------------------------
//tạo ra id image từ một String dùng thay cho R.drawable.image
 String card_value="card_1";//tên phải trùng với hình
 Integer id=getResources().getIdentifier(card_value,"drawable",getPackageName());

-------------------------------------------------------------------------------------------------------------
**INTEGER thì có nhiều kiểu xử lí dữ liệu còn int thì không
--------------------------------------------------------------------------------------------------------------
 *** Hàm   finish():sẽ kết thúc luôn giao diện,nó chỉ chạy 1 lần
--------------------------------------------------------------------------------------------------
*RANDOM NUMBER:
	 Random r=new Random();
			int n=r.nextInt(3);
		  tv.setText(String.valueOf(n));
		  
		  
------------------------------------------------------------------------------	
*TOAST:
	  Toast.makeText(
					MainActivity.this,
					"Hello you",
					Toast.LENGTH_LONG
			).show();

------------------------------------------------------------------------------		
*IMAGEVIEW LOCAL:
	//setImage
	 img.setImageResource(R.drawable.bg);
	 img.setClickable(false);// chỉ click đk  1 lần
	 
	 
------------------------------------------------------------------------------

**IMAGEVIEW CŨNG CÓ SỰ KIỆN OnClickListener		

------------------------------------------------------------------------------		 
*SETBACKGROUND
		manhinh=(RelativeLayout)findViewById(R.id.manhinh);
        manhinh.setBackgroundResource(R.drawable.bg);

		
------------------------------------------------------------------------------				
*LISTVIEW_BASIC:
		//đổ arrlist vào listview
		lv=(ListView)findViewById(R.id.lv);
				ArrayList<String> list=new ArrayList<String>();
				list.add("Nguyen Ho Duy Khang");
				list.add("Ho Van Tien");
				list.add("Nguyen Cam Tien");
				ArrayAdapter adapter=new ArrayAdapter(
						MainActivity.this,
						android.R.layout.simple_list_item_1,
						list

				);
	
			lv.setAdapter(adapter);
		//bắt sự kiện listview
		 lv.setOnItemClickListener(new AdapterView.OnItemClickListener() {
            @Override
            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
                 Toast.makeText(MainActivity.this, ""+position, Toast.LENGTH_LONG).show();// hiện vị trí phần tử
				  Toast.makeText(MainActivity.this, lv.get[position], Toast.LENGTH_LONG).show();// hiện nội dung tại vị trí position
				
            }
        });
		//remove listview
		 adapter.remove(arrName.remove(position));
         adapter.notifyDataSetChanged();
		
			
-----------------------------------------------------------------------------------------------------------------------------						
			
*SIZEARRAYLIST:
	arr.size();
	
------------------------------------------------------------------------------			
*COUNTDOWNTIMER:
	new CountDownTimer(5000, 100) { 
	public void onTick(long millisUntilFinished) {
	txtvSo.setText("còn lại: " + millisUntilFinished / 100);
	}

	public void onFinish() {
	txtvSo.setText("done!");
	}
	}.start();

----------------------------------------------------------------------------------------------------------	
*JSON:
		Muốn đọc json cần phải có listview để đổ vào;
		
		// ở hàm oneCreate
		lv=(ListView)findViewById(R.id.lv);
        runOnUiThread(new Runnable() {
            @Override
            public void run() {
                new docJson().execute("http://khangit-001-site1.1tempurl.com/index.php");// truyền vào url cần đọc
            }
        });
		
		
		// class đọc json
		class docJson extends AsyncTask<String,Integer,String>{ 
		
        @Override
        protected String doInBackground(String... params) {
			 return docNoiDung_Tu_URL(params[0]);
        }
		
        @Override
		// thực hiện ở hàm này
        protected void onPostExecute(String s) {
           // Toast.makeText(MainActivity.this,s,Toast.LENGTH_LONG).show();
            ArrayList<String>arr=new ArrayList<String>();
            try {
                JSONArray mang=new JSONArray(s);
                for(int i=0;i<mang.length();i++){
                    JSONObject test=mang.getJSONObject(i);
                    arr.add(test.getString("name"));
                }
                ArrayAdapter adapter=new ArrayAdapter(MainActivity.this,android.R.layout.simple_list_item_1,arr);
                lv.setAdapter(adapter);
            } catch (JSONException e) {
                e.printStackTrace();
            }


        }
    }
		
	//đọc url từ internet
	 private static String docNoiDung_Tu_URL(String theUrl)
    {
        StringBuilder content = new StringBuilder();

        // many of these calls can throw exceptions, so i've just
        // wrapped them all in one try/catch statement.
        try
        {
            // create a url object
            URL url = new URL(theUrl);

            // create a urlconnection object
            URLConnection urlConnection = url.openConnection();

            // wrap the urlconnection in a bufferedreader
            BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(urlConnection.getInputStream()));

            String line;

            // read from the urlconnection via the bufferedreader
            while ((line = bufferedReader.readLine()) != null)
            {
                content.append(line + "\n");
            }
            bufferedReader.close();
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
        return content.toString();
    }

--------------------------------------------------------------------------------------------------------------------
**Crreate JsonArray from JSONObject:
	//tạo arrlist:
		ArrayList<String> arrName=new ArrayList<String>();
        arrName.add("khang");
        arrName.add("huy");
        arrName.add("hùng");
	//tạo jsonArray từ JSONObject
	 JSONArray jsonArray=new JSONArray();
        JSONObject jsonObject=null;
        for(int i=0;i<arrName.size();i++){
             jsonObject=new JSONObject();
            try {
                jsonObject.put("name",arrName.get(i));
                jsonArray.put(jsonObject);
            } catch (JSONException e) {
                e.printStackTrace();
            }
        }
	//duyệt JsonArray
	for(int i=0;i<jsonArray.length();i++){
           try {
               JSONObject ob=jsonArray.getJSONObject(i);
               Toast.makeText(MainActivity.this,ob.getString("name"),Toast.LENGTH_LONG).show();
           } catch (JSONException e) {
               e.printStackTrace();
           }
       }
	
	
-----------------------------------------------------------------------------------------------------------------	
*ĐỌC NỘI DUNG TỪ INTERNET:
	-Sử dụng hàm đọc url từ Internet kết hợp với AsyncTask:
	//đọc url từ internet
	 private static String docNoiDung_Tu_URL(String theUrl)
    {
        StringBuilder content = new StringBuilder();

        // many of these calls can throw exceptions, so i've just
        // wrapped them all in one try/catch statement.
        try
        {
            // create a url object
            URL url = new URL(theUrl);

            // create a urlconnection object
            URLConnection urlConnection = url.openConnection();

            // wrap the urlconnection in a bufferedreader
            BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(urlConnection.getInputStream()));

            String line;

            // read from the urlconnection via the bufferedreader
            while ((line = bufferedReader.readLine()) != null)
            {
                content.append(line + "\n");
            }
            bufferedReader.close();
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
        return content.toString();
    }
*Lấy hình ảnh từ Internet:
	Kết hợp bitMap với AsyncTask:
	// class 
	class ReadImage extends  AsyncTask<String,Integer,String>{

        @Override
        protected String doInBackground(String... params) {
            try {
                URL url=new URL(params[0]);
              bmp = BitmapFactory.decodeStream(url.openConnection().getInputStream());

            } catch (MalformedURLException e) {
                e.printStackTrace();
            } catch (IOException e) {
                e.printStackTrace();
            }
            return null;
        }

        @Override
        protected void onPostExecute(String s) {
            img.setImageBitmap(bmp);
        }
    }
------------------------------------------------------------------------------------------------------------------------------------------------------------
**INTENT:
-Khái niệm
• Intent là một đối tượng dùng để gữi một thông điệp nào đó . Các thông điệp g
có thể là mở một Activity khác, gọi đến một BroadCast, hoặc giao tiếp với Serv
• - Mở một Activity khác : Để mở một Activity khác bằng Intent chúng ta sử dụng
phương thức startActivity() hoặc startActivityForResult() để nhận kết quả trả v
một Activity khác.
• - Mở một service : Service được biết tới như là một component chạy ngầm ở
background mà không cần giao diện người dùng. Để mở một service chúng ta
dụng startService(). Nếu như service được thiết kế dưới dạng client-server , ch
có thể liên kết qua một service khác thông qua bindService()
• - Giao tiếp với Broadcast : là nơi bắt những thông điệp bên ngoài mà app có th
nhận được. Để mở một Broadcast bằng Intent qua phương thức sendBroadcas
sendOtherBroadcast(), sendStickyBroadcast().

-Phân loại Intent
• Explicit Intent (Intent tường minh): chỉ định component bắt đầu bằng name ( tên class ). Thường được sử dụng để mở một Activity
khác trong ứng dụng.
• Implicit intents ( intent ngầm ):
không cần khai báo tên
component, nhưng thay vào đó
sẽ gọi những action có sẵn để
một ứng dụng khác xử lý dữ liệu.

-Xây dựng Intent
• Các nội dung chính trong một intent.
• - Component Name: Tên của component bắt đầu.
• - Action : Là một chuỗi chỉ định các hành động như xem hoặc chọn. Một
số các hành động như :
• * ACTION_VIEW : sử dụng trong intent cùng với startActivity()
• * ACTION_SEND : được biết như là một intent “share” và cũng được sử
dụng cùng với startActivity()
• Để chỉ định action cho intent chúng ta sử dụng thuộc tính setAction()
• - Data : URI tham chiếu tới loại dữ liệu cần lấy hoặc dữ liệu loại MIME .
Loại dữ liệu được cung cấp sẽ được quyết định bởi URI này.
• * Để chỉ định dữ liệu URI sử dụng phương thức setData(), để đặt dữ
liệu dạng MIME sử dụng phương thức setType(), hoặc cả 2 loại dữ liệu
bằng cách setDataAndType().

Action Data Mô tả
ACTION_VIEW content://contacts/people/1 Hiển thị thông tin danh bạ của người dùng có id là 1
ACTION_DIAL content://contacts/people/1 Hiển thị số điện thoại của người dùng có id là 1
ACTION_VIEW tel:123 Hiển thị trình quay số cho số điện thoại điền vào
ACTION_DIAL tel:123 Hiển thị trình quay số cho số điện thoại điền vào
ACTION_EDIT content://contacts/people/1 Chỉnh sửa thông tin của người dùng có id là 1
ACTION_VIEW content://contacts/people/ Hiển thị danh sách danh bạ
ACTION_SET_WALLPAPER Hiển thị cấu hình của hình ảnh được chọn

• Category : Một chuỗi bao gồm các thông tin loại component sẽ được x
lý bởi intent. Chỉ định category bằng phương thức setCategory().
• Extras : Thông điệp sẽ được truyền đi thông qua intent. Gữi thông điệp
bằng phương thức putExtras(). Lấy thông điệp bằng phương thức
getExtras().
• Flags : Là một biến cờ dùng để chỉ định cho hệ thống android biết làm
cách nào để mở một activity và truy xuất nó bằng cách nào.

-Các biến Flags thường sử dụng:
FLAG_ACTIVITY_CLEAR_TASK Nếu như đặt intent thông qua Context.startActivity() . Nếu như biến
flag được sử dụng thì khi mở một Activity mới thì những Activity cũ
sẽ mất đi
FLAG_ACTIVITY_CLEAR_TOP Tất cả những Activity ở đầu sẽ bị xóa bỏ
FLAG_ACTIVITY_NEW_TASK Flag này thường được sử dụng bởi một Activity muốn thể hiện hành vi style của Launcher

-Khai báo Intent tường minh
• Cú pháp : Intent intent = new Intent(activity1.this,activity2.class)
• - để gữi thông điệp: intent.putExtras(“tên thông điêp”,dữ liệu );
• - để kích hoạt intent : startActivity(intent).

-Khai báo Intent không tường minh
• Cú pháp : Intent intent = new Intent();
• Đặt hành động cho intent : intent.setAction(Intent.ACTION_SEND);
• Đặt dữ liệu cho hành động :
intent.setData(ContactsContract.Contacts.CONTENT_URI)
• Kích hoạt Intent : startActivity(intent);

-Nhận Intent không tường minh
• Để ứng dụng có thể nhận được những thông điệp từ bên ngoài chúng ta sẽ sử dụng <intent
filter> khai báo trong AndroidManifest.xml.
• Mỗi <intent-filter> được khai báo phải được nằm trong một activity.
• Để chọn lọc loại thông điệp mà <intent-filter> có thể nhận chúng ta có 3 thuộc tính sau :
• - <action> : Khai báo loại thông điệp mà ứng dụng có thể nhận
• - <data> : Khai báo loại dữ liệu cho phép hoặc nhiều thuộc tính trong nhiều lĩnh vực khác
nhau ( scheme, host, port, path, v…v ) và MIME
• - <category> : Khai báo category cho phép trong tên của thuộc tính,.
• Lưu ý : Khi nhận dữ liệu từ intent không tường minh, chúng ta phải khai báo
CATEGORY_DEFAULT trong <intent-filter>. Phương thức startActivty() và
startActivityForResult() sẽ truy xuất tất cả các thông điệp được khai báo Default. Nếu không
khai báo DEFAULT thì thông điệp sẽ không được gữi tới activity.

-Pending Intent
• Pending Intent là một đối tượng được bao bọc xung quang Intent.
Nhiệm vụ của PendingIntent là cung cấp quyền cho các ứng dụng bên
ngoài có thể gữi những thông điệp cho ứng dụng của chúng ta xử lý.
• Các trường hợp sử dụng PendingIntent bao gồm :
• - Khai báo một intent để thực hiện một hành động nào đó khi user gữi
một Notification
• - Khai báo một intent để thực hiện một hành động cùng với App Widget
• - Khai báo một intent để thực hiện thời gian đặc biệt trong tương lai (
AlarmManager )


//Chức năng của Intent
-Để launch một Activity dùng phương thức startActivity()
-Để gửi/phát một thông điệp broadcast đến các đối tượng BroadcastReceiver đăng ký nhận thông qua hàm broadcastIntent()
-Để start hoặc giao tiếp với một service chạy ở background bằng các phương thức sau: 
startService(Intent) / bindService(Intent, ServiceConnection, int)

//Phân loại Intent
Tùy vào mục đích sử dụng, chúng ta sẽ phận Intent thành 2 loại:Explicit intents và Implicit intents

//Explicit intents
-Là những intent đã chỉ rõ thành phần sẽ nhận và xử lý.
-Thông thường những intent này sẽ không cần gán bổ sung thêm các thuộc tính khác như action, data. 
-Explicit Intent thường được sử dụng để khởi chạy các activity, hoặc service trong cùng 1 ứng dụng.Ví dụ mở một Activity mới hay bắt đầu 1 service

//Implicit intents 
  -Là các intent không chỉ rõ component xử lý, nhưng intent sẽ được gán bổ sung thông tin trong các thuộc tính. 
 -Hệ thống sẽ dựa vào những thông tin được trong intent được gửi đi này để quyết định component nào thích hợp nhất để xử lý nó.
 -Những implicit intent thường được dùng để kích hoạt các component bên trong ứng dụng khác.Ví dụ như gửi Mail,mở trình duyệt Web
 
 //example startActivityForResult:có nghĩa là gửi dữ liệu ngược về.Ví dụ từ Activity 2 cho Activity 1
 //Khi nhấn vào button Start ở Activity 1 thì sẽ chạy qua Activity 2 và Activity 2 sẽ gửi dữ liệu ngược về cho Activity 1
 
 /**Activity 1**/
 public class MainActivity extends AppCompatActivity {
private  static  final int REQUEST_CODE=2;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
    }
	//đây là sự kiện click Button để start activity 2
    public void Start(View v){
        startActivityForResult(new Intent(MainActivity.this,SecondActivity.class),REQUEST_CODE);
    }
	
	//Hàm này để nhận  biến "value" từ Activity 2 gửi về
  @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        if(resultCode==RESULT_OK&&requestCode==REQUEST_CODE){
            if (data.hasExtra("value")) {
                Toast.makeText(this, data.getExtras().getString("value"), Toast.LENGTH_SHORT).show();
            }
        }
    }
 }
 /**Activity 2*/
 
 public class SecondActivity extends AppCompatActivity {
    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.sencond_layout);
    }
	//Đây là sự kiệ click để gửi ngược lại dữ liệu cho Activity 1
    public  void SendBack(View v){
        finish();
    }

	//gửi biến tên là "value" về activity 1
    @Override
    public void finish() {
        Intent data=new Intent();
        data.putExtra("value","Hi,i have received from you");
        setResult(RESULT_OK,data);
        super.finish();
    }
}

------------------------------------------------------------------------------------------------------------------------------------------		
*INTENT:
		 bt=(Button)findViewById(R.id.bt);
        bt.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent screen_1=new Intent(Screen_2.this,MainActivity.class);
                startActivity(screen_1);
            }
        });
		
--------------------------------------------------------------------------------------------------------------------------------------------				
*INTENT CÓ TRUYỀN THAM SỐ(PutExtra):
		// ở màn hình gửi
		 bt=(Button)findViewById(R.id.bt);
				bt.setOnClickListener(new View.OnClickListener() {
					@Override
					public void onClick(View v) {
						Intent screen_1=new Intent(Screen_2.this,MainActivity.class);
						screen_1.putExtra("val","Khang");
						startActivity(screen_1);
					}
				});
		// ở màn hình nhận:
			Bulde bd=getIntent().getExtras();
			if(bd!=null){
				String name=bd.getString();
			}
			
    *Note:trong các class extend khác activity thì không trực tiếp dùng đk startActivity mà phải thông qua context;
		Intent i=new Intent(context,Edit.class);
					 Intent i=new Intent(context,Edit.class);
                    bd.putInt("id",arrId.get(position));
                    i.putExtra("username",username);
                    i.putExtra("password",password);
                    i.putExtra("id",arrId.get(position));
                    context.startActivity(i);	
----------------------------------------------------------------------------------------------------------------------------------------------
**EXPLICIT INTENT GỬI DỮ LIỆU QUA BUNDLE:
//Activity 1 gửi dữ liệu qua Activity 2
		Intent activity2=new Intent(MainActivity.this,Activity2.class);
        Bundle bd1=new Bundle();
        Bundle bd2=new Bundle();
        bd1.putString("name","Nguyen Ho Duy Khang");
        bd2.putString("phone", "01695821150");
        activity2.putExtra("bundle1",bd1);
        activity2.putExtra("bundle2",bd2);
        startActivity(activity2);
//Activity 2 nhận dữ liệu
		Intent intent=getIntent();
        Bundle bd1=intent.getBundleExtra("bundle1");
        Bundle bd2=intent.getBundleExtra("bundle2");
        String name=bd1.getString("name");
        String phone=bd2.getString("phone");
        Toast.makeText(getApplicationContext(),"Name: "+name+"\n"+"Phone: "+phone,Toast.LENGTH_LONG).show();
--------------------------------------------------------------------------------------------------------------------------------------------
**EXPLICIT INTENT GỬI DỮ LIỆU DẠNG THƯỜNG
//Activity 1 gửi dữ liệu qua Activity 2
		Intent activity2=new Intent(MainActivity.this,Activity2.class);
        activity2.putExtra("name","NGuyen Ho Duy Khang");
        startActivity(activity2);
//Activity 2 nhận dữ liệu		
		Intent intent=getIntent();
        String name=intent.getStringExtra("name");
        Toast.makeText(getApplicationContext(),"Name: "+name,Toast.LENGTH_LONG).show();
----------------------------------------------------------------------------------------------------------------------------------------------------
*** EXPLICIT INTENT GỬI DỮ LIỆU DẠNG CLASS
//Creates Employee class 
public class Employee implements Serializable{//dạng mã hóa

    private String name;
    private String age;

  public Employee(String N,String A){
      this.name=N;
      this.age=A;
  }
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getAge() {
        return age;
    }

    public void setAge(String age) {
        this.age = age;
    }
}

//Activity 1 gửi dữ liệu qua Activity 2
		Employee employee=new Employee("Nguyen Ho Duy Khang","20");
        activity2.putExtra("employee",employee);
        startActivity(activity2);
		
//Activity 2 nhận dữ liệu	
		 Employee employee= (Employee) getIntent().getSerializableExtra("employee");
        Toast.makeText(getApplicationContext(),"Name: "+employee.getName(),Toast.LENGTH_LONG).show();
--------------------------------------------------------------------------------------------------------------------------------------------------=-------
***IMPLICT INTENT:VÍ DỤ GỌI ĐIỆN THOẠI/GỬI TIN NHẮN/GỬI MAIL

//example call	

	/**Add on AndroidMaintifest.xml**/
	<uses-permission android:name="android.permission.CALL_PHONE"/>
	
	/**MainActivity.java**/
	 public void Call(View v){
        Intent iCall=new Intent();
        iCall.setAction(Intent.ACTION_CALL);
        iCall.setData(Uri.parse("tel:0976671809"));
        startActivity(iCall);
    }
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
***IMPLICT INTENT:INTENT FILTER

//example ứng dụng nhận sự kiện chia sẽ ảnh:khi người dùng chọn file ảnh bất kì trong bộ sưu tập và chọn chia sẽ thì ứng dụng sẽ nằm trong danh sách ứng dụng được chia sẽ và nếu người dùng chọn đúng ứng dụng này thì nó sẽ hiển thị hình ảnh vào 1 imageview trong ứng dụng

  /**Add on AndroidMaintifest.xml **/
		<activity
					android:name=".MainActivity"
					android:label="@string/app_name"
					android:theme="@style/AppTheme.NoActionBar" >
					<intent-filter>
						<action android:name="android.intent.action.MAIN" />

						<category android:name="android.intent.category.LAUNCHER" />
					</intent-filter>
					<intent-filter>
						<action android:name="android.intent.action.SEND"/>//nhận hảnh động chia sẽ
						<category android:name="android.intent.category.DEFAULT"/>
						<data android:mimeType="image/*"/> //lọc kiểu dữ liệu là file ảnh
					</intent-filter>
        </activity>
		
/**MainActivity.java**/
		 img=(ImageView)findViewById(R.id.img);
         Bundle bd=getIntent().getExtras();
        if(bd!=null){
            img.setImageURI((Uri) getIntent().getExtras().get(Intent.EXTRA_STREAM));
        }
---------------------------------------------------------------------------------------------------------------------------------------------------------			
*GỬI DỮ LIỆU TỪ APP ĐẾN SERVER , FIX LỖI API 23:
	copy file  org.apache.http.legacy.jar ở Android\sdk\platforms\android-23\optional
	thểm file jar đó vào lib trong project và right click chọn add as library
	//class kết hợp vơi AsyncTask
	private String makePostRequest() {
    HttpClient httpClient = new DefaultHttpClient();
    
    // URL của trang web nhận request
    HttpPost httpPost = new HttpPost("http://khoapham.vn/post.php");
    
    // Các tham số truyền
    List nameValuePair = new ArrayList(2);
    nameValuePair.add(new BasicNameValuePair("so1", "111"));
    nameValuePair.add(new BasicNameValuePair("so2", "222"));
    
    //Encoding POST data
    try {
        httpPost.setEntity(new UrlEncodedFormEntity(nameValuePair));
    } catch (UnsupportedEncodingException e) {
        e.printStackTrace();
    }

    String kq = "";
    try {
        HttpResponse response = httpClient.execute(httpPost);
        HttpEntity entity = response.getEntity();
        kq = EntityUtils.toString(entity);
    } catch (ClientProtocolException e) {
        e.printStackTrace();
    } catch (IOException e) {
        e.printStackTrace();
    }

    return kq;
}
**Gửi JSONObject đến server PHP:làm tương tự nhưng chỉ thay dữ liệu gửi thành Json
 //phía client
 SONObject jsonobj = new JSONObject();

        try {
            jsonobj.put("name", "Aneh");
        } catch (JSONException e) {
            e.printStackTrace();
        }
        try {
            jsonobj.put("age", "22");
        } catch (JSONException e) {
            e.printStackTrace();
        }
 
 List<NameValuePair> nameValuePair = new ArrayList<NameValuePair>();
 nameValuePair.add(new BasicNameValuePair("req", jsonobj.toString()));
 ------------------------------------------------------------------------------------------------------------------------------------------------------------
 ***JSON:
 
  /*Parse Json Object*/
     tvShow = (TextView) findViewById(R.id.tvShow);
        String json = "{ \"id\":1,\"name\":\"coca\"}";
        try {
            JSONObject jsonObject=new JSONObject(json);
            int id=jsonObject.getInt("id");
            String name=jsonObject.getString("name");
            tvShow.setText("id: "+String.valueOf(id)+"\n"+"name: "+name);
        } catch (JSONException e) {
            e.printStackTrace();
        }

 /*Parse Json Array*/
        String jArray = "[{\"id\":1,\"name\":\"coca\"},{\"id\":2,\"name\":\"pepsi\"}]";
        String result = "";
        try {
            JSONArray jsonArray = new JSONArray(jArray);
            for (int i = 0; i < jsonArray.length(); i++) {
                JSONObject item = jsonArray.getJSONObject(i);
                result += "id:" + String.valueOf(item.getString("id"));
                result += "name: " + item.getString("name");
                result += "|";
            }
            tvJsonArray.setText(result);

        } catch (JSONException e) {
            e.printStackTrace();
        }
 ------------------------------------------------------------------------------------------------------------------------------------------------------------
 **GỬi JsonArray to server php:
 //client
	//tạo JSONArray
		  final ArrayList<String> arrName=new ArrayList<String>();
        arrName.add("khang");
        arrName.add("huy");
        arrName.add("hùng");
        arrName.add("kháng");
        arrName.add("hải");
        jsonArray=new JSONArray();
        JSONObject jsonObject=null;
        for(int i=0;i<arrName.size();i++){
            jsonObject=new JSONObject();
            try {
                jsonObject.put("name",arrName.get(i));
                jsonArray.put(jsonObject);
            } catch (JSONException e) {
                e.printStackTrace();
            }
        }
		
	//class SendData 
    class SendData extends AsyncTask<String,Integer,String>{

        @Override
        protected String doInBackground(String... params) {
            return makePostRequest(params[0]) ;
        }

        @Override
        protected void onPostExecute(String s) {
            Toast.makeText(getApplicationContext(),s,Toast.LENGTH_LONG).show();
        }
    }
		//function makePostRequest
    private String makePostRequest(String url) {

        HttpClient httpClient = new DefaultHttpClient();

        // URL của trang web nhận request
        HttpPost httpPost = new HttpPost(url);
        ArrayList<NameValuePair> nameValuePair = new ArrayList<NameValuePair>();
        JSONObject ob=new JSONObject();
        try {
            ob.put("name", "Aneh");
        } catch (JSONException e) {
            e.printStackTrace();
        }
        try {
            ob.put("age", "22");
        } catch (JSONException e) {
            e.printStackTrace();
        }
       nameValuePair.add(new BasicNameValuePair("re", jsonArray.toString()));

        try {
            httpPost.setEntity(new UrlEncodedFormEntity(nameValuePair, "utf-8"));
        } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
        }
        String kq = "";
        try {
            HttpResponse response = httpClient.execute(httpPost);
            HttpEntity entity = response.getEntity();
            kq = EntityUtils.toString(entity);
        } catch (ClientProtocolException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }

        return kq;

    }
 
 //server
	<?php 
	header('Content-type: text/plain; charset=utf-8');
	$get=json_decode(stripslashes($_POST["re"]));
	$count=0;
	if($get!=null)
	{
		foreach($get as $item){
			//$count++;
			echo $item->name;
		}
		//echo $count;
	}else{
		echo "Null";
	}
 ?>
 
--------------------------------------------------------------------------------------------------------------	

*PLAY MP3 LOCAL:
		//start
		MediaPlayer song = MediaPlayer.create(MainActivity.this, R.raw.nuocmat); 
		song.start();
		//stop
		onPause(); 
		song.pause();
		
------------------------------------------------------------------------------				
*PLAY MP3 FROM INTERNET:
	public void PlayNhacMp3(String url){
        //url = "http://khoapham.vn/KhoaPhamTraining/laptrinhios/EmCuaNgayHomQua.mp3";
        MediaPlayer mediaPlayer = new MediaPlayer();
        mediaPlayer.setAudioStreamType(AudioManager.STREAM_MUSIC);
        try {
            mediaPlayer.setDataSource(url);
            mediaPlayer.prepareAsync();
            mediaPlayer.setOnPreparedListener(new MediaPlayer.OnPreparedListener() {
                @Override
                public void onPrepared(MediaPlayer mp) {
                    mp.start();
                }
            });

        } catch (IOException e) {
            e.printStackTrace();
        }

    }
	
----------------------------------------------------------------------------------
**PLAY nhạc nền:
	//khai báo biến toàn cục
	MediaPlayer mp3;
	//trong hàm onCreate
	mp3=MediaPlayer.create(MainActivity.this,R.raw.chuabaogio);
    mp3.start();
	//thêm method onPause
	 protected void onPause() {
        super.onPause();
        mp3.release();
        finish();
    }

-----------------------------------------------------------------------------------
**SERVICE TRONG ANDROID:DEMO ỨNG DỤNG CHƠI NHẠC
	//class MainActivity.java tạo 2 button play và stop
	public void Play(View v){
        Intent i=new Intent(MainActivity.this,Play.class);
        String url="http://khoapham.vn/KhoaPhamTraining/laptrinhios/EmCuaNgayHomQua.mp3";
        i.putExtra("url",url);
        stopService(new Intent(MainActivity.this, Play.class));
      //  startService(new Intent(MainActivity.this,Play.class));
        startService(i);

    }
    public  void Stop(View v){
        //mp3.release();
        stopService(new Intent(MainActivity.this,Play.class));
    }
	
	//class MusicService.java extend Service
	  public class MusicService extends Service {
    MediaPlayer mediaPlayer;
    @Override
    public void onCreate() {//phương thức chạy đầu tiên
        super.onCreate();
    }

    @Override
    public int onStartCommand(Intent intent, int flags, int startId) {//phương thức chạy thứ 2
        mediaPlayer=MediaPlayer.create(this,R.raw.muadongkoem);
        mediaPlayer.start();
        Toast.makeText(getApplicationContext(),"Service is running",Toast.LENGTH_LONG).show();

        return START_NOT_STICKY;// START_NOT_STICKY không cho service restart lại sẽ tắt luôn nếu đóng chạy ngầm
    }

    @Nullable
    @Override
    public IBinder onBind(Intent intent) {
        return null;
    }

    @Override
    public void onDestroy() {
        mediaPlayer.stop();
        Toast.makeText(getApplicationContext(),"Service is stopped!",Toast.LENGTH_LONG).show();
        super.onDestroy();
    }
}

	//Note:Nhớ cấu hình trong AndroidManifest.xml;
	<service android:name=".MusicService"/>
   



   
   

------------------------------------------------------------------------------			
*ALERT:
	    AlertDialog.Builder builder=new Builder(this);
    	builder.setTitle("Thông báo");
    	builder.setMessage("Bạn Thật May Mắn!");
    	builder.setNegativeButton("Chơi Tiếp", new OnClickListener() {
			
			@Override
			public void onClick(DialogInterface dialog, int arg1) {
				// TODO Auto-generated method stub
				dialog.cancel();//hùy bỏ thao tác
				System.exit(0);//Thoát khỏi ứng dụng
				
			}
		});
    	builder.create().show();    }
		
	
------------------------------------------------------------------------------------------------------------------------------------------
**MATERIAL DIALOG :sử dụng appcompatv7

//Import support v7 alert dialog
import android.support.v7.app.AlertDialog		

//Demo
  AlertDialog.Builder builder =new AlertDialog.Builder(SecondActivity.this, R.style.AppCompatAlertDialogStyle);
            builder.setTitle("SCRUM");
            builder.setMessage("In the SCRUM methodology a sprint is the basic unit of development. Each sprint is preceded by a planning meeting, where the tasks for the sprint are identified and an estimated commitment for the sprint goal is made, and followed by a review or retrospective meeting where the progress is reviewed and lessons for the next sprint are identified. During each sprint, the team creates finished portions of a product.....");
            builder.setPositiveButton("OK", null);//second parameter used for onclicklistener
            builder.setNegativeButton("Cancel", null);
            builder.show();
			
//Dialog Styles
 <!-- Dialog Styles!-->
    <style name="AppCompatAlertDialogStyle" parent="Theme.AppCompat.Light.Dialog.Alert">
        <item name="colorAccent">#FFCC00</item>
        <item name="android:textColorPrimary">#FFFFFF</item>
        <item name="android:background">#5fa3d0</item>
    </style>
-----------------------------------------------------------------------------------------------------------------------------------------------	
*CUSTOMLISTVIEW:
	public class ListAdapter extends ArrayAdapter<SinhVien3> {

    public ListAdapter(Context context, int textViewResourceId) {
        super(context, textViewResourceId);
    }

    public ListAdapter(Context context, int resource, List<SinhVien3> items) {
        super(context, resource, items);
    }

    @Override
    public View getView(int position, View convertView, ViewGroup parent) {

        View v = convertView;

        if (v == null) {
            LayoutInflater vi;
            vi = LayoutInflater.from(getContext());
            v = vi.inflate(R.layout.ten_file_xml_layout_dang_lam, null);
        }

        SinhVien3 p = getItem(position);

        if (p != null) {
	    // Anh xa + Gan gia tri
            TextView tt1 = (TextView) v.findViewById(R.id.id);

        }

        return v;
    }

}
//ListAdapter là file class ListAdapter.java
ListAdapter customAdapter = new ListAdapter(this, R.layout.activity_list_adapter, mang);
---------------------------------------------------------------------------------------------------------------------------------------------
**CUSTOM LISTVIEW EXTENDS TỪ BASEADAPTER

/*** Tạo AnimalListAdpater extends từ BaseAdapter là class dùng để custom Listview ***/
public class AnimalListAdpater extends BaseAdapter {
    List<Animal> list;//list
    private Context context;

    public AnimalListAdpater(Context context, List<Animal> list) {
        this.context = context;
        this.list = list;
    }

    @Override
    public int getCount() {
        return list.size();
    }

    @Override
    public Object getItem(int position) {
        return list.get(position);
    }

    @Override
    public long getItemId(int position) {
        return 0;
    }

    @Override
    public View getView(int position, View convertView, ViewGroup parent) {//đổ giao diện cho dòng item
        TextView tvName,tvColor;
        convertView=View.inflate(context,R.layout.list_item,null);
        tvName=(TextView)convertView.findViewById(R.id.tvName);
        tvColor=(TextView)convertView.findViewById(R.id.tvColor);
        tvName.setText(list.get(position).getName().toString());
        tvColor.setText(list.get(position).getColor().toString());
        return convertView;
    }
}
/*** Tạo class Animal.java là đối tượng cần thể hiện trên listview***/
public class Animal {
    public Animal(Context context,String name, String color) {
        this.setName(name);
        this.setColor(color);
        this.context=context;
    }
}
/*** Tạo file list_item.xml dùng để tạo giao diện cho mỗi dòng item***/
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent" android:layout_height="match_parent">
  <TextView
      android:text="Dog"
      android:id="@+id/tvName"
      android:layout_width="wrap_content"
      android:layout_height="wrap_content" />
    <TextView
        android:text="Black"
        android:id="@+id/tvColor"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content" />
</LinearLayout>

/*** Tạo file MainActivity.java***/
//Khai báo biến toàn cục
ListView lv;
AnimalListAdpater animalListAdpater;
ArrayList<Animal> arrayList=new ArrayList<>();
//Hàm onCreate()
 lv=(ListView)findViewById(R.id.lv);
        arrayList.add(new Animal(this,"Dog","Black"));
        arrayList.add(new Animal(this,"Dog","White"));
        animalListAdpater=new AnimalListAdpater(this,arrayList);
        lv.setAdapter(animalListAdpater);
       lv.setOnItemClickListener(new AdapterView.OnItemClickListener() {
           @Override
           public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
               Toast.makeText(MainActivity.this,arrayList.get(position).getColor(),Toast.LENGTH_LONG).show();
           }
       });
-----------------------------------------------------------------------------------------------------------------------------------------
*Abstract class:
-Đặc điểm của một class trìu tượng là:
+Nó được khai báo bằng từ khóa abstract.
+Nó có thể khai báo 1 hoặc nhiều method trừu tượng hoặc phương thức  không trừu tượng bên trong.
+Không thể khởi tạo 1 đối tương trực tiếp từ một class trìu tượng.
+Khi class con kế thừa từ class trừu tượng thì phải override lại cái phương thức trừu tượng của lớp đó.

//Base class
public abstract class Animal {
    private String name;
    private String color;

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getColor() {
        return color;
    }

    public void setColor(String color) {
        this.color = color;
    }
    public abstract void run();//abstract method
    public abstract void eat();//abstract method
}
//DOg class
public class Dog extends Animal {
    public Context context;
    public Dog(Context context,String name,String color){
        this.context=context;
        this.setName(name);
        this.setColor(color);
    }
    
    @Override
    public void run() {//override lại abstract method
        Toast.makeText(context.getApplicationContext(),this.getName()+" is running",Toast.LENGTH_LONG).show();
    }

    @Override
    public void eat() {//override lại abstract method

    }
}

//Main
 Animal dog=new Dog(this,"Ben","Blue");
 dog.run();

---------------------------------------------------------------------------------------------------------------------------------------------				
	
*DÙNG PICASO ĐỂ LOAD HÌNH:
	-dowload thư viện về và add vào library:http://square.github.io/picasso/;
	-set: Picasso.with(getContext()).load(p.hinh).into(img);
	
-----------------------------------------------------------------------

**ANIMATION:CÓ THỂ DÙNG VỚI BUTTON,TEXTVIEW,IMAGE
		 img=(ImageView)findViewById(R.id.img);
        TranslateAnimation animation=new TranslateAnimation(50,50,0,500);// set tọa độ cho x và y(đi từ vị trí x(0,200) đến y(0,200))
        animation.setDuration(6000);// time run
        animation.setFillAfter(true);// kết thúc thì sẽ quay về vị trí cũ
        animation.setAnimationListener(new Animation.AnimationListener() {
            @Override
            public void onAnimationStart(Animation animation) {
                Toast.makeText(MainActivity.this,"Start",Toast.LENGTH_LONG).show();//start animation
            }

            @Override
            public void onAnimationEnd(Animation animation) {
                Toast.makeText(MainActivity.this,"End",Toast.LENGTH_LONG).show();//End animation
            }

            @Override
            public void onAnimationRepeat(Animation animation) {

            }
        });
        img.startAnimation(animation);//set Image with animation
		
	//LOAD HIỆU ỨNG TỪ FILE
	    //Hiệu ứng sáng mờ:tạo file fade.xml
		<alpha xmlns:android="http://schemas.android.com/apk/res/android"
		android:fromAlpha="0.2"
		android:toAlpha="1.0"
		android:duration="3000"
		android:repeatCount="infinite"
		android:repeatMode="reverse" />
		//Hiệu ứng zoom:tạo file zoom.xml
		<scale xmlns:android="http://schemas.android.com/apk/res/android"
		android:fromXScale="5.0"
		android:fromYScale="5.0"
		android:toXScale="1.0"
		android:pivotY="1.0"
		android:duration="2000"
		/>
		//MainActivity.java
	    Animation f= AnimationUtils.loadAnimation(this,R.anim.fade);
        f.reset();
        screen.clearAnimation();
        screen.startAnimation(f);
		
-------------------------------------------------------------------------------
	
***	SHAREDPREFERENCES:LÀ DẠNG LƯU TRỮ DỮ LIỆU KHÔNG CẦN DATABASE DÙNG BỘ NHỚ ĐỆM

-SharedPreferences cho phép người dùng lưu trữ và truy xuất dữ liệu trong một file XML

-Dữ liệu được lưu trữ trong file XML dưới dạng key – value

-Để tạo ra một file Shared Preferences hoặc truy cập một file đã tồn tại chúng ta sẽ
dùng 2 phương thức sau đây :

• - getSharedPreferences() : phương thức này được sử dụng nếu như chúng ta cần
truy cập tới 2 hay nhiều file Shared Preferences thông qua tên file của nó. Phương
thức này sẽ được gọi thông qua Context.

• - getPreferences() : sử dụng phương thức này cho Activity nếu như chúng ta cần sử
dụng duy nhất một file Share Preference cho Activity đó. Nó sẽ truy xuất đến file
Shared Preference thuộc Activity đó mà chúng ta không cần chỉ định tên file

//example

	//khởi tạo đối tượng
	SharedPreferences sharedPreferences;
   sharedPreferences = this.getSharedPreferences("Infor", Context.MODE_PRIVATE);
        if(sharedPreferences.getString("name","")!=null){
            edName.setText(sharedPreferences.getString("name",""));
        }
	//lưu giá trị vào SharedPreferences
    public void Save(View v){
			SharedPreferences.Editor editor=sharedPreferences.edit();
            editor.putString("name",name);
            editor.commit();
            Toast.makeText(MainActivity.this,"Save Successed",Toast.LENGTH_LONG).show();
    }

    //lấy giá trị SharedPreferences
    public void Read(View v){
    String s=sp.getString("name","");
        Toast.makeText(MainActivity.this,s,Toast.LENGTH_LONG).show();
    }
	*Note:SharedPreferences có thể ứng dụng vào việc lưa mật khẩu và tài khoản của người dùng cũng như những thông tin cài đặt của ứng dụng
------------------------------------------------------------------------------------------------------------------------------------------	
**WEIGHTSUM:được dùng với LinearLayout dùng để chia theo tỉ lệ
//Sử dụng với orientation="horizontal"
<LinearLayout
    android:orientation="horizontal"
    android:weightSum="4">
    <Button
        android:text="Button A"
        android:layout_weight="2"
        android:layout_width="0dp"
        android:layout_height="wrap_content" />
    <Button
        android:text="Button B"
        android:layout_weight="2"
        android:layout_width="0dp"
        android:layout_height="wrap_content" />
</LinearLayout>

//Sử dụng với orientation="vertical"
<LinearLayout
    android:orientation="vertical"
    android:weightSum="4">
    <Button
        android:text="Button A"
        android:layout_weight="2"
        android:layout_width="wrap_content"
        android:layout_height="0dp" />
    <Button
        android:text="Button B"
        android:layout_weight="2"
         android:layout_width="wrap_content"
        android:layout_height="0dp" />/>
</LinearLayout>
-----------------------------------------------------------------------------------------------------

***SQLITE:

	//class Database.java
	public class Database extends SQLiteOpenHelper {
    public Database(Context context){
        super(context,"demo.sqlite",null,1);

    }
    @Override
    public void onCreate(SQLiteDatabase db) {

    }
    public Cursor GetData(String sql) {
        SQLiteDatabase db = getWritableDatabase();
        Cursor c = db.rawQuery(sql, null);
        return c;
    }
    public void Query_Data(String sql){
        SQLiteDatabase db=getWritableDatabase();
        db.execSQL(sql);
    }
	 public void delete_byID(int id,String table,String key_id){
        SQLiteDatabase db=getWritableDatabase();
        db.delete(table, key_id + "=" + id, null);
    }
	public int update(Integer id,user u) {
        SQLiteDatabase db=this.getWritableDatabase();
        ContentValues val = new ContentValues();
        val.put("username", u.Username.toString());
        val.put("password", u.Password.toString());
        String findId = "_id=" + id;
        return db.update("user", val, findId, null);
    }
	 public void add(user u,String table){
        SQLiteDatabase db=this.getWritableDatabase();
        ContentValues v=new ContentValues();
        v.put("username", u.Username);
        v.put("password", u.Password);
        db.insert(table, null, v);
    }

    @Override
    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {

    }
}
//MainActivity.java
	Database db=new Database(this);
	bt=(Button)findViewById(R.id.bt);
    db.Query_Data("CREATE TABLE IF NOT EXISTS khoahoc(_id INTEGER PRIMARY KEY,tenmonhoc VARCHAR(200) NOT NULL)");
   db.Query_Data("INSERT INTO khoahoc VALUES(null,'Lap trinh ios')");
   db.Query_Data("INSERT INTO khoahoc VALUES(null,'Lap trinh android')");
   final  ArrayList<String> arr=new ArrayList<String>();
        bt.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Cursor kq=db.GetData("SELECT * FROM khoahoc");
                while(kq.moveToNext()){
                    String s=kq.getString(1);
                    arr.add(s);
                }
                Toast.makeText(MainActivity.this,arr.get(0),Toast.LENGTH_LONG).show();
            }
        }
		
//create table
	db.Query_Data("CREATE TABLE IF NOT EXISTS khoahoc(_id INTEGER PRIMARY KEY,tenmonhoc VARCHAR(200) NOT NULL)");		
 //insert sqlite
    +db.Query_Data("INSERT INTO khoahoc VALUES(null,'Lap trinh ios')");
	user u=new user("khang","123");//tạo đố tượng
	+db.add(u,"user");// add theo đối tượng
//update sqlite
user u=new user("khang","123");//tạo đố tượng
db.update(id,u);
//delete sqlite
  db.delete_byID(id,"khoahoc","_id");
	
----------------------------------------------------------------------------------------------

**ĐỌC XML/RSS:
		//tạo class XMLDOMParser.java
		public class XMLDOMParser {
    public Document getDocument(String xml) throws IOException {
        Document document = null;
        DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
        try{
            DocumentBuilder db = factory.newDocumentBuilder();
            InputSource is = new InputSource();
            is.setCharacterStream(new StringReader(xml));
            is.setEncoding("UTF-8");
            document = db.parse(is);
        }catch(ParserConfigurationException e)
        {
            Log.e("Error: ", e.getMessage(), e);
            return null;
        }
        catch (SAXException e) {
            Log.e("Error: ", e.getMessage(), e);
            return null;
        }
        catch(IOException e){
            Log.e("Error: ", e.getMessage(), e);
            return null;
        }
        return document;
    }
    public String getValue(Element item, String name)
    {
        NodeList nodes = item.getElementsByTagName(name);
        return this.getTextNodeValue(nodes.item(0));
    }
    private final String getTextNodeValue(Node elem) {
        Node child;
        if( elem != null){
            if (elem.hasChildNodes()){
                for( child = elem.getFirstChild(); child != null; child = child.getNextSibling() ){
                    if( child.getNodeType() == Node.TEXT_NODE  ){
                        return child.getNodeValue();
                    }
                }
            }
        }
        return "";
    }
}
// class ReadXml từ AsyncTask
class ReadXml extends AsyncTask<String,Integer,String>{

        @Override
        protected String doInBackground(String... params) {
            String kq=getXmlFromUrl(params[0]);
            return kq;
        }

        @Override
        protected void onPostExecute(String s) {

            XMLDOMParser parser=new XMLDOMParser();
            try {
                Document doc=parser.getDocument(s);
                NodeList nodeList=doc.getElementsByTagName("item");
                String kq="";
                for(int i=0;i<nodeList.getLength();i++){
                    Element e=(Element)nodeList.item(i);
                    kq=parser.getValue( e,"title");
                    Toast.makeText(MainActivity.this,kq,Toast.LENGTH_LONG).show();
                }

            } catch (IOException e) {
                e.printStackTrace();
            }

        }
    }
//hàm get xml/rss
    private String getXmlFromUrl(String urlString) {
        String xml = null;
        try {
            // defaultHttpClient lấy toàn bộ dữ liệu trong http đổ vào 1 chuỗi String
            DefaultHttpClient  httpClient = new DefaultHttpClient();
            HttpPost httpPost = new HttpPost(urlString);

            HttpResponse httpResponse = httpClient.execute(httpPost);
            HttpEntity httpEntity = httpResponse.getEntity();
            xml = EntityUtils.toString(httpEntity, HTTP.UTF_8);
            // set UTF-8 cho ra chữ unikey
        } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
        } catch (ClientProtocolException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }
        // return XML
        return xml;
    }
	
---------------------------------------------------------------------------------------------------------------------------------------	
**HANDLER:
	//khai báo
	Handler handler;
	//sau 5s sẽ chuyển sang màn hình khác;
	handler=new Handler();
        handler.postDelayed(new Runnable() {
            @Override
            public void run() {
                Intent screen_main=new Intent(Screen_Wait_Activity.this,MainActivity.class);
                startActivity(screen_main);
                finish();// hủy luôn màn hình khi quay lại
            }
        },5000);
--------------------------------------------------------------------------------------------------------	

//BƯỚC 1: LẤY PERMISSIONS

< uses-permission android:name="android.permission.RECORD_AUDIO" />
< uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>

//BƯỚC 2: MAINACTIVITY:

  //1.	Biến toàn cục:

private MediaRecorder myRecorder;
private MediaPlayer myPlayer;
private String outputFile = null;
	//2.	Hàm OnCreate:

outputFile = Environment.getExternalStorageDirectory().getAbsolutePath() + "/khoaphamvn.3gpp";
myRecorder = new MediaRecorder();
myRecorder.setAudioSource(MediaRecorder.AudioSource.MIC);
myRecorder.setOutputFormat(MediaRecorder.OutputFormat.THREE_GPP);
myRecorder.setAudioEncoder(MediaRecorder.OutputFormat.AMR_NB);
myRecorder.setOutputFile(outputFile);

//BƯỚC 3: CÁC HÀM XỬ LÝ:

	//1.Bắt đầu ghi âm

public void start(View view){
    try {
        myRecorder.prepare();
        myRecorder.start();
    } catch (IllegalStateException e) {
        e.printStackTrace();
    } catch (IOException e) {
        e.printStackTrace();
    }
    Toast.makeText(getApplicationContext(), "Start recording...",
            Toast.LENGTH_SHORT).show();
}
	//2.Dừng ghi âm

public void stop(View view){
    try {
        myRecorder.stop();
        myRecorder.release();
        myRecorder  = null;

        Toast.makeText(getApplicationContext(), "Stop recording...",
                Toast.LENGTH_SHORT).show();
    } catch (IllegalStateException e) {
        e.printStackTrace();
    } catch (RuntimeException e) {
        e.printStackTrace();
    }
}
   //3.Play âm thanh đã thu

public void play(View view) {
    try{
        myPlayer = new MediaPlayer();
        myPlayer.setDataSource(outputFile);
        myPlayer.prepare();
        myPlayer.start();

        Toast.makeText(getApplicationContext(), "Start play the recording...",Toast.LENGTH_SHORT).show();
    } catch (Exception e) {
        e.printStackTrace();
    }
}
   //4.Dừng Play:

public void stopPlay(View view) {
    try {
        if (myPlayer != null) {
            myPlayer.stop();
            myPlayer.release();
            myPlayer = null;

            Toast.makeText(getApplicationContext(), "Stop playing the recording...", Toast.LENGTH_SHORT).show();
        }
    } catch (Exception e) {
        e.printStackTrace();
    }
}
===========================================================NODE JS===============================================

**Install:
- Cài đặt NodeJS: nodejs.org & git-scm.com
-----------------------------------------------------------------------------------------------------------

**SERVICE:heroku,openshift:
-----------------------------------------------------------------------------------------------------------
Tham khảo kết nối openshift nodejs mongo-mysql: https://github.com/JakubMrozek/openshift-nodejs-mongo-mysql
-----------------------------------------------------------------------------------------------------------
**CONNECT NODEJS MYSQL Openshift:
//required mysql
 var mysql = require('mysql');
//mysql configuration
var mysqlHost = process.env.OPENSHIFT_MYSQL_DB_HOST || 'localhost';
var mysqlPort = process.env.OPENSHIFT_MYSQL_DB_PORT || 3306;
var mysqlUser = 'adminFuvIS8y'; //mysql username
var mysqlPass = 'WSziu4UDaxre'; //mysql password
var mysqlDb   = 'demo'; //mysql database name

//connection strings
var mysqlString = 'mysql://'   + mysqlUser + ':' + mysqlPass + '@' + mysqlHost + ':' + mysqlPort + '/' + mysqlDb;


//connect to mysql
var mysqlClient = mysql.createConnection(mysqlString);
mysqlClient.connect(function(err){
  if (err) {
  	console.log("loi roi ban oi");
  }else{
  	console.log("connect thanh cong");
  }
});
-----------------------------------------------------------------------------------------------------------
**Thao tác với openshift:
   env | grep MYSQL //thông tin mysql
   tail_all //get log
-----------------------------------------------------------------------------------------------------------
**PHÍA SERVICE:
//io.socket.on là mặc định cho service
// socket.on là service lắng nghe.
// socket.emit là service gửi kết quả về dạng json
io.sockets.on('connection', function (socket) {
  console.log("Co nguoi connect ne");
  socket.on('client-gui-username', function (data) {
  	console.log("CLIENT VUA DANG KY USERNAME"+data);
  	if(mangUsernames.indexOf(data)>-1){
  		console.log("Đã tồn tại user");
  		ketqua=false;
  	}
  	else{
  	mangUsernames.push(data);
  	console.log("Add thành công");
  	ketqua=true;
	socket.un=data;//kết nối với từng user
	io.sockets.emit('server-gui-usernames',{noidung:data});//service gửi đến tất cả các máy
  }
  socket.emit('ketquaDangKyUn',{noidung:ketqua});
  }); 
});

	
	
	
	
	
-------------------------------------------------------------------------------------------------------------------------------------------------------------

**CONNECT NODE JS to MYSQL :

//yêu cầu mysql
var mysql = require("mysql");

// Tạo kết nối đến database
var con = mysql.createConnection({
  host: "localhost",
  user: "root",
  password: "",
  database: "chatty"
});

//kiểm tra kết nối
con.connect(function(err){
  if(err){
    console.log('Error connecting to Db');
    return;
  }
  console.log('Connection established');
});

//truy vấn
con.query('SELECT * FROM tfests',function(err,rows){
  if(err){
  	console.log("lỗi khi truy cập bảng dữ liệu");
  }
  else{
	  console.log('Data received from Db:\n');
	  console.log(rows);
	  for (var i = 0; i < rows.length; i++) {
	  console.log(rows[i].name);
		};
	}
});

//kết thúc kết nối
con.end(function(err) {

});	

----------------------------------------------------------------------------------------------------------------
***Connect PHP MYSQL TO OPENSHIFT:
define( "DB_SERVER",    getenv('OPENSHIFT_MYSQL_DB_HOST') );
 
 define( "DB_USER",      getenv('OPENSHIFT_MYSQL_DB_USERNAME') );
 
 define( "DB_PASSWORD",  getenv('OPENSHIFT_MYSQL_DB_PASSWORD') );
 
 define( "DB_DATABASE",  getenv('OPENSHIFT_APP_NAME') );
 
 
 mysql_connect(DB_SERVER,DB_USER,DB_PASSWORD) or die(mysql_error());
mysql_select_db(DB_DATABASE) or die(mysql_error());
 
 $q = "select * from Information";
 $result = mysql_query($q) or die(mysql_error());
 
 while ($row = mysql_fetch_array($result))
         {
                 echo $row['content'];
                
         }
mysql_close();
	
----------------------------------------------------------------------------------------------------------------------------------------------------------
***Variable
var n=10;
var s="ABC";
var x="5";
x=parseInt(x);

***Array
var arr=["khang","thuy linh"];
arr.push("long");
arr.push("ngoc");

**Function
function tinhTong(a,b){
	return a+b;
}
var x=tinhTong(3,5);
---------------------

function hello(){
	
}
function goiHam(fn){
	fn();
}
goiHam(hello);
---------------------

var tong=function(){
	
}
tong();
-----------------------------
***OOP:
 var person={
	 ho:"Nguyễn",
	 ten:"Khang",
	 chaoMung:function(){
		 console.log("chao mung: "+this.ho+" "+this.ten);
	 }
 }
 person.chaoMung();
 console.log(person["ten"]);
 -------------------------------
 function KhoaHoc(ten,hocphi){
	 this.Ten=ten;
	 this.HocPhi=hocphi;
 }
 KhoaHoc.prototype.mota=function(){
	 console.log("Hello"+this.Ten);
 }
 var nodejs=new KhoaHoc("Lap trinh NodeJs"),5000000;
 nodejs.mota();
 
 ------------------------------------------------
 ***BUFFER:
 
 var buffer=new Buffer("Hello","utf-8");
 console.log(buffer);
 
 ---------------------------------
 console.log(buffer.toString());//convert buffer to String
 
 --------------------------------
 console.log(buffer.toJSON());//convert buffer to JSON
 
 ------------------------------------
 ***FILE
 var fs=require("fs");
 var noidung=fs.readFileSync(__dirname+"/danhsach.txt");
 console.log(noidung);
 console.log(noidung.toString());
-----------------------------------------------------------------------------------------------------------------------------------------------------------

=================================================================JAVA======================================================================================
**KIỂU DỮ LIỆU:TƯƠNG TỰ C++
	int,double,boolean,char,string
------------------------------------------------------------------------------	

**CÂU LỆNH IN RA MÀN HÌNH
System.out.println("hello word");

------------------------------------------------------------------------------	
**CÂU TRÚC RẼ NHÁNH IF VÀ LỰA CHỌN:TƯƠNG TỰ C++
	//if
	if(){
	}
	else if(){
	}
	else{
	}
	// switch
	int a=5;
	switch(a){
		case 1: câu lệnh;
		break;
		case 2:câu lệnh;
		break;
		default:câu lệnh;
	}
	
------------------------------------------------------------------------------	
**ARRAYLIST:
	//import thư viện 
	
	//tạo mảng
	ArrayList<String> arr=new ArrayList<>();
	
	//thêm vào mảng
	arr.add("khang");
	arr.add("huy");
	
	//remove
	arr.remove(index);
	
	//lấy kích thước mảng
	arr.size();
	
	//lấy giá trị mảng
	arr.get(index);
	
	// Duyệt mảng
	for ( String s : mang ){ //cách 1
	System. out.println( s );
	}
	
	for(int i=0;i<arr.size();i++){ //cách 2
	String s=arr.get(i);
	System. out.println(s);
	}
-------------------------------------------------------------------------------------------------------------

***Mảng trong Java:
	String[] s={"khang","huy"};//mảng chuổi
	Integer[] i={0,1};//mảng số nguyên

-------------------------------------------------------------------------------------------------------------
**substring(int start,int finish):LÀ HÀM DÙNG ĐỂ CẮT CHUỔI:
//example
String s="duy khang";
//cắt chuổi bắt đầu từ vị trí thứ 3 cho đến hết
String s_fix=s.substring(3);//kết quả sẽ là khang
//cắt chuổi bắt đầu từ vị trí thứ 3 lấy 2 kí tự
String s_fix=s.substring(3,2);//kết quả sẽ là kh
--------------------------------------------------------------------------------------------------------------
**Integer.parseInt(string):Đổi chuổi về số nguyên
//example
String s="1";
Integer s_fix=Integer.parseInt(s);//kết quả sẽ là một số nguyên
--------------------------------------------------------------------------------------------------------------
***split():LÀ HÀM DÙNG ĐỂ TÁCH CHUỔI VỚI 1 KÍ TỰ:
//example
  String sampleString = "co_10_khang";
        String[] animals = sampleString.split("_");
        String s = null;
        for (String animal : animals) {
          //s=animals[2];//lấy phần tử thứ 2
		  s=animal;
		  s=animal;
          Toast.makeText(MainActivity.this,s, Toast.LENGTH_LONG).show();//kết quả là khang
        }
      Toast.makeText(MainActivity.this,s, Toast.LENGTH_LONG).show();//kết quả là khang
--------------------------------------------------------------------------------------------------------------
**HƯỚNG ĐỐI TƯỢNG:
	//structure
	
	public class nhanvien{
	
		//attribute
		public String HoTen;
		public String HoTen;
		public Integer NamSinh;
		
		//khởi tạo 
		public nhanvien(String HT,Integer NS){		
		}
		
		//method
		public void show(){
		
		}	
	}
----------------------------------------------------------------------------------------------------------------------------------------------------------
**Trong Java nếu không ghi phạm vi truy xuất thì mặc định là public
------------------------------------------------------------------------------------------------------------------------------------------------------------
==================================================SOME ANDROID APP DEVELOPMENT IDEAS========================================================
-Ứng dụng đọc trộm tin nhắn
-Ứng dụng dự báo thời tiết
-Ứng dụng đọc báo
-Ứng dụng chặn cuộc gọi/sms
-Ứng dụng flash light
-Ứng dụng blink flash light khi có cuộc gọi tin nhắn đến
-Ứng dụng trả lời cuộc gọi tự động khi đưa gần lỗ tai và hủy khi đưa ra xa lỗ tai
-Ứng dụng nghe nhạc
-Ứng dụng download
-Ứng dụng note
-Ứng dụng reminder
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	

	

	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	