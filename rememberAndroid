
=========================================================ANDROID=====================================================================================

***Debug android without usb,over wifi:debug ứng dung android không cần cable mà chỉ cần qua trạm phát wifi:
//Bước 1
-Tạo điểm phát wifi từ điện điện thoại (cách tạo tùy vào từng loại máy)
//Bước 2
-Kết nối máy tính với trạm wifi vừa tạo

//Bước 3
Vào cmd,gõ lệnh:ipconfig
=>tìm địa chỉ ip của trạm phát nằm ở mục:Default Gateway

//Bước 4
-Tạo file runWifi.bat(tên đặt tùy ý) vào thư mục C:\Users\Administrator\AppData\Local\Android\sdk\platform-tools
//file runWifi.bat
adb tcpip 5555 //port kết nối
adb connect 192.168.43.1 //địa chỉ của trạm phát wifi tìm thấy ở bước 3
pause //ngừng lại để xem

*note:lần đầu chạy phải cắm cable để nó nhận port, sau đó có thể rút ra(ko cần mạng)


-------------------------------------------------------------------------------------------------------------------------------------
**https://github.com/wasabeef/awesome-android-ui //UI ANDROID
----------------------------------------------------------------------------------------------------------------------------------
**Có thể tạo array từ resource trong values:
//example
/*Tạo file arr.xml trong thư mục values*/
<?xml version="1.0" encoding="utf-8"?>
<resources>
<string-array name="arr">
    <item>Duy Khang</item>
    <item>Thiện Huy</item>
    <item>Văn Tiến</item>
</string-array>
</resources>

/*MainActivity.java*/
		lv=(ListView)findViewById(R.id.lv);
        String[]arrName=getResources().getStringArray(R.array.arr);
        ArrayAdapter adapter=new ArrayAdapter(MainActivity.this,android.R.layout.simple_list_item_1,arrName);
        lv.setAdapter(adapter);
----------------------------------------------------------------------------------------------------------------------------------
**Bắt sự kiện onClick lên nhiều Button
//Click là tên sự kiệ onCLick của 2 buton
///MainActivity.java
 public void Click(View v) {
        if (v.getId() == R.id.btShow) {
            Toast.makeText(getApplicationContext(), "Show", Toast.LENGTH_LONG).show();
        }
        if (v.getId() == R.id.btHide) {
            Toast.makeText(getApplicationContext(), "Hide", Toast.LENGTH_LONG).show();
        }
    }
//layout
 <Button
       android:id="@+id/btShow"
       android:text="Show keyboard"
       android:onClick="Click"//tên sự kiện click
       android:layout_width="fill_parent"
       android:layout_height="wrap_content" />
    <Button
        android:id="@+id/btHide"
        android:text="Hide keyboard"
        android:onClick="Click"//tên sự kiện click
        android:layout_width="fill_parent"
        android:layout_height="wrap_content" />
------------------------------------------------------------------------------------------------------------------------------------
***Virtual Keyboard:
-CÓ 2 cách để thiết lập bàn phím ảo android:

//Thiết lập trong AndroidMaintifest.xml(cái này ít dùng)
 <activity
            android:windowSoftInputMode="stateVisible|adjustResize"
            android:name=".MainActivity"
            android:label="@string/app_name"
            android:theme="@style/AppTheme.NoActionBar" >
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
		
//Thiết lập trong Activity
 getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_VISIBLE|WindowManager.LayoutParams.SOFT_INPUT_ADJUST_RESIZE);//hiện và điều chỉnh size cho phù hợp

---------------------------------------------------------------------------------------------------------------------------------------
** Request Focus:là điểu chỉnh vị trí của con trỏ.Thường được dùng với EditText
//example
ed.requestFocus();//đưa con trỏ về EditText đã chỉ định
------------------------------------------------------------------------------------------------------------------------------------
**Ẩn/hiện bàn phím mềm android:

public void showKeyboard(){
        InputMethodManager inputMethodManager=(InputMethodManager)getSystemService(Context.INPUT_METHOD_SERVICE);
        inputMethodManager.showSoftInput(this.getCurrentFocus(),inputMethodManager.SHOW_IMPLICIT);
    }
public void hideKeyboard(){
        InputMethodManager inputMethodManager=(InputMethodManager)getSystemService(Context.INPUT_METHOD_SERVICE);
        inputMethodManager.hideSoftInputFromWindow(this.getCurrentFocus().getWindowToken(),0);
    }


--------------------------------------------------------------------------------------------------------------------------------------
**gravity:dùng để định dạng vị trí của một thành phần so với  1 thành phần bên trong nó
-Vị trí(center,left,right,top,bottom...) của các view(Button,TextView..)so với layout(LinearLayout,FrameLayout,RelativeLayout..)
-Vị trí(center,left,right,top,bottom...) của nội dung so với các view(Button,TextView...)
//example
  <LinearLayout
               android:id="@+id/tab1"
               android:orientation="vertical"
			   android:gravity="center" //kết quả là toàn bộ các view bên trong LinearLayout sẽ nằm ở giữa
			   //android:gravity="center|left"
               android:layout_width="match_parent"
               android:layout_height="match_parent">
            <TextView
                android:text="This is tab 1"
                android:layout_width="fill_parent"
				android:gravity="center" //kết quả là nộ dung bên trong TextView sẽ nằm giữa
			  //android:gravity="center|left"
                android:layout_height="wrap_content" />
  </LinearLayout>
--------------------------------------------------------------------------------------------------------------------------------
***layout_gravity:dùng để định dạng vị trí(center,left,right,top,bottom...) của 1 thành phần so với thành phần nằm bên ngoài
//example
			<TextView
                android:text="This is tab 1"
                android:layout_width="fill_parent"
				android:layout_gravity="center"//TextView sẽ nằm ở giữa so với bên ngoài
			  // android:layout_gravity="center|left"				
                android:layout_height="wrap_content" />
----------------------------------------------------------------------------------------------------------------------

***Get Phone number:
//Khai báo trong AndroidMaintifest.xml
<uses-permission android:name="android.permission.READ_PHONE_STATE"/>

//MainActivity.java
TelephonyManager tm = (TelephonyManager)getSystemService(TELEPHONY_SERVICE);
        String number = tm.getLine1Number();
        if(number!=null){
            Toast.makeText(getApplicationContext(),number,Toast.LENGTH_LONG).show();
        }
        else{
            Toast.makeText(getApplicationContext(),"Null",Toast.LENGTH_LONG).show();
        }
-------------------------------------------------------------------------------------------------------------------------------
**Context menu dialog:thường dùng với listview và girdview,dùng cho sự kiện long item press của item:
//example
/*Tạo Listview*/
	lv=(ListView)findViewById(R.id.lv);
        ArrayList<String> arr=new ArrayList<String>();
        arr.add("Duy Khang");
        arr.add("Văn Tiến");
        arr.add("Thiện Huy");
        ArrayAdapter adapter=new ArrayAdapter(MainActivity.this,android.R.layout.simple_list_item_1,arr);
        lv.setAdapter(adapter);
        registerForContextMenu(lv);//đăng kí sự kiện cho context menu dialog
		
/*Hàm onCreateContextMenu()*/
  public void onCreateContextMenu(ContextMenu menu, View v, ContextMenu.ContextMenuInfo menuInfo) {
        super.onCreateContextMenu(menu, v, menuInfo);
		//thông tin về item của listview khi long press
        AdapterView.AdapterContextMenuInfo info=(AdapterView.AdapterContextMenuInfo)menuInfo;
		//đặt tiêu đề cho dialog
	   menu.setHeaderTitle(arrName.get(info.position));
	   	//tham số đầu tiên là id của group menu(ko có thì để là menu.NONE)
		//tham số thứ 2 là id của menu
		//tham số thứ 3 là sắp xếp menu 
		//tham số cuối cùng là label  của menu
        menu.add(menu.NONE,1,1,"Delete");
		
		//có thể registerForContextMenu)() cho nhiều listview trong cùng một Activity dựa vào id của listview
		 if(v.getId()==R.id.lvSentbox){ //so sánh id của listview
            menu.add(menu.NONE, 0, 0, "From: " + arrFrom_Sentbox.get(info.position));
            menu.add(menu.NONE, 1, 1, "To: " + arrTo_Sentbox.get(info.position));
        }
        else if(v.getId()==R.id.lvInbox) {//so sánh id của listview
            menu.add(menu.NONE, 0, 0, "From: " + arrFrom_Inbox.get(info.position));
            menu.add(menu.NONE, 1, 1, "To: " + arrTo_Inbox.get(info.position));
        }
	   
      
    }

/*Hàm onContextItemSelected():dùng để thực hiện action khi nhấn vào menu*/
 public boolean onContextItemSelected(MenuItem item) {
	  // Get extra info about list item that was long-pressed
    AdapterContextMenuInfo menuInfo = (AdapterContextMenuInfo)item.getMenuInfo();//thông tin về item của listview khi long press
        if(item.getItemId()==0) {//nếu id của menu==0
        
        }
        else if(item.getItemId()==1){//nếu id của menu==1
			//remove listview
			adapter.remove(arrName.remove(menuInfo.position));
            adapter.notifyDataSetChanged();
			//toast
            Toast.makeText(MainActivity.this, "Send sms", Toast.LENGTH_LONG).show();
        }
       return true;

    }
----------------------------------------------------------------------------------------------------------------------------------
**Thread trong Android:Là một tiến trình dùng để xử lý các công việc riêng biệt.Có thể xử lý đồng thời
nhiều tiến trình
-Trong Android có 2 loại Thread
+Main Thread:Là một dạng của Thread nhưng có thể tương tác với giao diện người dùng
ví dụ có 1 textview trong quá trình hoạt động ta có thể cập nhật lại giao diện của textview thông qua Thread
+Worker Thread:là một dạng khác của Thread nhưng ko thể tương tác với giao diện người dùng
ví dụ:chỉ dùng để xử lý ngầm
**Một số Main Thread trong android:
+Handler
+AsyncTask
+BroadcastReceiver
+Service
------------------------------------------------------------------------------------------------------------------------------
**AsyncTask:là một tiến trình thuộc UI Thread thực hiện thông qua quy trình từ đầu tiên đến cuối cùng.
+onPreExecute():chạy đầu tiên khi khởi chạy AsyncTask.Thông thường phương thức này đk dùng để hiển thị progressBar
+doInBackground() và onProcessUpdate() chạy cùng lúc
doInBackground() là Worker Thread chỉ thực hiện những đoạn code sẽ có tham số trả về khi truyền vào AsyncTask.
onProcessUpdate()là UI Thread phương thức này sẽ đk gọi khi ở doInBackground() có gọi phương thức publishProgress().Thông thường
dùng để cập nhập giao diện người dùng.
+onPostExecute() thực hiện sau cùng sẽ cho ra kết quả.
onPostExecute() sẽ đk gọi khi doInBackground() thực hiện xong và kết quả trả về ở doInBackground() sẽ là kết quả ở phương thức này.
---------------------------------------------------------------------------------------------------------------------------------
***MỘt số quy tắt khi sử dụng AsyncTask
-AsyncTask chỉ được thực hiện ở UI Thread
-AsyncTask chỉ đk tạo ở UI Thread
-Phương thức excute(tham số) chỉ dk thực hiện ở UI Thread
-AsyncTask chỉ thực hiện một lần duy nhất. dừng tại onPostExecute()
--------------------------------------------------------------------------------------------------------------------------
**Tham số trong AsyncTask<Param,Progress,Result>
Param: sẽ đk gọi ở phương thức doInBackground()
Progress: tham số này sẽ quy định tham số nhận vào ở onProcessUpdate()
Result: tham số này sẽ quy định tham số nhận vào ở onPostExecute().Và đk trả ra ở phương thức doInBackground()
----------------------------------------------------------------------------------------------------------------------------------
***CÁC LOẠI PARSER XML:
+DOM
+SAX
+XMLPullParser
------------------------------------------------------------------------------------------------------------------------------
**ViewGroup:là một view nhưng nó dùng để nhóm các view con lại
Ví dụ như LinearLayout,FrameLayout,RelativeLayout là những ViewGroup.
//example
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    xmlns:app="http://schemas.android.com/apk/res-auto" android:layout_width="match_parent"
    android:layout_height="match_parent" android:paddingLeft="@dimen/activity_horizontal_margin"
    android:paddingRight="@dimen/activity_horizontal_margin"
    android:paddingTop="@dimen/activity_vertical_margin"
    android:paddingBottom="@dimen/activity_vertical_margin"
    app:layout_behavior="@string/appbar_scrolling_view_behavior"
    tools:showIn="@layout/activity_main" tools:context=".MainActivity">

    <TextView android:text="Hello World!" android:layout_width="wrap_content"
        android:layout_height="wrap_content" />
</RelativeLayout>
---------------------------------------------------------------------------------------------------------------
**View là những thành phần con bên trong ViewGroup:ví dụ TextView,Button..
//example
<TextView 
		android:text="Hello World!" 
		android:layout_width="wrap_content"
        android:layout_height="wrap_content" />
------------------------------------------------------------------------------------------------------------
***TABHOST:
//tạo TABHOST cách 1
  /*1. Tạo main_layout.xml */
  <?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent">
	
	//Tag này bắt buộc,id tự đặt
   <TabHost
       android:id="@+id/tabHost"
       android:layout_width="match_parent"
       android:layout_height="match_parent">
	   
	   //tabwiget là nơi hiển thị các Tab và nằm trong ViewGroup của <TabHost> id phải đặt là tab
       <TabWidget
           android:id="@android:id/tabs"
           android:layout_width="match_parent"
           android:layout_height="wrap_content"></TabWidget>
		   
		   //FrameLayout này dùng để chứa toàn bộ nội dung,id phải đặt là tabcontent
       <FrameLayout
           android:id="@android:id/tabcontent"
           android:layout_marginTop="50dp"
           android:layout_width="match_parent"
           android:layout_height="match_parent">
		   
		   //LinearLayout này tương ứng với nội dung tab1 ,id tùy ý
           <LinearLayout
               android:id="@+id/tab1"
               android:orientation="vertical"
               android:layout_width="match_parent"
               android:layout_height="match_parent">
            <TextView
                android:text="This is tab 1"
                android:layout_width="fill_parent"
                android:layout_height="wrap_content" />
           </LinearLayout>
		   
		   //LinearLayout này tương ứng với nội dung tab2 ,id tùy ý
           <LinearLayout
               android:id="@+id/tab2"
               android:orientation="vertical"
               android:layout_width="match_parent"
               android:layout_height="match_parent">
               <TextView
                   android:text="This is tab 2"
                   android:layout_width="fill_parent"
                   android:layout_height="wrap_content" />
           </LinearLayout>
		   
		   //LinearLayout này tương ứng với nội dung tab3 ,id tùy ý
           <LinearLayout
               android:id="@+id/tab3"
               android:orientation="vertical"
               android:layout_width="match_parent"
               android:layout_height="match_parent">
               <TextView
                   android:text="This is tab 3"
                   android:layout_width="fill_parent"
                   android:layout_height="wrap_content" />
           </LinearLayout>

       </FrameLayout>
   </TabHost>
</LinearLayout>

/*2. Tạo MainActivity.java */
  TabHost tabHost=(TabHost)findViewById(R.id.tabHost);
        tabHost.setup();//setup
		
		//tab1
        TabHost.TabSpec tab1=tabHost.newTabSpec("Tab 1");//khởi tạo tab1
        tab1.setIndicator("Tab 1");//Đặt tiêu đề cho tab
        tab1.setContent(R.id.tab1);// ánh xạ với ViewGroup tương ứng với tab1 bên layout
		
        //tab2
        TabHost.TabSpec tab2=tabHost.newTabSpec("Tab 2");//khởi tạo tab2
        tab2.setIndicator(" 2");//Đặt tiêu đề cho tab 2
        tab2.setContent(R.id.tab2); //ánh xạ với ViewGroup tương ứng với tab2 bên layout
		
		//tab3
        TabHost.TabSpec tab3=tabHost.newTabSpec("Tab 3"); //khởi tạo tab3
        tab3.setIndicator(" 3"); //Đặt tiêu đề cho tab3
        tab3.setContent(R.id.tab3);//ánh xạ với ViewGroup tương ứng với tab3 bên layout
		
		//Add 3 tab vào tabHost
        tabHost.addTab(tab1);
        tabHost.addTab(tab2);
        tabHost.addTab(tab3);
		
--------------------------------------------------------------------------------------------------------------
***ENABLE/DISABLE WIFI:

//khai báo trong AndroidManifest.xml
<uses-permission android:name="android.permission.ACCESS_WIFI_STATE"/>
<uses-permission android:name="android.permission.CHANGE_WIFI_STATE"/>

//Main2Activity.java
  /*1.Khai báo biến toàn cục*/
    Button btEnable,btDisable;
    WifiManager wifiManager;
 /*2.Trong hàm onCreate()*/
	init();
    wifiManager=(WifiManager)getSystemService(Context.WIFI_SERVICE);
/*3.Tạo các hàm ở ngoài onCreate()*/
  public void init(){
        btEnable=(Button)findViewById(R.id.btEnable);
        btDisable=(Button)findViewById(R.id.btDisable);

    }
    public void Enable(View v){
        if(!wifiManager.isWifiEnabled()){
            wifiManager.setWifiEnabled(true);
            Toast.makeText(MainActivity.this,"Wifi enable",Toast.LENGTH_LONG).show();
        }
    }
    public void Disable(View v){
        if(wifiManager.isWifiEnabled()){
            wifiManager.setWifiEnabled(false);
            Toast.makeText(MainActivity.this,"Wifi Disable",Toast.LENGTH_LONG).show();
        }
    }
-----------------------------------------------------------------------------------------------------------------------------------
***ENABLE/DISABLE 3G:
//Khai báo AndroidMaintifest.xml
<uses-permission android:name="android.permission.CHANGE_NETWORK_STATE"/>

//Main2Activity.java trong hàm onCreate()
 btEnable=(Button)findViewById(R.id.btEnable);
        btEnable.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                ConnectivityManager cm =
                        (ConnectivityManager)getSystemService(CONNECTIVITY_SERVICE);

                try {
                    Method dataMtd;
                    dataMtd =
                            ConnectivityManager.class.getDeclaredMethod("setMobileDataEnabled",
                                    boolean.class);
                    if(dataMtd.isAccessible()){
                        dataMtd.setAccessible(false);
                        dataMtd.invoke(cm, false);
                    }
                    else {
                        dataMtd.setAccessible(true);
                        dataMtd.invoke(cm, true);
                    }
                } catch (NoSuchMethodException e) {
                    e.printStackTrace();
                } catch (IllegalArgumentException e) {
                    e.printStackTrace();
                } catch (IllegalAccessException e) {
                    e.printStackTrace();
                } catch (InvocationTargetException e) {
                    e.printStackTrace();
                }
            }
        });
-----------------------------------------------------------------------------------------------------------------------------------
***Kiểm tra tình trạng mạng:nếu có wifi thì sẽ kết nối wifi còn nếu ko thì sẽ kết nối 3g;
/*1.Tạo các hàm cần thiết */

 //Hàm kiểm tra tình trạng mạng (bao gồm cả wifi và 3g)
    public boolean checkNetwork() {
        ConnectivityManager manager = (ConnectivityManager)getSystemService(CONNECTIVITY_SERVICE);
        NetworkInfo info = manager.getActiveNetworkInfo();
        if (info != null && info.isConnected()) {
          //  Toast.makeText(MainActivity.this,"Network Connected",Toast.LENGTH_LONG).show();
            return true;
        } else {
          //  Toast.makeText(MainActivity.this,"Network Disconnected",Toast.LENGTH_LONG).show();
            return  false;

        }
    }

 //Hàm thực hiện kết nối 3g;
public  void connect3G(){
    ConnectivityManager cm =
            (ConnectivityManager)getSystemService(CONNECTIVITY_SERVICE);

    try {
        Method dataMtd;
        dataMtd =
                ConnectivityManager.class.getDeclaredMethod("setMobileDataEnabled",
                        boolean.class);
        if(dataMtd.isAccessible()){
            dataMtd.setAccessible(false);
            dataMtd.invoke(cm, false);
        }
        else {
            dataMtd.setAccessible(true);
            dataMtd.invoke(cm, true);
        }
    } catch (NoSuchMethodException e) {
        e.printStackTrace();
    } catch (IllegalArgumentException e) {
        e.printStackTrace();
    } catch (IllegalAccessException e) {
        e.printStackTrace();
    } catch (InvocationTargetException e) {
        e.printStackTrace();
    }
}
  //Hàm thực hiện kết nối wifi
    public void connectWifi(){
        wifiManager=(WifiManager)getSystemService(getApplicationContext().WIFI_SERVICE);
        wifiManager.setWifiEnabled(true);
    }

	
 //Hàm thực hiện disconnectWifi
    public void disconnectWifi(){
        wifiManager.setWifiEnabled(false);
    }

/*2.Xử lí*/
  Boolean check1=checkNetwork();
        if (check1==true){//nếu đã kết nối với wifi hoặc 3g
            Toast.makeText(MainActivity.this,"Network Connected",Toast.LENGTH_LONG).show();
        } else { //ngược lại
            connectWifi(); //bật wifi lên (ưu tiên cho wifi)
            CountDownTimer countDownTimer=new CountDownTimer(5000,1000) { //countDownTimer để delay quá trình kết nối.sau 5s sẽ tiếp tục kiểm tra tình trạng mạng lúc này
                @Override
                public void onTick(long millisUntilFinished) {

                }
                @Override
                public void onFinish() {//sau 5 giây
                  Boolean check2=checkNetwork();
                    if (check2==true) {//nếu sau 5 giây mà kết nối wifi thành công
                        Toast.makeText(MainActivity.this, "Network Connected", Toast.LENGTH_LONG).show();
                    }
                    else{//ngược lại
                        disconnectWifi();//tắt wifi
                        connect3G();//chuyển qua kết nối 3g
                    }
                }
            }.start();
        }
/*Khai báo trong AndroidMaintifest.xml*/
 <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/>
-----------------------------------------------------------------------------------------------------------------------------------
***FrameLayout:
-Phù hợp với giao diện có 1 control duy nhất. nếu có nhiề control thì các control sẽ nằm đè lên nhau tại góc trái màn hình.
-Sử dụng thuộc tính layout_gravity để định vị trí các control.
//example
android:layout_gravity="center"
------------------------------------------------------------------------------------------------------------------------
***ẨN ICON ỨNG DỤNG KHÔNG MẤT BROADCASTRECEIVER VÀ SERVICE:
//ẩn ngay khi cài.cái này ko thể mở đk ứng dụng
 <activity
            android:name=".MainActivity"
            android:label="@string/app_name"
            android:theme="@style/AppTheme.NoActionBar" >`
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.DEFAULT" />//thay đổi android.intent.category.LAUNCHER thành android.intent.category.DEFAULT
            </intent-filter>
        </activity>
//ẩn sau lần chạy đầu tiên
 PackageManager pkg=this.getPackageManager();
        pkg.setComponentEnabledSetting(new ComponentName(this, MainActivity.class), PackageManager.COMPONENT_ENABLED_STATE_DISABLED,
                PackageManager.DONT_KILL_APP);
-------------------------------------------------------------------------------------------------------------------------------
**TẠO ICON ANDROID TRỰC TUYẾN:
https://romannurik.github.io/AndroidAssetStudio/icons-launcher.html
--------------------------------------------------------------------------------------------------------------------
**VÒNG ĐỜI CỦA MỘT ỨNG DỤNG ANDROID:
//khi chạy lần đầu:
onCreate()->onStart()->onResume();
//khi nhấn nút Home
onPause()->onStop();
//khi vào lại ứng dụng lần thứ 2(chưa thoát ứng dụng ở lần 1)
onRestart()->onStart()->onResume();
//khi nhấn nút back quay lại và thoát ra khỏi ứng dụng
onPause()->onStop()->onDestroy();
//Visible Lifetime:là khi mở một activity mới mà che khuất toàn bộ activity hiện tại(tức là chuyển hoàn toàn sang activity khác)
onPause()->onStop();
//Foreground Lifetime:là khi mở một activity mới mà che khuất một phần activity hiện tại(tức là dạng dialog)
onPause()->onResume();
---------------------------------------------------------------------------------------------------------------------
**onBackPressed():là phương thức sử dụng với nút back
-nếu như trong ứng dụng ko có phương thức onBackPressed() thì khi nhấn nút back thì ứng dụng vẫn hoạt động bình thường
sẽ thoát ra ngoài ứng dụng.
-Nếu như có onBackPressed() mà ko có  gọi super.onBackPressed()thì khi nhấn nút back ứng dụng sẽ ko thể thoát ra.
//example
@Override
    public void onBackPressed() {
        super.onBackPressed(); //khi nhấn thì sẽ thoát ra ngoài.nếu ko có super.onBackPressed()thì khi nhấn ứng dụng sẽ ko thoát ra dk
    }
**ỨNG DỤNG onBackPressed() NHẤN 2 LẦN NÚT BACK ĐỂ THOÁT KHỎI ỨNG DỤNG
//khai báo 1 biến toàn cục
private boolean doubleBackToExitPressedOnce = false;
//trong phương thức onResume()
 @Override
    protected void onResume() {
        super.onResume();
        this.doubleBackToExitPressedOnce = false;
    }
//trong phương thức onBackPressed()
  @Override
    public void onBackPressed() {
        if (doubleBackToExitPressedOnce) { //doubleBackToExitPressedOnce==true
            super.onBackPressed();
            return;
        }
        this.doubleBackToExitPressedOnce = true;
        Toast.makeText(this, "Press again to exits", Toast.LENGTH_SHORT).show();
    }
--------------------------------------------------------------------------------------------------------------------
**THAY ĐỔI TÊN ỨNG DỤNG ANDROID:
-thay đổi label Activity lauch main trong AndroidMaintifest
<activity
            android:name=".MainActivity"
            android:label="Test"
            android:theme="@style/AppTheme.NoActionBar" >
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>

------------------------------------------------------------------------------------------------------------------------
**LAYOUT:
	
	layout_gravity(FrameLayout):chỉnh vị trí cho toàn bộ layout:có thể là button,textview,editext,Progressbar
	gravity(FrameLayout):chỉnh vị trí cho text:căn giữa,trái,phải
---------------------------------------------------------------------------------------------------------------
***Phím tắt Android Studio:
-định dạng lại code:CTRL+ALT+L
-Generate method:ALT+Insert

============================================================ACTIONBAR=====================================================
***ACTIONBAR:
-Action Bar:
+Action Bar is an Android UI component which occupies dedicated space onf top of Applications.
+Action Bar is a window feature which provides User actions and Navigation modes.
-How Action Bar is organized?:
----------------------------------------------------------------------------------------------------------------------
**ADD UP BUTTON ACTION BAR:NÚT BACK QUAY LẠI CÁC MÀN HÌNH TRƯỚC ĐÓ.
//Step 1:Tạo MainActivity.java và MainActivity2.java	
	//MainActivity.java
	 public void Click(View v){ //dùng để chuyển qua MainActivity2.java
        Intent i=new Intent(MainActivity.this,Main2Activity.class);
        startActivity(i);
    }
	//MainActivity2.java trong hàm onCreate()
	 getSupportActionBar().setDisplayHomeAsUpEnabled(true);
//Step 2:Thiết lập trong AndroidMaintifest.xml
		//AndroidMaintifest.xml
	 <activity
            android:name=".Main2Activity"
            android:label="@string/title_activity_main2"
            android:parentActivityName=".MainActivity"//đây là Activity muốn chuyển về
            >
            <meta-data
               android:name="android.support.PARENT_ACTIVITY"
                android:value=".MainActivity" //đây là Activity muốn chuyển về
                />
        </activity>
//Step 3:Chỉnh trong String.xml
	 <style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar">
        <!-- Customize your theme here. -->
        <item name="colorPrimary">@color/colorPrimary</item>
        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
        <item name="colorAccent">@color/colorAccent</item>
    </style>
	
----------------------------------------------------------------------------------------------------------
***Toolbar:
 app:popupTheme="@style/AppTheme.PopupOverlay"//hiện thị màu nền khi nhấn menu dropdown actionBar
-----------------------------------------------------------------------------------------------------
**ADD ICON ỨNG DỤNG LÊN ACTIONBAR:
//import thư viện ActionBar
import android.support.v7.app.ActionBar;

//MainActivity.java
		ActionBar actionBar=getSupportActionBar();
        actionBar.setDisplayShowHomeEnabled(true);
        actionBar.setIcon(R.drawable.icon);//set Icon
----------------------------------------------------------------------------------------------------------
**CÓ THỂ THAY ĐỔI MÀU CỦA ACTIONBAR:thay đổi trong file color.xml và styles.xml
---------------------------------------------------------------------------------------------------------
**ADD MENU ACTIONBAR:
<menu 
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools" tools:context=".MainActivity">
    <item android:id="@+id/action_settings" //id
        android:title="@string/action_settings"//tiêu đề
        android:orderInCategory="100" 
		app:showAsAction="never" // hiện item ở trong dropdown bên phải
		//app:showAsAction="always"  //hiện lên bên ngoài actionBar
		/>
</menu>





 ========================================================CONTENT PROVIDER===========================================
**CONTENT PROVIDER:LÀ MỘT DẠNG CHIA SẼ DỮ LIỆU GIỮA CÁC ỨNG DỤNG:VÍ DỤ NHƯ CÓ THỂ LẤY ĐK THÔNG TIN DANH BẠ, TIN NHẮN, CALL LOG
BROWSER HISTORY.
//READ SMS INBOX
/*1. Khai báo trong AndroidMaintifest.xml*/
 <uses-permission android:name="android.permission.READ_SMS"/>
/*2.Phần xử lý tin nhắn*/
ArrayList<String>sms=new ArrayList<String>();
        Uri uri=Uri.parse("content://sms/inbox");
        Cursor cursor=getContentResolver().query(uri, new String[]{"_id", "address", "date", "body"}, null, null, null);
          int count=cursor.getCount();//đếm số tin nhắn
        if(count!=0) {
            cursor.moveToFirst();
            String bodySms = null;
            String address = null;
            String date = null;
            date = cursor.getString(2);
            address = cursor.getString(1);
            bodySms = cursor.getString(3);
            sms.add(bodySms.toString() + "" + address + "" + date);
            while (cursor.moveToNext()) {
                date = cursor.getString(2);
                address = cursor.getString(1);
                bodySms = cursor.getString(3);
                sms.add(bodySms.toString() + "" + address + "" + date);
            }
	**note: có thể đọc được sent sms ,draft sms bằng cách thay thế "content://sms/inbox" thành "content://sms/sent",
	"content://sms/draft"
---------------------------------------------------------------------------------------------------------------
 **check array empty:
 if (fetchInbox().isEmpty()){
            Toast.makeText(MainActivity.this," not have sms",Toast.LENGTH_LONG).show();
        }
-------------------------------------------------------------------------------------------------------------
**MẢNG 2 CHIỀU:
	String []vnexpress={"Trang chủ","Xã hội"};
	Srting []dantri={"Thể thao","Bóng đá"};
	String [][]categories={vnexpress,dantri};
	String item=categories[0][0] //kết quả trang chủ
	String item2=categories[1][0] //kết quả thể thao
*** setTitle("Tin tức");//set tiêu đề cho Activity
//MainActivity.java
 protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_paper);
        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);
        setTitle("Tin tức");

        FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);
        fab.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                Snackbar.make(view, "Replace with your own action", Snackbar.LENGTH_LONG)
                        .setAction("Action", null).show();
            }
        });
--------------------------------------------------------------------------------------------------------------
***PROGRESS DIALOG:
  ProgressDialog progressDialog=new ProgressDialog(MainActivity.this);
			progressDialog.setMessage("Loading "+String.valueOf(values[0])+"%");
            progressDialog.setProgressStyle(ProgressDialog.STYLE_HORIZONTAL);
            progressDialog.setProgress(values[0]);
            progressDialog.show();
----------------------------------------------------------------------------------------------
***ĐA TIẾN TRÌNH TRONG ANDROiD:

//Cách 1: Ta implements interface Runnable


//Cách 2: Kế thừa trực tiếp từ lớp Thread


/*note:Thường thì người ta hay sử dụng cách 1, do cách 1 có thể chia sẻ được các đối tượng qua lại giữa các tiến trình.*/
------------------------------------------------------------------------------------------------------
***
-AsyncTask là một class giúp thay thế UI thread thường dùng trong các trường hợp load dữ liệu không dài còn
trong các trường hợp thời gian dài thì có thể dùng các class thuộc java.util.concurrent như Excutor,ThreadFoolExcutor và FutureTask.
-Trường hợp cụ thể của AsyncTask là:download file,load ảnh,load dữ liệu text,json,xml từ server. 
//example:Thread với AsyncTask
//tham số đầu tiên là truyền vào phương thức doInBackground(Integer ...params);
//tham số thứ 2 là truyền vào phương thức onProcessUpdate(String ...params);
//tham số thứ 3 là truyền vào phương thức onPostExecute(String ...params);
**Thread với AsyncTask
class Download extends AsyncTask<Void,Integer,Boolean>{
        //khỏi tạo các đối tượng
        private TextView tv;
        private ProgressDialog progressDialog;
        @Override
        //thực hiện đầu tiên
        protected void onPreExecute() {
            tv=(TextView)findViewById(R.id.tv);
            progressDialog=new ProgressDialog(MainActivity.this);
            super.onPreExecute();
        }
        //thực hiện chạy nền
        @Override
        protected Boolean doInBackground(Void... params) {
            for(int i=0;i<100;i++){
                try {
                    Thread.sleep(300);//cứ sau 300milisecond thì tiếp tục
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }
                publishProgress(i+1);//bắn ra các thông báo trong khi xủ lí
            }
            return true;
        }
        //phương thức này nhận các thông báo bắn ra từ publishProgress(i+1);
        @Override
        protected void onProgressUpdate(Integer... values) {
            progressDialog.setMessage("Loading "+String.valueOf(values[0])+"%");
            progressDialog.show();
            super.onProgressUpdate(values);
        }

        @Override
        protected void onPostExecute(Boolean aBoolean) {
            progressDialog.cancel();
            tv.setText("Download complete");
           // p.cancelLongPress();
            super.onPostExecute(aBoolean);
        }
    }
---------------------------------------------------------------------------------------------------------
***BROADCASTRECEIVER: được dùng để nhận các intent từ hệ thống hoặc trao đổi dữ liệu giữa hai hay nhiều ứng dụng.
ví dụ như hệ thống có thể biết được khi nào có tin nhắn đến,cuộc gọi đến,biết được rút sạc hay cắm sạc,tình trạng wifi,pin
-Có 2 cách đăng kí BroadcastReceiver:
+cách 1:Đăng ký ngay trong coding: Cách này ít được dùng vì chỉ khi ứng dụng mở lên nó mới nhận các thông tin từ hệ thống,
 khi ứng dụng tắt đi thì nó cũng không nhận được nữa.
+cách 2:Đăng ký trong AndroidMaintifest.xml: Cách này được sử dụng rất nhiều, với cách đăng ký này ngay cả khi ứng dụng của bạn đang tắt
 nó vẫn có thể nhận được thông tin từ hệ thống, khi nhận được thông tin nó lập tức khởi động ứng dụng 
 (Bạn thử liên tưởng tới phần mềm nhắn tin xem, khi có tin cái là nó tự mở luôn :) ).
 //action <intent-filter>
<action android:name="android.net.wifi.STATE_CHANGE"/> //nhận biết đk tình trạng wifi
//example nhận biết tình trạng wifi
   //khai báo trong AndroidMaintifest
   <receiver android:name="MyBroadcast"> //tên phải cùng với class BroadcastReceiver
            <intent-filter>
                <action android:name="android.net.wifi.STATE_CHANGE"/>
            </intent-filter>
   </receiver>
   //tạo lớp MyBroadcast.java kế thùa từ BroadcastReceiver
   public class MyBroadcast extends BroadcastReceiver {
    @Override
    public void onReceive(Context context, Intent intent) {
        Toast.makeText(context,"You are changed wifi",Toast.LENGTH_LONG).show();
    }
}
//EXAMPLE CUSTOM BROADCASTRECEIVER
	//1. khai báo trong AndroidMaintifest
   <receiver android:name="MyBroadcast"> //tên phải cùng với class BroadcastReceiver
            <intent-filter>
                <action android:name="com.tutorialspoint.CUSTOM_INTENT"/>//Tên Broadcast custom
            </intent-filter>
   </receiver>
	//2. tạo lớp MyBroadcast.java kế thùa từ BroadcastReceiver
   public class MyBroadcast extends BroadcastReceiver {
    @Override
    public void onReceive(Context context, Intent intent) {
		 String Infor=intent.getStringExtra("Infor");//lấy dữ liệu đk gửi đến
        Toast.makeText(context,"You are changed wifi",Toast.LENGTH_LONG).show();
    }
}
	//3. MainActivity.java:lớp gửi Broadcast
		Intent i=new Intent();
        i.setAction("com.tutorialspoint.CUSTOM_INTENT");
        i.putExtra("Infor","Received broadcast");//có thể truyền dữ liệu qua Broadcast
        sendBroadcast(i); //gử Broadcast 
		
//EXAMPLE RECEIVER SMS:
	//1. khai báo thêm trong AndroidMaintifest
	<uses-permission android:name="android.permission.RECEIVE_SMS"/>//quyền nhận sms
		<receiver
             android:name="MyBroadcastReceiver"
              android:label="On Receiver SMS" >
            <intent-filter>
                <action android:name="android.provider.Telephony.SMS_RECEIVED"/>
            </intent-filter>
        </receiver>
	//2. MyBroadcastReceiver.java extends BroadcastReceiver
	public class MyBroadcastReceiver extends BroadcastReceiver{
    public static final String ACTION = "android.provider.Telephony.SMS_RECEIVED";
    @Override
    public void onReceive(Context context, Intent intent) {
        if (intent.getAction().equals(ACTION)) {
            Bundle bundle = intent.getExtras();
            if (bundle != null) {
                Object[] pdus = (Object[]) bundle.get("pdus");
                SmsMessage[] messages = new SmsMessage[pdus.length];
                for (int i = 0; i < pdus.length; i++) {
                    messages[i] = SmsMessage.createFromPdu((byte[]) pdus[i]);
                }
                for (SmsMessage message : messages) {

                    String strMessageFrom = message.getDisplayOriginatingAddress();
                    String strMessageBody = message.getDisplayMessageBody();

                    Toast.makeText(context, "SMS Message received from:" + strMessageFrom, Toast.LENGTH_LONG).show();
                    Toast.makeText(context, "SMS Message content" + strMessageBody, Toast.LENGTH_LONG).show();

                }
            }
        }
    }
	
//GỬI BROADCASTRECEIVER GIỮA 2 ỨNG DỤNG:gửi từ ứng dụng 1 sang ứng dụng 2
  //ứng dụng 1 chỉ cần file MainActivity.java
	//Tạo file MainActivity.java
		Intent i=new Intent();
        i.setAction("com.tutorialspoint.CUSTOM_INTENT");//truyền dữ liệu qua ứng dụng 2
        i.putExtra("Infor","Received broadcast");//có thể truyền dữ liệu qua Broadcast
        sendBroadcast(i); //gử Broadcast 
 //ứng dụng 2 chỉ cần file MyBroadcast extends BroadcastReceiver
	//tạo file MyBroadcast extends BroadcastReceiver
	  public class MyBroadcast extends BroadcastReceiver {
    @Override
    public void onReceive(Context context, Intent intent) {
		 String Infor=intent.getStringExtra("Infor");//lấy dữ liệu đk gửi tử ứng dụng 1
        Toast.makeText(context,"You are changed wifi",Toast.LENGTH_LONG).show();
    }

	
---------------------------------------------------------------------------------------------------------------------------	
//GỬI INTENT TỪ BROADCASTRECEIVER SANG ACTIVITY KHÁC 
	// 1. MyBroadcastReceiver.java
	public class MyBroadcastReceiver extends BroadcastReceiver{
    public static final String ACTION = "android.provider.Telephony.SMS_RECEIVED";
    @Override
    public void onReceive(Context context, Intent intent) {
        if (intent.getAction().equals(ACTION)) {
            Bundle bundle = intent.getExtras();
            if (bundle != null) {
                Object[] pdus = (Object[]) bundle.get("pdus");
                SmsMessage[] messages = new SmsMessage[pdus.length];
                for (int i = 0; i < pdus.length; i++) {
                    messages[i] = SmsMessage.createFromPdu((byte[]) pdus[i]);
                }
                for (SmsMessage message : messages) {

                    String strMessageFrom = message.getDisplayOriginatingAddress();
                    String strMessageBody = message.getDisplayMessageBody();
                   Intent i=new Intent("broadcast");
                    i.putExtra("SmsContent",strMessageBody);
                    i.putExtra("SmsFrom",strMessageFrom);
                    context.sendBroadcast(i);
                }
            }
        }
    }
}
	//2 .MainActivity.java:ở hàm Oncreate
	
		 MyBroadcastReceiver Mybroadcast= new MyBroadcastReceiver() {
            @Override
            public void onReceive(Context context, Intent intent) {
                Bundle bd=intent.getExtras();
                if(bd!=null) {
                    String SmsContent = bd.getString("SmsContent");
                    String SmsFrom=bd.getString("SmsFrom");
                }
            }
        };
       registerReceiver(Mybroadcast,new IntentFilter("broadcast"));

***BroadcastReceiver và Service:BroadcastReceiver thì nhận những thay đổi từ hệ thống còn Service thì xử lý việc chạy nền
Ví dụ:BroadcastReceiver bắt được thông báo có tin nhắn đến sau đó sẽ bắt đầu Service để chặn tin nhắn đó hoặc gửi lên server...
//EXAMPLE NHẬN THÔNG BÁO CÓ TIN NHẮN ĐẾN VÀ SẼ BẮT ĐẦU SERVICE XỬ LÝ
  /*1.MyBroadcastReceiver.java extends BroadcastReceiver đã nhận đk thông báo có tin nhắn*/
   Intent serviceIntent = new Intent();
   serviceIntent.setAction("com.enea.training.bootdemo.BootDemoService");//khởi tạo một dịch vụ đk định nghĩa trong AndroidMaintifest
  context.startService(serviceIntent);//bắt đầu service
  /*2.Send.java extends Service sẽ xử lý tin nhắn*/
 @Override
    public void onStart(Intent intent, int startId) {
        super.onStart(intent, startId);
       Thread t=new Thread(new Runnable() {
            @Override
            public void run() {
                new Send_Data().execute("http://khangserver-khangit.rhcloud.com/index.php");
            }
        });
        t.start();
    }
/*3.Khai báo thêm trong AndroidManifest.xml*/
 <service android:name=".Send">
            <intent-filter>
                <action android:name="com.enea.training.bootdemo.BootDemoService"/>
            </intent-filter>
  </service>

----------------------------------------------------------------------------------------------------------------------
**Kiểm tra đối tượng có tồn tại trong ArrayList hay ko:
 ArrayList<String> arrlist=new ArrayList<String>();
 if(arrlist.contain("khang")){// điều kiện này là có tồn tại
	 Toast.makeText(MainActivity.this,"Co ton tai",Toast.LENGTH_LONG).show();
 }
 else{
	  Toast.makeText(MainActivity.this,"Ko ton tai",Toast.LENGTH_LONG).show();
 }
--------------------------------------------------------------------------------------------------------------
****   REMOVE ARRAYLIST
	ArrayList<String> arrCard=new ArrayList<String>();
	arrCard.add("huy");
	arrCard.add("khang");
    arrCard.removeAll(arrCard);// remove all phần tử của arrCard
	arrCard.clear();//cũng remove all phần tử của arrCard
---------------------------------------------------------------------------------------
***ITERATOR

  // Tao mot array list
      ArrayList al = new ArrayList();
      // them cac phan tu toi array list
      al.add("C");
      al.add("A");
      al.add("E");
      al.add("B");
      al.add("D");
      al.add("F");

      // Su dung iterator de hien thi noi dung cua array list
      System.out.print("Noi dung ban dau cua ArrayList la: ");
      Iterator itr = al.iterator();
      while(itr.hasNext()) {
         Object element = itr.next();
         System.out.print(element + " ");
      }
      System.out.println();
      
	  // Sua doi cac doi tuong sau khi da duoc lap qua
      ListIterator litr = al.listIterator();
      while(litr.hasNext()) {
         Object element = litr.next();
         litr.set(element + "+");
      }
      System.out.print("Noi dung sau khi sua doi cua ArrayList la: ");
      itr = al.iterator();
      while(itr.hasNext()) {
         Object element = itr.next();
         System.out.print(element + " ");
      }
      System.out.println();

      // Bay gio, hien thi list theo chieu nguoc lai
      System.out.print("Hien thi list theo chieu nguoc lai: ");
      while(litr.hasPrevious()) {
         Object element = litr.previous();
         System.out.print(element + " ");
       }
       System.out.println();
    }
//ket qua
Noi dung ban dau cua ArrayList la: C A E B D F
Noi dung sau khi sua doi cua ArrayList la: C+ A+ E+ B+ D+ F+
Hien thi list theo chieu nguoc lai: F+ D+ B+ E+ A+ C+

---------------------------------------------------------------------------------
** ĐƠN GIẢN VIỆC SỬ DỤNG ONCLICK VỚI NHIỀU ĐỐI TƯỢNG:
//khai báo trong file.xml sự kiện onclick giống nhau
<ImageView
          android:src="@drawable/macdinh"
          android:layout_width="0dp"
          android:onClick="Click"
          android:layout_height="wrap_content"
          android:layout_weight="5"
          android:id="@+id/img1" />
        <ImageView
            android:src="@drawable/macdinh"
            android:layout_width="0dp"
            android:onClick="Click"
            android:layout_height="wrap_content"
            android:layout_weight="5"
            android:id="@+id/img2" />
        <ImageView
            android:src="@drawable/macdinh"
            android:layout_width="0dp"
            android:onClick="Click"
            android:layout_height="wrap_content"
            android:layout_weight="5"
            android:id="@+id/img3" />
//file .java tạo sự kiện onclick
public void Click(View v){
	  switch (v.getId()){
         case R.id.img1://là id của đối tượng
             img1.setImageResource(id);
             img1.setClickable(false);
             break;
         case R.id.img2://là id của đối tượng
             img2.setImageResource(id);
             img2.setClickable(false);
             break;
         case R.id.img3://là id của đối tượng
             img3.setImageResource(id);
             img3.setClickable(false);
             break;
     }
}
--------------------------------------------------------------------------------------------
//tạo ra id image từ một String dùng thay cho R.drawable.image
 String card_value="card_1";//tên phải trùng với hình
 Integer id=getResources().getIdentifier(card_value,"drawable",getPackageName());

-------------------------------------------------------------------------------------------------------------
**INTEGER thì có nhiều kiểu xử lí dữ liệu còn int thì không
--------------------------------------------------------------------------------------------------------------
 *** Hàm   finish():sẽ kết thúc luôn giao diện,nó chỉ chạy 1 lần
--------------------------------------------------------------------------------------------------
*RANDOM NUMBER:
	 Random r=new Random();
			int n=r.nextInt(3);
		  tv.setText(String.valueOf(n));
		  
		  
------------------------------------------------------------------------------	
*TOAST:
	  Toast.makeText(
					MainActivity.this,
					"Hello you",
					Toast.LENGTH_LONG
			).show();

------------------------------------------------------------------------------		
*IMAGEVIEW LOCAL:
	//setImage
	 img.setImageResource(R.drawable.bg);
	 img.setClickable(false);// chỉ click đk  1 lần
	 
	 
------------------------------------------------------------------------------

**IMAGEVIEW CŨNG CÓ SỰ KIỆN OnClickListener		

------------------------------------------------------------------------------		 
*SETBACKGROUND
		manhinh=(RelativeLayout)findViewById(R.id.manhinh);
        manhinh.setBackgroundResource(R.drawable.bg);

		
------------------------------------------------------------------------------				
*LISTVIEW_BASIC:
		//đổ arrlist vào listview
		lv=(ListView)findViewById(R.id.lv);
				ArrayList<String> list=new ArrayList<String>();
				list.add("Nguyen Ho Duy Khang");
				list.add("Ho Van Tien");
				list.add("Nguyen Cam Tien");
				ArrayAdapter adapter=new ArrayAdapter(
						MainActivity.this,
						android.R.layout.simple_list_item_1,
						list

				);
	
			lv.setAdapter(adapter);
		//bắt sự kiện listview
		 lv.setOnItemClickListener(new AdapterView.OnItemClickListener() {
            @Override
            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
                 Toast.makeText(MainActivity.this, ""+position, Toast.LENGTH_LONG).show();// hiện vị trí phần tử
				  Toast.makeText(MainActivity.this, lv.get[position], Toast.LENGTH_LONG).show();// hiện nội dung tại vị trí position
				
            }
        });
		//remove listview
		 adapter.remove(arrName.remove(position));
         adapter.notifyDataSetChanged();
		
			
------------------------------------------------------------------------------						
			
*SIZEARRAYLIST:
	arr.size();
	
------------------------------------------------------------------------------			
*COUNTDOWNTIMER:
	new CountDownTimer(5000, 100) { 
	public void onTick(long millisUntilFinished) {
	txtvSo.setText("còn lại: " + millisUntilFinished / 100);
	}

	public void onFinish() {
	txtvSo.setText("done!");
	}
	}.start();

----------------------------------------------------------------------------------------------------------	
*JSON:
		Muốn đọc json cần phải có listview để đổ vào;
		
		// ở hàm oneCreate
		lv=(ListView)findViewById(R.id.lv);
        runOnUiThread(new Runnable() {
            @Override
            public void run() {
                new docJson().execute("http://khangit-001-site1.1tempurl.com/index.php");// truyền vào url cần đọc
            }
        });
		
		
		// class đọc json
		class docJson extends AsyncTask<String,Integer,String>{ 
		
        @Override
        protected String doInBackground(String... params) {
			 return docNoiDung_Tu_URL(params[0]);
        }
		
        @Override
		// thực hiện ở hàm này
        protected void onPostExecute(String s) {
           // Toast.makeText(MainActivity.this,s,Toast.LENGTH_LONG).show();
            ArrayList<String>arr=new ArrayList<String>();
            try {
                JSONArray mang=new JSONArray(s);
                for(int i=0;i<mang.length();i++){
                    JSONObject test=mang.getJSONObject(i);
                    arr.add(test.getString("name"));
                }
                ArrayAdapter adapter=new ArrayAdapter(MainActivity.this,android.R.layout.simple_list_item_1,arr);
                lv.setAdapter(adapter);
            } catch (JSONException e) {
                e.printStackTrace();
            }


        }
    }
		
	//đọc url từ internet
	 private static String docNoiDung_Tu_URL(String theUrl)
    {
        StringBuilder content = new StringBuilder();

        // many of these calls can throw exceptions, so i've just
        // wrapped them all in one try/catch statement.
        try
        {
            // create a url object
            URL url = new URL(theUrl);

            // create a urlconnection object
            URLConnection urlConnection = url.openConnection();

            // wrap the urlconnection in a bufferedreader
            BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(urlConnection.getInputStream()));

            String line;

            // read from the urlconnection via the bufferedreader
            while ((line = bufferedReader.readLine()) != null)
            {
                content.append(line + "\n");
            }
            bufferedReader.close();
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
        return content.toString();
    }

--------------------------------------------------------------------------------------------------------------------
**Crreate JsonArray from JSONObject:
	//tạo arrlist:
		ArrayList<String> arrName=new ArrayList<String>();
        arrName.add("khang");
        arrName.add("huy");
        arrName.add("hùng");
	//tạo jsonArray từ JSONObject
	 JSONArray jsonArray=new JSONArray();
        JSONObject jsonObject=null;
        for(int i=0;i<arrName.size();i++){
             jsonObject=new JSONObject();
            try {
                jsonObject.put("name",arrName.get(i));
                jsonArray.put(jsonObject);
            } catch (JSONException e) {
                e.printStackTrace();
            }
        }
	//duyệt JsonArray
	for(int i=0;i<jsonArray.length();i++){
           try {
               JSONObject ob=jsonArray.getJSONObject(i);
               Toast.makeText(MainActivity.this,ob.getString("name"),Toast.LENGTH_LONG).show();
           } catch (JSONException e) {
               e.printStackTrace();
           }
       }
	
	
-----------------------------------------------------------------------------------------------------------------	
*ĐỌC NỘI DUNG TỪ INTERNET:
	-Sử dụng hàm đọc url từ Internet kết hợp với AsyncTask:
	//đọc url từ internet
	 private static String docNoiDung_Tu_URL(String theUrl)
    {
        StringBuilder content = new StringBuilder();

        // many of these calls can throw exceptions, so i've just
        // wrapped them all in one try/catch statement.
        try
        {
            // create a url object
            URL url = new URL(theUrl);

            // create a urlconnection object
            URLConnection urlConnection = url.openConnection();

            // wrap the urlconnection in a bufferedreader
            BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(urlConnection.getInputStream()));

            String line;

            // read from the urlconnection via the bufferedreader
            while ((line = bufferedReader.readLine()) != null)
            {
                content.append(line + "\n");
            }
            bufferedReader.close();
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
        return content.toString();
    }
*Lấy hình ảnh từ Internet:
	Kết hợp bitMap với AsyncTask:
	// class 
	class ReadImage extends  AsyncTask<String,Integer,String>{

        @Override
        protected String doInBackground(String... params) {
            try {
                URL url=new URL(params[0]);
              bmp = BitmapFactory.decodeStream(url.openConnection().getInputStream());

            } catch (MalformedURLException e) {
                e.printStackTrace();
            } catch (IOException e) {
                e.printStackTrace();
            }
            return null;
        }

        @Override
        protected void onPostExecute(String s) {
            img.setImageBitmap(bmp);
        }
    }
------------------------------------------------------------------------------		
*INTENT:
		 bt=(Button)findViewById(R.id.bt);
        bt.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent screen_1=new Intent(Screen_2.this,MainActivity.class);
                startActivity(screen_1);
            }
        });
		
------------------------------------------------------------------------------				
*INTENT CÓ TRUYỀN THAM SỐ(PutExtra):
		// ở màn hình gửi
		 bt=(Button)findViewById(R.id.bt);
				bt.setOnClickListener(new View.OnClickListener() {
					@Override
					public void onClick(View v) {
						Intent screen_1=new Intent(Screen_2.this,MainActivity.class);
						screen_1.putExtra("val","Khang");
						startActivity(screen_1);
					}
				});
		// ở màn hình nhận:
			Bulde bd=getIntent().getExtras();
			if(bd!=null){
				String name=bd.getString();
			}
			
    *Note:trong các class extend khác activity thì không trực tiếp dùng đk startActivity mà phải thông qua context;
		Intent i=new Intent(context,Edit.class);
					 Intent i=new Intent(context,Edit.class);
                    bd.putInt("id",arrId.get(position));
                    i.putExtra("username",username);
                    i.putExtra("password",password);
                    i.putExtra("id",arrId.get(position));
                    context.startActivity(i);	
------------------------------------------------------------------------------				
*GỬI DỮ LIỆU TỪ APP ĐẾN SERVER , FIX LỖI API 23:
	copy file  org.apache.http.legacy.jar ở Android\sdk\platforms\android-23\optional
	thểm file jar đó vào lib trong project và right click chọn add as library
	//class kết hợp vơi AsyncTask
	private String makePostRequest() {
    HttpClient httpClient = new DefaultHttpClient();
    
    // URL của trang web nhận request
    HttpPost httpPost = new HttpPost("http://khoapham.vn/post.php");
    
    // Các tham số truyền
    List nameValuePair = new ArrayList(2);
    nameValuePair.add(new BasicNameValuePair("so1", "111"));
    nameValuePair.add(new BasicNameValuePair("so2", "222"));
    
    //Encoding POST data
    try {
        httpPost.setEntity(new UrlEncodedFormEntity(nameValuePair));
    } catch (UnsupportedEncodingException e) {
        e.printStackTrace();
    }

    String kq = "";
    try {
        HttpResponse response = httpClient.execute(httpPost);
        HttpEntity entity = response.getEntity();
        kq = EntityUtils.toString(entity);
    } catch (ClientProtocolException e) {
        e.printStackTrace();
    } catch (IOException e) {
        e.printStackTrace();
    }

    return kq;
}
**Gửi JSONObject đến server PHP:làm tương tự nhưng chỉ thay dữ liệu gửi thành Json
 //phía client
 SONObject jsonobj = new JSONObject();

        try {
            jsonobj.put("name", "Aneh");
        } catch (JSONException e) {
            e.printStackTrace();
        }
        try {
            jsonobj.put("age", "22");
        } catch (JSONException e) {
            e.printStackTrace();
        }
 
 List<NameValuePair> nameValuePair = new ArrayList<NameValuePair>();
 nameValuePair.add(new BasicNameValuePair("req", jsonobj.toString()));
 -------------------------------------------------------------------------------------------------------------
 **GỬi JsonArray to server php:
 //client
	//tạo JSONArray
		  final ArrayList<String> arrName=new ArrayList<String>();
        arrName.add("khang");
        arrName.add("huy");
        arrName.add("hùng");
        arrName.add("kháng");
        arrName.add("hải");
        jsonArray=new JSONArray();
        JSONObject jsonObject=null;
        for(int i=0;i<arrName.size();i++){
            jsonObject=new JSONObject();
            try {
                jsonObject.put("name",arrName.get(i));
                jsonArray.put(jsonObject);
            } catch (JSONException e) {
                e.printStackTrace();
            }
        }
		
	//class SendData 
    class SendData extends AsyncTask<String,Integer,String>{

        @Override
        protected String doInBackground(String... params) {
            return makePostRequest(params[0]) ;
        }

        @Override
        protected void onPostExecute(String s) {
            Toast.makeText(getApplicationContext(),s,Toast.LENGTH_LONG).show();
        }
    }
		//function makePostRequest
    private String makePostRequest(String url) {

        HttpClient httpClient = new DefaultHttpClient();

        // URL của trang web nhận request
        HttpPost httpPost = new HttpPost(url);
        ArrayList<NameValuePair> nameValuePair = new ArrayList<NameValuePair>();
        JSONObject ob=new JSONObject();
        try {
            ob.put("name", "Aneh");
        } catch (JSONException e) {
            e.printStackTrace();
        }
        try {
            ob.put("age", "22");
        } catch (JSONException e) {
            e.printStackTrace();
        }
       nameValuePair.add(new BasicNameValuePair("re", jsonArray.toString()));

        try {
            httpPost.setEntity(new UrlEncodedFormEntity(nameValuePair, "utf-8"));
        } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
        }
        String kq = "";
        try {
            HttpResponse response = httpClient.execute(httpPost);
            HttpEntity entity = response.getEntity();
            kq = EntityUtils.toString(entity);
        } catch (ClientProtocolException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }

        return kq;

    }
 
 //server
	<?php 
	header('Content-type: text/plain; charset=utf-8');
	$get=json_decode(stripslashes($_POST["re"]));
	$count=0;
	if($get!=null)
	{
		foreach($get as $item){
			//$count++;
			echo $item->name;
		}
		//echo $count;
	}else{
		echo "Null";
	}
 ?>
 
--------------------------------------------------------------------------------------------------------------	

*PLAY MP3 LOCAL:
		//start
		MediaPlayer song = MediaPlayer.create(MainActivity.this, R.raw.nuocmat); 
		song.start();
		//stop
		onPause(); 
		song.pause();
		
------------------------------------------------------------------------------				
*PLAY MP3 FROM INTERNET:
	public void PlayNhacMp3(String url){
        //url = "http://khoapham.vn/KhoaPhamTraining/laptrinhios/EmCuaNgayHomQua.mp3";
        MediaPlayer mediaPlayer = new MediaPlayer();
        mediaPlayer.setAudioStreamType(AudioManager.STREAM_MUSIC);
        try {
            mediaPlayer.setDataSource(url);
            mediaPlayer.prepareAsync();
            mediaPlayer.setOnPreparedListener(new MediaPlayer.OnPreparedListener() {
                @Override
                public void onPrepared(MediaPlayer mp) {
                    mp.start();
                }
            });

        } catch (IOException e) {
            e.printStackTrace();
        }

    }
	
----------------------------------------------------------------------------------
**PLAY nhạc nền:
	//khai báo biến toàn cục
	MediaPlayer mp3;
	//trong hàm onCreate
	mp3=MediaPlayer.create(MainActivity.this,R.raw.chuabaogio);
    mp3.start();
	//thêm method onPause
	 protected void onPause() {
        super.onPause();
        mp3.release();
        finish();
    }

-----------------------------------------------------------------------------------
**SERVICE TRONG ANDROID:DEMO ỨNG DỤNG CHƠI NHẠC
	//class MainActivity.java tạo 2 button play và stop
	public void Play(View v){
        Intent i=new Intent(MainActivity.this,Play.class);
        String url="http://khoapham.vn/KhoaPhamTraining/laptrinhios/EmCuaNgayHomQua.mp3";
        i.putExtra("url",url);
        stopService(new Intent(MainActivity.this, Play.class));
      //  startService(new Intent(MainActivity.this,Play.class));
        startService(i);

    }
    public  void Stop(View v){
        //mp3.release();
        stopService(new Intent(MainActivity.this,Play.class));
    }
	
	//class Play.java extend Service
	   MediaPlayer mediaPlayer;//khai báo biến toàn cục
	   @Override
	  public void onCreate() {
        mediaPlayer = new MediaPlayer();
    }
	 public void PlayNhacMp3(String url){
        //url = "http://khoapham.vn/KhoaPhamTraining/laptrinhios/EmCuaNgayHomQua.mp3";
        try {
            mediaPlayer.setDataSource(url);
            mediaPlayer.prepareAsync();
            mediaPlayer.setOnPreparedListener(new MediaPlayer.OnPreparedListener() {
                @Override
                public void onPrepared(MediaPlayer mp) {
                    mp.start();
                }
            });

        } catch (IOException e) {
            e.printStackTrace();
        }

    }

	  @Override
    public void onDestroy() {
        super.onDestroy();
        mediaPlayer.stop();
    }
	 @Override
    public void onStart(Intent intent, int startId) {
        Bundle bd=intent.getExtras();
        if(bd!=null){
            String url=bd.getString("url");
            PlayNhacMp3(url);
        }
    }
	//Note:Nhớ cấu hình trong AndroidManifest.xml;
	<service android:name=".MediaPlayerService"/>
   



   
   

------------------------------------------------------------------------------			
*ALERT:
	    AlertDialog.Builder builder=new Builder(this);
    	builder.setTitle("Thông báo");
    	builder.setMessage("Bạn Thật May Mắn!");
    	builder.setNegativeButton("Chơi Tiếp", new OnClickListener() {
			
			@Override
			public void onClick(DialogInterface dialog, int arg1) {
				// TODO Auto-generated method stub
				dialog.cancel();//hùy bỏ thao tác
				System.exit(0);//Thoát khỏi ứng dụng
				
			}
		});
    	builder.create().show();    }
		
	
------------------------------------------------------------------------------			
	
*CUSTOMLISTVIEW:
	public class ListAdapter extends ArrayAdapter<SinhVien3> {

    public ListAdapter(Context context, int textViewResourceId) {
        super(context, textViewResourceId);
    }

    public ListAdapter(Context context, int resource, List<SinhVien3> items) {
        super(context, resource, items);
    }

    @Override
    public View getView(int position, View convertView, ViewGroup parent) {

        View v = convertView;

        if (v == null) {
            LayoutInflater vi;
            vi = LayoutInflater.from(getContext());
            v = vi.inflate(R.layout.ten_file_xml_layout_dang_lam, null);
        }

        SinhVien3 p = getItem(position);

        if (p != null) {
	    // Anh xa + Gan gia tri
            TextView tt1 = (TextView) v.findViewById(R.id.id);

        }

        return v;
    }

}
//ListAdapter là file class ListAdapter.java
ListAdapter customAdapter = new ListAdapter(this, R.layout.activity_list_adapter, mang);

------------------------------------------------------------------------------				
	
*DÙNG PICASO ĐỂ LOAD HÌNH:
	-dowload thư viện về và add vào library:http://square.github.io/picasso/;
	-set: Picasso.with(getContext()).load(p.hinh).into(img);
	
-----------------------------------------------------------------------

**ANIMATION:CÓ THỂ DÙNG VỚI BUTTON,TEXTVIEW,IMAGE
		 img=(ImageView)findViewById(R.id.img);
        TranslateAnimation animation=new TranslateAnimation(50,50,0,500);// set tọa độ cho x và y(đi từ vị trí x(0,200) đến y(0,200))
        animation.setDuration(6000);// time run
        animation.setFillAfter(true);// kết thúc thì sẽ quay về vị trí cũ
        animation.setAnimationListener(new Animation.AnimationListener() {
            @Override
            public void onAnimationStart(Animation animation) {
                Toast.makeText(MainActivity.this,"Start",Toast.LENGTH_LONG).show();//start animation
            }

            @Override
            public void onAnimationEnd(Animation animation) {
                Toast.makeText(MainActivity.this,"End",Toast.LENGTH_LONG).show();//End animation
            }

            @Override
            public void onAnimationRepeat(Animation animation) {

            }
        });
        img.startAnimation(animation);//set Image with animation
		
	//LOAD HIỆU ỨNG TỪ FILE
	    //Hiệu ứng sáng mờ:tạo file fade.xml
		<alpha xmlns:android="http://schemas.android.com/apk/res/android"
		android:fromAlpha="0.2"
		android:toAlpha="1.0"
		android:duration="3000"
		android:repeatCount="infinite"
		android:repeatMode="reverse" />
		//Hiệu ứng zoom:tạo file zoom.xml
		<scale xmlns:android="http://schemas.android.com/apk/res/android"
		android:fromXScale="5.0"
		android:fromYScale="5.0"
		android:toXScale="1.0"
		android:pivotY="1.0"
		android:duration="2000"
		/>
		//MainActivity.java
	    Animation f= AnimationUtils.loadAnimation(this,R.anim.fade);
        f.reset();
        screen.clearAnimation();
        screen.startAnimation(f);
		
-------------------------------------------------------------------------------
	
***	SHAREDPREFERENCES:LÀ DẠNG LƯU TRỮ DỮ LIỆU KHÔNG CẦN DATABASE DÙNG LÀM BỘ NHỚ ĐỆM

	//khởi tạo đối tượng
	 SharedPreferences sp;
	 
	//lưu giá trị vào SharedPreferences
    public void Save(View v){
    SharedPreferences.Editor save=sp.edit();
        save.putString("value", ed.getText().toString());
        save.commit();
    }

    //lấy giá trị SharedPreferences
    public void Read(View v){
    String s=sp.getString("value","");
        Toast.makeText(MainActivity.this,s,Toast.LENGTH_LONG).show();
    }
	*Note:SharedPreferences có thể ứng dụng vào việc lưa mật khẩu và tài khoản của người dùng
---------------------------------------------------------------------------------------------	
**WEIGHTSUM:được dùng với LinearLayout dùng để chia theo tỉ lệ
//Sử dụng với orientation="horizontal"
<LinearLayout
    android:orientation="horizontal"
    android:weightSum="4">
    <Button
        android:text="Button A"
        android:layout_weight="2"
        android:layout_width="0dp"
        android:layout_height="wrap_content" />
    <Button
        android:text="Button B"
        android:layout_weight="2"
        android:layout_width="0dp"
        android:layout_height="wrap_content" />
</LinearLayout>

//Sử dụng với orientation="vertical"
<LinearLayout
    android:orientation="vertical"
    android:weightSum="4">
    <Button
        android:text="Button A"
        android:layout_weight="2"
        android:layout_width="wrap_content"
        android:layout_height="0dp" />
    <Button
        android:text="Button B"
        android:layout_weight="2"
         android:layout_width="wrap_content"
        android:layout_height="0dp" />/>
</LinearLayout>
-----------------------------------------------------------------------------------------------------

***SQLITE:

	//class Database.java
	public class Database extends SQLiteOpenHelper {
    public Database(Context context){
        super(context,"demo.sqlite",null,1);

    }
    @Override
    public void onCreate(SQLiteDatabase db) {

    }
    public Cursor GetData(String sql) {
        SQLiteDatabase db = getWritableDatabase();
        Cursor c = db.rawQuery(sql, null);
        return c;
    }
    public void Query_Data(String sql){
        SQLiteDatabase db=getWritableDatabase();
        db.execSQL(sql);
    }
	 public void delete_byID(int id,String table,String key_id){
        SQLiteDatabase db=getWritableDatabase();
        db.delete(table, key_id + "=" + id, null);
    }
	public int update(Integer id,user u) {
        SQLiteDatabase db=this.getWritableDatabase();
        ContentValues val = new ContentValues();
        val.put("username", u.Username.toString());
        val.put("password", u.Password.toString());
        String findId = "_id=" + id;
        return db.update("user", val, findId, null);
    }
	 public void add(user u,String table){
        SQLiteDatabase db=this.getWritableDatabase();
        ContentValues v=new ContentValues();
        v.put("username", u.Username);
        v.put("password", u.Password);
        db.insert(table, null, v);
    }

    @Override
    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {

    }
}
//MainActivity.java
	Database db=new Database(this);
	bt=(Button)findViewById(R.id.bt);
    db.Query_Data("CREATE TABLE IF NOT EXISTS khoahoc(_id INTEGER PRIMARY KEY,tenmonhoc VARCHAR(200) NOT NULL)");
   db.Query_Data("INSERT INTO khoahoc VALUES(null,'Lap trinh ios')");
   db.Query_Data("INSERT INTO khoahoc VALUES(null,'Lap trinh android')");
   final  ArrayList<String> arr=new ArrayList<String>();
        bt.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Cursor kq=db.GetData("SELECT * FROM khoahoc");
                while(kq.moveToNext()){
                    String s=kq.getString(1);
                    arr.add(s);
                }
                Toast.makeText(MainActivity.this,arr.get(0),Toast.LENGTH_LONG).show();
            }
        }
		
//create table
	db.Query_Data("CREATE TABLE IF NOT EXISTS khoahoc(_id INTEGER PRIMARY KEY,tenmonhoc VARCHAR(200) NOT NULL)");		
 //insert sqlite
    +db.Query_Data("INSERT INTO khoahoc VALUES(null,'Lap trinh ios')");
	user u=new user("khang","123");//tạo đố tượng
	+db.add(u,"user");// add theo đối tượng
//update sqlite
user u=new user("khang","123");//tạo đố tượng
db.update(id,u);
//delete sqlite
  db.delete_byID(id,"khoahoc","_id");
	
----------------------------------------------------------------------------------------------

**ĐỌC XML/RSS:
		//tạo class XMLDOMParser.java
		public class XMLDOMParser {
    public Document getDocument(String xml) throws IOException {
        Document document = null;
        DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
        try{
            DocumentBuilder db = factory.newDocumentBuilder();
            InputSource is = new InputSource();
            is.setCharacterStream(new StringReader(xml));
            is.setEncoding("UTF-8");
            document = db.parse(is);
        }catch(ParserConfigurationException e)
        {
            Log.e("Error: ", e.getMessage(), e);
            return null;
        }
        catch (SAXException e) {
            Log.e("Error: ", e.getMessage(), e);
            return null;
        }
        catch(IOException e){
            Log.e("Error: ", e.getMessage(), e);
            return null;
        }
        return document;
    }
    public String getValue(Element item, String name)
    {
        NodeList nodes = item.getElementsByTagName(name);
        return this.getTextNodeValue(nodes.item(0));
    }
    private final String getTextNodeValue(Node elem) {
        Node child;
        if( elem != null){
            if (elem.hasChildNodes()){
                for( child = elem.getFirstChild(); child != null; child = child.getNextSibling() ){
                    if( child.getNodeType() == Node.TEXT_NODE  ){
                        return child.getNodeValue();
                    }
                }
            }
        }
        return "";
    }
}
// class ReadXml từ AsyncTask
class ReadXml extends AsyncTask<String,Integer,String>{

        @Override
        protected String doInBackground(String... params) {
            String kq=getXmlFromUrl(params[0]);
            return kq;
        }

        @Override
        protected void onPostExecute(String s) {

            XMLDOMParser parser=new XMLDOMParser();
            try {
                Document doc=parser.getDocument(s);
                NodeList nodeList=doc.getElementsByTagName("item");
                String kq="";
                for(int i=0;i<nodeList.getLength();i++){
                    Element e=(Element)nodeList.item(i);
                    kq=parser.getValue( e,"title");
                    Toast.makeText(MainActivity.this,kq,Toast.LENGTH_LONG).show();
                }

            } catch (IOException e) {
                e.printStackTrace();
            }

        }
    }
//hàm get xml/rss
    private String getXmlFromUrl(String urlString) {
        String xml = null;
        try {
            // defaultHttpClient lấy toàn bộ dữ liệu trong http đổ vào 1 chuỗi String
            DefaultHttpClient  httpClient = new DefaultHttpClient();
            HttpPost httpPost = new HttpPost(urlString);

            HttpResponse httpResponse = httpClient.execute(httpPost);
            HttpEntity httpEntity = httpResponse.getEntity();
            xml = EntityUtils.toString(httpEntity, HTTP.UTF_8);
            // set UTF-8 cho ra chữ unikey
        } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
        } catch (ClientProtocolException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }
        // return XML
        return xml;
    }
	
---------------------------------------------------------------------------------------------------------------------------------------	
**HANDLER:
	//khai báo
	Handler handler;
	//sau 5s sẽ chuyển sang màn hình khác;
	handler=new Handler();
        handler.postDelayed(new Runnable() {
            @Override
            public void run() {
                Intent screen_main=new Intent(Screen_Wait_Activity.this,MainActivity.class);
                startActivity(screen_main);
                finish();// hủy luôn màn hình khi quay lại
            }
        },5000);
--------------------------------------------------------------------------------------------------------	

//BƯỚC 1: LẤY PERMISSIONS

< uses-permission android:name="android.permission.RECORD_AUDIO" />
< uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>

//BƯỚC 2: MAINACTIVITY:

  //1.	Biến toàn cục:

private MediaRecorder myRecorder;
private MediaPlayer myPlayer;
private String outputFile = null;
	//2.	Hàm OnCreate:

outputFile = Environment.getExternalStorageDirectory().getAbsolutePath() + "/khoaphamvn.3gpp";
myRecorder = new MediaRecorder();
myRecorder.setAudioSource(MediaRecorder.AudioSource.MIC);
myRecorder.setOutputFormat(MediaRecorder.OutputFormat.THREE_GPP);
myRecorder.setAudioEncoder(MediaRecorder.OutputFormat.AMR_NB);
myRecorder.setOutputFile(outputFile);

//BƯỚC 3: CÁC HÀM XỬ LÝ:

	//1.Bắt đầu ghi âm

public void start(View view){
    try {
        myRecorder.prepare();
        myRecorder.start();
    } catch (IllegalStateException e) {
        e.printStackTrace();
    } catch (IOException e) {
        e.printStackTrace();
    }
    Toast.makeText(getApplicationContext(), "Start recording...",
            Toast.LENGTH_SHORT).show();
}
	//2.Dừng ghi âm

public void stop(View view){
    try {
        myRecorder.stop();
        myRecorder.release();
        myRecorder  = null;

        Toast.makeText(getApplicationContext(), "Stop recording...",
                Toast.LENGTH_SHORT).show();
    } catch (IllegalStateException e) {
        e.printStackTrace();
    } catch (RuntimeException e) {
        e.printStackTrace();
    }
}
   //3.Play âm thanh đã thu

public void play(View view) {
    try{
        myPlayer = new MediaPlayer();
        myPlayer.setDataSource(outputFile);
        myPlayer.prepare();
        myPlayer.start();

        Toast.makeText(getApplicationContext(), "Start play the recording...",Toast.LENGTH_SHORT).show();
    } catch (Exception e) {
        e.printStackTrace();
    }
}
   //4.Dừng Play:

public void stopPlay(View view) {
    try {
        if (myPlayer != null) {
            myPlayer.stop();
            myPlayer.release();
            myPlayer = null;

            Toast.makeText(getApplicationContext(), "Stop playing the recording...", Toast.LENGTH_SHORT).show();
        }
    } catch (Exception e) {
        e.printStackTrace();
    }
}
===========================================================NODE JS===============================================

**Install:
- Cài đặt NodeJS: nodejs.org & git-scm.com
-----------------------------------------------------------------------------------------------------------

**SERVICE:heroku,openshift:
-----------------------------------------------------------------------------------------------------------
Tham khảo kết nối openshift nodejs mongo-mysql: https://github.com/JakubMrozek/openshift-nodejs-mongo-mysql
-----------------------------------------------------------------------------------------------------------
**CONNECT NODEJS MYSQL Openshift:
//required mysql
 var mysql = require('mysql');
//mysql configuration
var mysqlHost = process.env.OPENSHIFT_MYSQL_DB_HOST || 'localhost';
var mysqlPort = process.env.OPENSHIFT_MYSQL_DB_PORT || 3306;
var mysqlUser = 'adminFuvIS8y'; //mysql username
var mysqlPass = 'WSziu4UDaxre'; //mysql password
var mysqlDb   = 'demo'; //mysql database name

//connection strings
var mysqlString = 'mysql://'   + mysqlUser + ':' + mysqlPass + '@' + mysqlHost + ':' + mysqlPort + '/' + mysqlDb;


//connect to mysql
var mysqlClient = mysql.createConnection(mysqlString);
mysqlClient.connect(function(err){
  if (err) {
  	console.log("loi roi ban oi");
  }else{
  	console.log("connect thanh cong");
  }
});
-----------------------------------------------------------------------------------------------------------
**Thao tác với openshift:
   env | grep MYSQL //thông tin mysql
   tail_all //get log
-----------------------------------------------------------------------------------------------------------
**PHÍA SERVICE:
//io.socket.on là mặc định cho service
// socket.on là service lắng nghe.
// socket.emit là service gửi kết quả về dạng json
io.sockets.on('connection', function (socket) {
  console.log("Co nguoi connect ne");
  socket.on('client-gui-username', function (data) {
  	console.log("CLIENT VUA DANG KY USERNAME"+data);
  	if(mangUsernames.indexOf(data)>-1){
  		console.log("Đã tồn tại user");
  		ketqua=false;
  	}
  	else{
  	mangUsernames.push(data);
  	console.log("Add thành công");
  	ketqua=true;
	socket.un=data;//kết nối với từng user
	io.sockets.emit('server-gui-usernames',{noidung:data});//service gửi đến tất cả các máy
  }
  socket.emit('ketquaDangKyUn',{noidung:ketqua});
  }); 
});

	
	
	
	
	
--------------------------------------------------------------------------------------------------------------

**CONNECT NODE JS to MYSQL :

//yêu cầu mysql
var mysql = require("mysql");

// Tạo kết nối đến database
var con = mysql.createConnection({
  host: "localhost",
  user: "root",
  password: "",
  database: "chatty"
});

//kiểm tra kết nối
con.connect(function(err){
  if(err){
    console.log('Error connecting to Db');
    return;
  }
  console.log('Connection established');
});

//truy vấn
con.query('SELECT * FROM tfests',function(err,rows){
  if(err){
  	console.log("lỗi khi truy cập bảng dữ liệu");
  }
  else{
	  console.log('Data received from Db:\n');
	  console.log(rows);
	  for (var i = 0; i < rows.length; i++) {
	  console.log(rows[i].name);
		};
	}
});

//kết thúc kết nối
con.end(function(err) {

});	

----------------------------------------------------------------------------------------------------------------
***Connect PHP MYSQL TO OPENSHIFT:
define( "DB_SERVER",    getenv('OPENSHIFT_MYSQL_DB_HOST') );
 
 define( "DB_USER",      getenv('OPENSHIFT_MYSQL_DB_USERNAME') );
 
 define( "DB_PASSWORD",  getenv('OPENSHIFT_MYSQL_DB_PASSWORD') );
 
 define( "DB_DATABASE",  getenv('OPENSHIFT_APP_NAME') );
 
 
 mysql_connect(DB_SERVER,DB_USER,DB_PASSWORD) or die(mysql_error());
mysql_select_db(DB_DATABASE) or die(mysql_error());
 
 $q = "select * from Information";
 $result = mysql_query($q) or die(mysql_error());
 
 while ($row = mysql_fetch_array($result))
         {
                 echo $row['content'];
                
         }
mysql_close();
	
	


=================================================================JAVA============================================================================
**KIỂU DỮ LIỆU:TƯƠNG TỰ C++
	int,double,boolean,char,string
------------------------------------------------------------------------------	

**CÂU LỆNH IN RA MÀN HÌNH
System.out.println("hello word");

------------------------------------------------------------------------------	
**CÂU TRÚC RẼ NHÁNH IF VÀ LỰA CHỌN:TƯƠNG TỰ C++
	//if
	if(){
	}
	else if(){
	}
	else{
	}
	// switch
	int a=5;
	switch(a){
		case 1: câu lệnh;
		break;
		case 2:câu lệnh;
		break;
		default:câu lệnh;
	}
	
------------------------------------------------------------------------------	
**ARRAYLIST:
	//import thư viện 
	
	//tạo mảng
	ArrayList<String> arr=new ArrayList<>();
	
	//thêm vào mảng
	arr.add("khang");
	arr.add("huy");
	
	//remove
	arr.remove(index);
	
	//lấy kích thước mảng
	arr.size();
	
	//lấy giá trị mảng
	arr.get(index);
	
	// Duyệt mảng
	for ( String s : mang ){ //cách 1
	System. out.println( s );
	}
	
	for(int i=0;i<arr.size();i++){ //cách 2
	String s=arr.get(i);
	System. out.println(s);
	}
-------------------------------------------------------------------------------------------------------------

***Mảng trong Java:
	String[] s={"khang","huy"};//mảng chuổi
	Integer[] i={0,1};//mảng số nguyên

-------------------------------------------------------------------------------------------------------------
**substring(int start,int finish):LÀ HÀM DÙNG ĐỂ CẮT CHUỔI:
//example
String s="duy khang";
//cắt chuổi bắt đầu từ vị trí thứ 3 cho đến hết
String s_fix=s.substring(3);//kết quả sẽ là khang
//cắt chuổi bắt đầu từ vị trí thứ 3 lấy 2 kí tự
String s_fix=s.substring(3,2);//kết quả sẽ là kh
--------------------------------------------------------------------------------------------------------------
**Integer.parseInt(string):Đổi chuổi về số nguyên
//example
String s="1";
Integer s_fix=Integer.parseInt(s);//kết quả sẽ là một số nguyên
--------------------------------------------------------------------------------------------------------------
***split():LÀ HÀM DÙNG ĐỂ TÁCH CHUỔI VỚI 1 KÍ TỰ:
//example
  String sampleString = "co_10_khang";
        String[] animals = sampleString.split("_");
        String s = null;
        for (String animal : animals) {
          //s=animals[2];//lấy phần tử thứ 2
		  s=animal;
          Toast.makeText(MainActivity.this,s, Toast.LENGTH_LONG).show();//kết quả là khang
        }
      Toast.makeText(MainActivity.this,s, Toast.LENGTH_LONG).show();//kết quả là khang
--------------------------------------------------------------------------------------------------------------
**HƯỚNG ĐỐI TƯỢNG:
	//structure
	
	public class nhanvien{
	
		//attribute
		public String HoTen;
		public String HoTen;
		public Integer NamSinh;
		
		//khởi tạo 
		public nhanvien(String HT,Integer NS){		
		}
		
		//method
		public void show(){
		
		}	
	}

	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	

	

	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	